{"version":3,"sources":["state/actions/history.tsx","state/actions/chi.tsx","perks/constants/discounts.tsx","perks/discounts.tsx","state/discounts.tsx","data/loresheets/types.tsx","data/loresheets/core/riversandlakes/jianghu.tsx","perks/constants/bonuses.tsx","perks/actions/bonuses.tsx","data/loresheets/core/riversandlakes/crouchingtigersandhiddendragons.tsx","perks/constants/automatics.tsx","data/loresheets/secret-arts/thewarriorsart/thesecretartofbattle.tsx","perks/actions/automatics.tsx","data/loresheets/index.tsx","data/loresheets/core/riversandlakes/wulin.tsx","data/loresheets/core/riversandlakes/wulinsage.tsx","data/loresheets/secret-arts/thewarriorsart/extraordinarywarriortechniques.tsx","data/kungfu/types.tsx","perks/constants/effects.tsx","perks/actions/effects.tsx","data/kungfu/externals/blossom-harvest.tsx","data/kungfu/externals/bone-fed-wolf-fang.tsx","data/kungfu/internals/boundless-prosperity-manual.tsx","data/kungfu/internals/fire-sutra.tsx","data/kungfu/index.tsx","state/costs.tsx","data/chi.tsx","state/chi.tsx","data/archetypes.tsx","data/virtues.tsx","data/skills.tsx","perks/actions/discounts.tsx","data/ranks.tsx","state/actions/header.tsx","perks/bonuses.tsx","state/derived.tsx","state/skills.tsx","state/loresheets.tsx","state/bonuses.tsx","state/header.tsx","state/actions/kungfu.tsx","state/kungfu.tsx","state/reducers/kungfu.tsx","state/actions/loresheets.tsx","state/actions/skills.tsx","state/actions/virtues.tsx","state/virtues.tsx","state/reducers/virtues.tsx","state/reducers/global.tsx","state/reducers/chi.tsx","state/reducers/header.tsx","state/reducers/history.tsx","state/reducers/loresheets.tsx","state/reducers/skills.tsx","state/history.tsx","state/automatics.tsx","perks/automatics.tsx","state/initial.tsx","state/middleware/automatics.tsx","serviceWorker.ts","components/AppHeader/index.tsx","components/AppIntro/index.tsx","components/AppPage/index.tsx","components/FieldHeader.tsx","components/DDLText.tsx","components/Character/Archetype.tsx","containers/Character/Archetype.tsx","components/EditText.tsx","components/Character/Concept.tsx","containers/Character/Concept.tsx","components/StaticText.tsx","components/Character/Destiny.tsx","containers/Character/Destiny.tsx","components/Character/Entanglement.tsx","containers/Character/Entanglement.tsx","components/Character/Name.tsx","containers/Character/Name.tsx","components/Character/Rank.tsx","containers/Character/Rank.tsx","routes/Homepage.tsx","components/EditNumeric.tsx","components/Character/Skill.tsx","containers/Character/Skill.tsx","components/TokenInput/index.tsx","components/Character/EditSpecialities.tsx","components/Character/Specialities.tsx","containers/Character/Specialities.tsx","components/Character/Skills.tsx","routes/Skills.tsx","components/Character/Virtues.tsx","containers/Character/Virtues.tsx","routes/Virtues.tsx","components/Character/Chi.tsx","containers/Character/Chi.tsx","components/Character/ChiList.tsx","routes/Chi.tsx","components/PlaceHolder.tsx","routes/Equipment.tsx","routes/Conditions.tsx","components/SelectorList/index.tsx","components/SelectorList/SelectorList.tsx","state/effects.tsx","components/Character/ExternalKungFuTechnique.tsx","containers/Character/ExternalKungFuTechnique.tsx","components/Character/ExternalKungFu.tsx","containers/Character/ExternalKungFu.tsx","components/Character/InternalKungFuTechnique.tsx","containers/Character/InternalKungFuTechnique.tsx","components/Character/InternalKungFu.tsx","containers/Character/InternalKungFu.tsx","components/Character/KungFuList.tsx","routes/KungFu.tsx","components/Character/LoresheetOptionPopup.tsx","components/Character/LoresheetOption.tsx","containers/Character/LoresheetOption.tsx","components/Character/Loresheet.tsx","containers/Character/Loresheet.tsx","components/Character/LoresheetsList.tsx","routes/Loresheets.tsx","routes/SecretArts.tsx","components/Character/History.tsx","containers/Character/History.tsx","routes/History.tsx","App/index.tsx","index.tsx","state/middleware/history.tsx"],"names":["historyDeleteUpTo","createAction","action","id","resetToInitialState","chiBuy","chi","value","cost","DISCOUNT_CHI","DISCOUNT_SKILL","DISCOUNT_LORESHEET","DISCOUNT_LORESHEET_OPTION","DISCOUNT_KUNGFU_STYLE","DISCOUNT_KUNGFU_TECHNIQUE","DISCOUNT_VIRTUE","isDiscount","r","type","constants","getDiscountIndexes","state","predicate","discountIdx","discounts","map","discount","idx","NaN","filter","isNaN","SECRET_ARTS","SAGE_LORESHEET","jianghu","uid","name","category","ruleset","description","options","repeatable","prerequisites","perks","payload","min","max","BONUS_DISCOUNT","BONUS_DESTINY","BONUS_ENTANGLEMENT","BONUS_CHI","BONUS_CULTIVATION","BONUS_ONE_AMONG_N","BONUS_SKILL_RANK","BONUS_SPECIALITY","BONUS_LORESHEET","BONUS_LORESHEET_OPTION","bonusDestiny","bonusChi","chiName","bonusSpeciality","skill","speciality","crouchingtigersandhiddendragons","bonuses","Object","keys","length","Error","values","bonusOneAmongN","sensechi","hidekillerintent","AUTO_CONDITION_SKILL","AUTO_CONDITION_ARCHETYPE","archetype","lsUid","loresheets","getLoresheets","ls","validateLoresheet","find","loresheet","validateLoresheetOption","idxLS","findIndex","option","getLoresheetData","isLoresheet","isSecretArts","getLoresheetOptionData","optUid","data","idxOpt","o","KUNGFU_EXTERNAL","KUNGFU_INTERNAL","EFFECT_COMBAT_STATISTIC","EFFECT_CONDITIONAL_TEXT","EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI","combatStatistic","statistic","increase","conditionalText","textInput","text","line","conditionalOnelineText","Array","chiIncrease","blossomHarvest","qualities","weapons","laugths","fears","statistics","speed","footwork","strike","damage","block","toughness","techniques","effect","effects","boneFedWolfFang","boundlessProsperityManual","element","level","fireSutra","externalKungfu","internalKungfu","validateKungFuType","validateKungFuStyle","styleUid","kf","validateKungFuTechnique","techniqueUid","tech","getKungfuChi","kungfuData","idxKF","kungfuTechniqueData","techUid","idxTech","t","_costFactory","costValue","remainingCost","stateDiscount","effectiveDiscount","Math","newValue","canPay","destiny","original","applyCost","forEach","costDiscount","splice","updateDiscounts","getCostSkill","skillName","d","skills","s","getCostSpeciality","getCostChi","chiValue","chiMultiplicator","expectedCost","cultivation","chis","getCostOpenLoresheet","uids","_getCostBuyLoresheetOptionOneCost","opt","discountOptUid","getCostBuyLoresheetOption","defaultCost","lenght","from","v","getCostVirtue","virtues","getCostKungFuStyle","kfType","getCostKungFuTechnique","kfData","chiNames","createState","increaseCultivation","increaseValue","costMultiplier","archetypes","breath","key","VIRTUE_CHIVALROUS","VIRTUE_SELFISH","Awareness","Confidence","Crafting","Finesse","Hardiness","Inspire","Learning","Medicine","Might","Perform","Politics","Ride","Stealth","Survival","Tactics","discountSkillFactory","subset","discountKungfuFactory","_defaultVirtues","discountVirtueFactory","ranks","getRank","rank","dataRank","setName","setConcept","concept","setArchetype","dataArchetype","dataArchetypes","setRank","dataRanks","isBonus","bonus","maxSkillBonus","maxSkillValue","_getSkill","isSpecialityPresent","specialityName","specialities","addSpeciality","push","canBuySkill","getSkill","canBuySpeciality","isLoresheetPresent","loresheetUid","stateLoresheetUid","isLoresheetOptionPresent","optionUid","undefined","canOpenLoresheet","_or","a","b","_and","canBuyLoresheetOption","lsOptData","isRepeatable","p","prerequisite","reduce","_prerequisiteToBool","buyLoresheetOption","openLoresheet","applyBonuses","draftState","entanglement","pushToDiscounts","openStyle","kungfuType","dataKungFu","buyTechnique","customStyleName","customTechniqueName","isStylePresent","stateKungFuUid","isStyleTechniquePresent","stateTechniqueUid","getExternalKungFuStatistics","dataStatistics","kfTechnique","canOpenKungFu","canBuyKungFuTechnique","noRestrictionInternal","levels","sort","_knownInternalKungFuLevel","kungfuReducer","baseState","getType","actions","produce","lvl1s","kungfu","dataKungfu","addKungFuTechnique","open","dataLoresheets","buyOption","skillsBuy","skillSpecialityBuy","isVirtuePresent","virtue","canBuyVirtue","virtuesReducer","globalReducer","isActionOf","chiReducer","header","headerReducer","history","emptyStateFactory","replayHistory","slice","historyReducer","loresheetsReducer","skillsReducer","initialStateFactory","toReplay","retval","dataLoresheet","perk","isAutomaticCondition","acc","val","concat","getAutomatics","createChiState","automatics","createAutomaticsState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","AppHeader","props","toggle","bind","isOpen","this","setState","className","Link","to","React","AppIntro","children","AppPage","style","display","textAlign","FieldHeader","label","DDLText","dropdownOpen","edit","default","startEdit","endEdit","toggleDDL","select","getLabelForSelectedKey","renderButton","renderDropdownList","renderDropdownItems","renderHeader","renderValue","locked","labelForSelectedKey","onSubmit","e","join","btnOk","onClick","color","btnKo","role","Archetype","onChange","connect","dispatch","propsFromState","propsForDispatch","assign","EditText","componentWillReceiveProps","textChange","renderEdit","renderNoEdit","nextProps","trim","validate","target","isValueValid","Button","InputGroup","InputGroupAddon","addonType","Input","placeholder","valid","Concept","isStringNotNull","StaticText","render","Destiny","toString","Entanglement","Name","Rank","Number","Homepage","EditNumeric","doBuy","canBuy","onBuy","icon","f","Skill","TokenInput","idKey","labelKey","defaultProps","focused","input","inputChange","onBlur","onFocus","renderTokens","renderSuggestion","renderAddNew","tokens","matchOptionsWithInput","onMouseDown","onAdd","resetState","allowNew","event","exact","inputPrep","toLowerCase","some","token","labelPrep","indexOf","EditSpecialities","buySpeciality","renderBoughtSpecialities","bought","index","optionList","foundIndex","available","indexNewSpeciality","Specialities","newSpecialityAvailability","merge","item","pos","retVal","Skills","RouteSkills","Virtues","chivalrousVirtues","selfishVirtues","rows","i","cvdiv","renderVirtue","svdiv","variable","RouteVirtues","Chi","charAt","toUpperCase","ChiList","RouteChi","PlaceHolder","RouteEquipment","RouteConditions","SelectorList","searched","meta","selected","preSelected","renderList","renderSearchBox","renderSelected","itemOnSelectedToggle","searchInputChanged","prop","disabled","renderItem","prevState","newList","search","effectToString","ExternalKungFuTechnique","technique","known","ExternalKungFu","renderCrunch","renderStats","renderTechniques","justifyContent","w","q","flexGrow","canOpen","onOpen","knownTechniques","InternalKungFuTechnique","InternalKungFu","KungFuList","externals","internals","externalIdx","internalIdx","getKungFuType","RouteKungFu","LoresheetOptionPopup","initState","renderComplexCost","renderPayload","buyButtonClick","choices","renderBonusChoices","complexCost","Modal","ModalHeader","ModalBody","ModalFooter","renderBuyButton","all","bonusKey","JSON","stringify","fromBonusToString","marks","newMarks","included","step","activePayload","activeCost","active","LoresheetOption","isModalOpen","renderKnown","renderNotKnown","onRowClickBuy","toggleModal","gotName","payloads","fromCostToString","renderDescription","canBuyOneOrMore","previousValue","currentValue","lsState","optState","array","c","Loresheet","renderOptions","LoresheetsList","nestedOptions","loresheetFilter","self","categories","lsInCategory","RouteLoresheets","History","hoverIndex","renderHistoryAction","rollbackHistory","onDelete","RouteHistory","App","BrowserRouter","Route","path","component","Equipment","Conditions","KungFu","Loresheets","SecretArts","store","createStore","compose","applyMiddleware","next","result","newState","getState","applied","auto","isApplicable","devToolsEnhancer","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+rCAEaA,EAAoBC,uBAC/B,kBACA,SAAAC,GAAM,OAAI,SAACC,GACT,OAAOD,EAAO,CAAEC,WAIPC,EAAsBH,uBACjC,yBACA,SAAAC,GAAM,OAAI,WACR,OAAOA,QCREG,EAASJ,uBACpB,WACA,SAAAC,GAAM,OAAI,SAACI,EAAeC,EAAeC,GACvC,OAAON,EAAO,CAAEI,MAAKC,QAAOC,aCPnBC,EAAe,eAGfC,EAAiB,iBAGjBC,EAAqB,qBAGrBC,EAA4B,4BAG5BC,EAAwB,wBAGxBC,EAA4B,4BAG5BC,EAAkB,kBCuCxB,SAASC,EAAWC,GACzB,OAAQA,EAAEC,MACR,KAAKC,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACH,OAAO,EACT,QACE,OAAO,GC9CN,SAASC,EACdC,EACAC,GAEA,IAAMC,EAAcF,EAAMG,UACvBC,KAAI,SAACC,EAAqBC,GACzB,OAAIL,EAAUI,GACLC,EAEFC,OAERC,QAAO,SAACtB,GAAD,OAAoBuB,MAAMvB,MACpC,OAAIgB,GAGK,GCpCJ,IAAMQ,EAAc,cAGdC,EAAiB,iBCCjBC,EAA0B,CACrCC,IAAK,UACLhB,KAAMc,EACNG,KAAM,eACNC,SAAU,mBACV5B,KAAM,EACN6B,QAAS,OACTC,YACE,8bACFC,QAAS,CACP,CACEL,IAAK,cACL1B,KAAM,EACNU,KAAM,QACNoB,YACE,kSACFE,YAAY,EACZC,cAAe,GACfC,MAAO,GACPC,QAAS,mBAEX,CACET,IAAK,gBACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,IACrB3B,KAAM,UACNoB,YACE,0NACFE,YAAY,EACZC,cAAe,GACfC,MAAO,IAET,CACER,IAAK,oBACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,GACrBP,YACE,gHACFpB,KAAM,SACNsB,YAAY,EACZC,cAAe,CACb,CAAEvB,KAAM,KAAMuB,cAAe,CAAC,cAAe,mBAE/CC,MAAO,GACPC,QAAS,qBC/CFG,EAAiB,iBAGjBC,EAAgB,gBAGhBC,EAAqB,qBAGrBC,EAAY,YAGZC,EAAoB,oBAGpBC,EAAoB,oBAGpBC,EAAmB,mBAGnBC,EAAmB,mBAGnBC,EAAkB,kBAGlBC,EAAyB,yBCV/B,SAASC,EAAajD,GAC3B,MAAO,CAAEW,KAAMC,EAAyBZ,SAOnC,SAASkD,EAASlD,EAAemD,GACtC,MAAO,CAAExC,KAAMC,EAAqBb,IAAKoD,EAASnD,SA0B7C,SAASoD,EACdC,EACAC,GAEA,MAAO,CAAED,QAAOC,aAAY3C,KAAMC,GC/C7B,IAAM2C,EAAkD,CAC7D5B,IAAK,mBACLhB,KAAMc,EACNG,KAAM,sCACNC,SAAU,mBACV5B,KAAM,EACN6B,QAAS,OACTC,YACE,+PACFC,QAAS,CACP,CACEL,IAAK,WACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,GACrB3B,KAAM,eACNoB,YACE,2eACFE,YAAY,EACZC,cAAe,GACfC,MAAO,GACPC,QAAS,sBAEX,CACET,IAAK,yBACL1B,KAAM,EACN8B,YACE,ygBACFpB,KAAM,SACNsB,YAAY,EACZC,cAAe,GACfC,MAAO,IAET,CACER,IAAK,WACL1B,KAAM,EACN8B,YACE,4FACFpB,KAAM,QACNsB,YAAY,EACZC,cAAe,GACfC,MAAO,CDZN,SACLqB,GAEA,GAAoC,IAAhCC,OAAOC,KAAKF,GAASG,OACvB,MAAM,IAAIC,MAAM,kCAElB,OAAoC,IAAhCH,OAAOC,KAAKF,GAASG,OAChBF,OAAOI,OAAOL,GAAS,GAEzB,CAAE7C,KAAMC,EAA6B4C,WCItCM,CAAe,CACbC,SAAUX,EAAgB,SAAU,aACpCY,iBAAkBZ,EAAgB,SAAU,4BCnDzCa,EAAuB,uBAGvBC,EAA2B,2BCKjC,ICULC,EACAhC,EJwC6BiC,EKuBzBC,EAAsC,CAC1C3C,EACA6B,EC/EmC,CACnC5B,IAAK,QACLhB,KAAMc,EACNG,KAAM,YACNC,SAAU,mBACV5B,KAAM,EACN6B,QAAS,OACTC,YACE,wfACFC,QAAS,CACP,CACEL,IAAK,kBACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,IACrB3B,KAAM,cACNoB,YACE,+hBACFE,YAAY,EACZC,cAAe,GACfC,MAAO,GACPC,QAAS,UAEX,CACET,IAAK,iBACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,IACrB3B,KAAM,UACNoB,YACE,8bACFE,YAAY,EACZC,cAAe,GACfC,MAAO,GACPC,QAAS,wBC9B0B,CACvCT,IAAK,YACLhB,KAAMc,EACNG,KAAM,iBACNC,SAAU,mBACV5B,KAAM,EACN6B,QAAS,OACTC,YACE,oaACFC,QAAS,CACP,CACEL,IAAK,OACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,IACrB3B,KAAM,UACNoB,YACE,6HACFE,YAAY,EACZC,cAAe,GACfC,MAAO,GACPC,QAAS,UAEX,CACET,IAAK,eACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,IACrB3B,KAAM,cACNoB,YAAa,6DACbE,YAAY,EACZC,cAAe,GACfC,MAAO,IAET,CACER,IAAK,mBACL1B,KAAM,CAAEoC,IAAK,EAAGC,IAAK,IACrB3B,KAAM,cACNoB,YACE,2FACFE,YAAY,EACZC,cAAe,GACfC,MAAO,GACPC,QAAS,WJpCkC,CAC/CT,IAAK,oBACLhB,KAAMa,EACNI,KAAM,2BACNC,SAAU,oBACV5B,KAAM,GACN6B,QAAS,cACTC,YAAa,2DACbC,QAAS,GACTG,MAAO,ECCPgC,EDAoC,UCCpChC,EDD+C,EHyClBiC,EGxCF,oBHyCpB,CAAEzD,KAAMC,EAA2BwD,WIvCnC,CAAEzD,KAAMC,EAAoCuD,YAAWhC,YIdF,CAC5DR,IAAK,iCACLhB,KAAMa,EACNI,KAAM,mCACNC,SAAU,oBACV5B,KAAM,EACN6B,QAAS,cACTC,YACE,4bACFC,QAAS,CACP,CACEL,IAAK,wBACL1B,KAAM,EACN2B,KAAM,0BACNjB,KAAM,QACNoB,YACE,wQACFG,cAAe,GACfC,MAAO,IAET,CACER,IAAK,wBACL1B,KAAM,EACN2B,KAAM,0BACNjB,KAAM,QACNoB,YACE,ySACFG,cAAe,GACfC,MAAO,IAET,CACER,IAAK,oCACL1B,KAAM,EACN2B,KAAM,wCACNjB,KAAM,mBACNoB,YACE,0fACFG,cAAe,GACfC,MAAO,IAET,CACER,IAAK,4BACL1B,KAAM,EACN2B,KAAM,8BACNjB,KAAM,QACNoB,YACE,yiBACFG,cAAe,GACfC,MAAO,IAET,CACER,IAAK,8BACL1B,KAAM,EACN2B,KAAM,8BACNjB,KAAM,QACNoB,YACE,2hBACFG,cAAe,CAAC,6BAChBC,MAAO,IAET,CACER,IAAK,6BACL1B,KAAM,EACN2B,KAAM,+BACNjB,KAAM,UACNoB,YACE,geACFI,MAAO,GACPD,cAAe,IAEjB,CACEP,IAAK,+BACL1B,KAAM,EACN2B,KAAM,kCACNjB,KAAM,OACNoB,YACE,0dACFI,MAAO,GACPD,cAAe,IAEjB,CACEP,IAAK,+BACL1B,KAAM,EACN2B,KAAM,kCACNjB,KAAM,UACNoB,YACE,wPACFG,cAAe,GACfC,MAAO,IAET,CACER,IAAK,+BACL1B,KAAM,EACN2B,KAAM,kCACNjB,KAAM,QACNoB,YACE,oTACFI,MAAO,GACPD,cAAe,IAEjB,CACEP,IAAK,kCACL1B,KAAM,EACN2B,KAAM,sCACNjB,KAAM,UACNoB,YACE,6OACFG,cAAe,GACfC,MAAO,OHxBN,SAASmC,EACdhD,GAEA,OAAKA,EACE+C,EAAW/C,QAAO,SAAAiD,GAAE,OAAIjD,EAAOiD,MADhBF,EAcjB,SAASG,EAAkB7C,GAChC,IAAK0C,EAAWI,MAAK,SAACC,GAAD,OAA+BA,EAAU/C,MAAQA,KACpE,MAAM,IAAIiC,MAAM,sBAAwBjC,EAAM,KAI3C,SAASgD,GAAwBP,EAAezC,GACrD6C,EAAkBJ,GAClB,IAAMQ,EAAQP,EAAWQ,WAAU,SAAAN,GAAE,OAAIA,EAAG5C,MAAQyC,KACpD,IACGC,EAAWO,GAAO5C,QAAQyC,MACzB,SAACK,GAAD,OAAkCA,EAAOnD,MAAQA,KAGnD,MAAM,IAAIiC,MAAM,wCAIb,SAASmB,GAAiBX,GAC/B,IAAMQ,EAAQP,EAAWQ,WAAU,SAAAN,GAAE,OAAIA,EAAG5C,MAAQyC,KACpD,OAAOC,EAAWO,GAGb,SAASI,GAAYT,GAC1B,OAAOA,EAAG5D,OAASc,EAGd,SAASwD,GAAaV,GAC3B,OAAOA,EAAG5D,OAASa,EAqBd,SAAS0D,GACdd,EACAe,GAEA,IAAMC,EAAOL,GAAiBX,GACxBiB,EAASD,EAAKpD,QAAQ6C,WAAU,SAAAS,GAAC,OAAIA,EAAE3D,MAAQwD,KACrD,OAAOC,EAAKpD,QAAQqD,GI9Jf,IAAME,GAAkB,kBAGlBC,GAAkB,kBCRlBC,GAA0B,0BAG1BC,GAA0B,0BAG1BC,GAAyC,yCCE/C,SAASC,GACdC,EACAC,GAEA,MAAO,CAAEA,WAAUD,YAAWlF,KAAMC,IAG/B,SAASmF,GAAgBC,GAC9B,IAAMC,EAAOD,EAAU1E,QAAO,SAAC4E,GAAD,OAAkBA,EAAKvC,OAAS,KAC9D,GAAoB,IAAhBsC,EAAKtC,OACP,MAAM,IAAIC,MAAM,2CAElB,MAAO,CAAEqC,OAAMtF,KAAMC,IAGhB,SAASuF,GAAuBF,GACrC,OAAOF,GAAgB,IAAIK,MAAcH,IClBpC,IDsBLI,GCtBWC,GAAsC,CACjD1E,KAAM,kBACND,IAAK,kBACL4E,UAAW,CACT,wbACA,iNAEFC,QAAS,CAAC,UAAW,QAAS,WAC9BC,QACE,iYACFC,MACE,8PACFC,WAAY,CACVC,MAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,OAAQ,GACRC,MAAO,EACPC,UAAW,IAEbC,WAAY,CACV,CACEtF,KAAM,0BACN3B,KAAM,EACN8B,YACE,+LACFoF,OAAQC,GACN,8FAEFzF,IAAK,2BAEP,CACEC,KAAM,YACN3B,KAAM,EACN8B,YACE,yIACFoF,OAAQC,GAAwB,YAAa,GAC7CzF,IAAK,aAEP,CACEC,KAAM,YACND,IAAK,cACL1B,KAAM,EACN8B,YACE,yIACFoF,QDvBJd,GCuBgD,EDrBzC,CACLA,eACA1F,KAAMC,KCoBJsB,cAAe,CAAC,CAAEP,IAAK,iBAEzB,CACEC,KAAM,gCACND,IAAK,gCACL1B,KAAM,EACN8B,YACE,qFACFoF,OAAQC,GAAwB,SAAU,IAE5C,CACExF,KAAM,yBACND,IAAK,yBACL1B,KAAM,EACN8B,YACE,mQACFoF,OAAQC,GACN,4FC/DKC,GAAuC,CAClDzF,KAAM,qBACND,IAAK,qBACL6E,QAAS,CAAC,UAAW,SACrBD,UAAW,CACT,ocACA,2PAEFE,QACE,sKACFC,MACE,kNACFC,WAAY,CACVC,MAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,OAAQ,GACRC,MAAO,EACPC,UAAW,GAEbC,WAAY,CACV,CACEtF,KAAM,gBACN3B,KAAM,EACN8B,YACE,gKACFoF,OAAQC,GACN,oGAEFzF,IAAK,iBAEP,CACEC,KAAM,qBACN3B,KAAM,EACN8B,YACE,iZACFoF,OAAQC,GACN,yGAEFzF,IAAK,sBAEP,CACEC,KAAM,qBACN3B,KAAM,EACN8B,YACE,uSACFoF,OAAQC,GACN,gJAEFzF,IAAK,sBAEP,CACEC,KAAM,oBACN3B,KAAM,EACN8B,YACE,gUACFoF,OAAQC,GACN,gGAEFzF,IAAK,qBAEP,CACEC,KAAM,yBACN3B,KAAM,EACN8B,YACE,0MACFoF,OAAQC,GACN,gGAEFzF,IAAK,4BCrEE2F,GAAiD,CAC5D1F,KAAM,8BACND,IAAK,8BACLI,YACE,qdACFwF,QAAS,OACTL,WAAY,CACV,CACEM,MAAO,EACP5F,KAAM,yBACND,IAAK,yBACLI,YACE,6GACFoF,OAAQC,GACN,sRAGJ,CACEI,MAAO,EACP5F,KAAM,yBACND,IAAK,yBACLI,YACE,gKACFoF,OAAQC,GAA+B,oCAEzC,CACEI,MAAO,EACP5F,KAAM,oBACND,IAAK,oBACLI,YACE,0KACFoF,OAAQC,GAAwB,CAC9B,uBACA,uCAGJ,CACEI,MAAO,EACP5F,KAAM,4BACND,IAAK,4BACLI,YACE,mJACFoF,OAAQC,GAA+B,oCAEzC,CACEI,MAAO,EACP5F,KAAM,0BACND,IAAK,0BACLI,YACE,gFACFoF,OAAQC,GAA+B,mCAEzC,CACEI,MAAO,EACP5F,KAAM,kCACND,IAAK,kCACLI,YACE,uLACFoF,OAAQC,GAAwB,CAC9B,yKACA,gIACA,0EAGJ,CACEI,MAAO,EACP5F,KAAM,uCACND,IAAK,uCACLI,YACE,iJACFoF,OAAQC,GAAwB,CAC9B,uBACA,4HAGJ,CACEI,MAAO,EACP5F,KAAM,0BACND,IAAK,0BACLI,YACE,qIACFoF,OAAQC,GACN,mEAGJ,CACEI,MAAO,EACP5F,KAAM,oCACND,IAAK,oCACLI,YACE,8EACFoF,OAAQC,GAAwB,CAC9B,uBACA,qFACA,sGAGJ,CACEI,MAAO,EACP5F,KAAM,kCACND,IAAK,kCACLI,YACE,sSACFoF,OAAQC,GACN,qQAGJ,CACEI,MAAO,EACP5F,KAAM,yBACND,IAAK,yBACLI,YACE,qSACFoF,OAAQC,GAAwB,CAC9B,iQACA,qCCnHKK,GAAiC,CAC5C7F,KAAM,aACND,IAAK,aACLI,YACE,+UACFwF,QAAS,OACTL,WAAY,CACV,CACEM,MAAO,EACP5F,KAAM,mBACND,IAAK,mBACLI,YACE,yJACFoF,OAAQC,GACN,kFAGJ,CACEI,MAAO,EACP5F,KAAM,mBACND,IAAK,mBACLI,YACE,2KACFoF,OAAQC,GAAwB,CAC9B,qKACA,uGAGJ,CACEI,MAAO,EACP5F,KAAM,2BACND,IAAK,2BACLI,YACE,wJACFoF,OAAQC,GACN,yGAGJ,CACEI,MAAO,EACP5F,KAAM,gBACND,IAAK,gBACLI,YACE,yQACFoF,OAAQC,GAAwB,CAC9B,uBACA,qFACA,6QAGJ,CACEI,MAAO,EACP5F,KAAM,gBACND,IAAK,gBACLI,YACE,8MACFoF,OAAQC,GACN,kFAGJ,CACEI,MAAO,EACP5F,KAAM,uBACND,IAAK,uBACLI,YACE,0VACFoF,OAAQC,GAAwB,CAC9B,gGACA,mDACA,0QAGJ,CACEI,MAAO,EACP5F,KAAM,uBACND,IAAK,uBACLI,YACE,yGACFoF,OAAQC,GACN,0JAGJ,CACEI,MAAO,EACP5F,KAAM,iBACND,IAAK,iBACLI,YACE,0IACFoF,OAAQC,GAAwB,CAC9B,uBACA,+FACA,mGAGJ,CACEI,MAAO,EACP5F,KAAM,oBACND,IAAK,oBACLI,YACE,4NACFoF,OAAQC,GAAwB,CAC9B,uBACA,+FACA,kHAGJ,CACEI,MAAO,EACP5F,KAAM,oBACND,IAAK,oBACLI,YACE,sMACFoF,OAAQC,GACN,2JAGJ,CACEI,MAAO,EACP5F,KAAM,2BACND,IAAK,2BACLI,YACE,kUACFoF,OAAQC,GACN,sPCpHKM,GAAwC,CACnDpB,GACAe,I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","file":"static/js/main.dda32a35.chunk.js","sourcesContent":["import { createAction } from \"typesafe-actions\";\n\nexport const historyDeleteUpTo = createAction(\n  \"history/DELETE\",\n  action => (id: number) => {\n    return action({ id });\n  }\n);\n\nexport const resetToInitialState = createAction(\n  \"history/INITIAL_STATE\",\n  action => () => {\n    return action();\n  }\n);\n","import { createAction } from \"typesafe-actions\";\nimport { TChiName } from \"../../data/chi\";\nimport { ICost } from \"../costs\";\n\nexport const chiBuy = createAction(\n  \"chi/BUY\",\n  action => (chi: TChiName, value: number, cost: ICost) => {\n    return action({ chi, value, cost });\n  }\n);\n","export const DISCOUNT_CHI = \"DISCOUNT_CHI\";\nexport type DISCOUNT_CHI = typeof DISCOUNT_CHI;\n\nexport const DISCOUNT_SKILL = \"DISCOUNT_SKILL\";\nexport type DISCOUNT_SKILL = typeof DISCOUNT_SKILL;\n\nexport const DISCOUNT_LORESHEET = \"DISCOUNT_LORESHEET\";\nexport type DISCOUNT_LORESHEET = typeof DISCOUNT_LORESHEET;\n\nexport const DISCOUNT_LORESHEET_OPTION = \"DISCOUNT_LORESHEET_OPTION\";\nexport type DISCOUNT_LORESHEET_OPTION = typeof DISCOUNT_LORESHEET_OPTION;\n\nexport const DISCOUNT_KUNGFU_STYLE = \"DISCOUNT_KUNGFU_STYLE\";\nexport type DISCOUNT_KUNGFU_STYLE = typeof DISCOUNT_KUNGFU_STYLE;\n\nexport const DISCOUNT_KUNGFU_TECHNIQUE = \"DISCOUNT_KUNGFU_TECHNIQUE\";\nexport type DISCOUNT_KUNGFU_TECHNIQUE = typeof DISCOUNT_KUNGFU_TECHNIQUE;\n\nexport const DISCOUNT_VIRTUE = \"DISCOUNT_VIRTUE\";\nexport type DISCOUNT_VIRTUE = typeof DISCOUNT_VIRTUE;\n","import { TChiName } from \"../data/chi\";\nimport { KUNGFU_TYPE } from \"../data/kungfu/types\";\nimport { TSkillName } from \"../data/skills\";\nimport { IDataVirtueType } from \"../data/virtues\";\nimport * as constants from \"./constants/discounts\";\n\ninterface IGenericDiscount {\n  type: string;\n  value: number;\n}\n\nexport interface IDiscountSkill extends IGenericDiscount {\n  type: constants.DISCOUNT_SKILL;\n  skills: TSkillName[];\n}\n\nexport interface IDiscountChi extends IGenericDiscount {\n  type: constants.DISCOUNT_CHI;\n  chis: TChiName[];\n}\n\nexport interface IDiscountLoresheet extends IGenericDiscount {\n  type: constants.DISCOUNT_LORESHEET;\n  uids: string[];\n}\n\nexport interface IDiscountLoresheetOption extends IGenericDiscount {\n  type: constants.DISCOUNT_LORESHEET_OPTION;\n  uids: Array<{ lsUid: string; optUid: string[] }>;\n}\n\nexport interface IDiscountKungfu extends IGenericDiscount {\n  type: constants.DISCOUNT_KUNGFU_STYLE;\n  kfType: KUNGFU_TYPE;\n  uids: string[];\n}\n\nexport interface IDiscountKungfuTechnique extends IGenericDiscount {\n  type: constants.DISCOUNT_KUNGFU_TECHNIQUE;\n  uids: Array<{ styleUid: string }>;\n  kfType: KUNGFU_TYPE[];\n}\n\nexport interface IDiscountVirtue extends IGenericDiscount {\n  type: constants.DISCOUNT_VIRTUE;\n  virtues: Array<{ name: string; type: IDataVirtueType }>;\n}\n\nexport type IDiscount =\n  | IDiscountSkill\n  | IDiscountChi\n  | IDiscountLoresheet\n  | IDiscountLoresheetOption\n  | IDiscountKungfu\n  | IDiscountKungfuTechnique\n  | IDiscountVirtue;\n\nexport function isDiscount(r: any): boolean {\n  switch (r.type) {\n    case constants.DISCOUNT_CHI:\n    case constants.DISCOUNT_SKILL:\n    case constants.DISCOUNT_LORESHEET:\n    case constants.DISCOUNT_LORESHEET_OPTION:\n    case constants.DISCOUNT_KUNGFU_STYLE:\n    case constants.DISCOUNT_KUNGFU_TECHNIQUE:\n    case constants.DISCOUNT_VIRTUE:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type TDiscountsState = IDiscount[];\n\nexport function createState(): TDiscountsState {\n  return [];\n}\n","import { ICost } from \"./costs\";\nimport { IStoreState } from \"./type\";\n\nimport { IDiscount, isDiscount } from \"../perks/discounts\";\n\nexport type TDiscountsState = IDiscount[];\n\nexport function createState(): TDiscountsState {\n  return [];\n}\n\nexport function pushToDiscounts(\n  state: IStoreState,\n  discounts: IDiscount[]\n): void {\n  discounts\n    .filter((r: IDiscount) => isDiscount(r))\n    .forEach((r: IDiscount) => {\n      state.discounts.push(r);\n    });\n}\n\nexport function getDiscountIndexes(\n  state: IStoreState,\n  predicate: (d: IDiscount) => boolean\n) {\n  const discountIdx = state.discounts\n    .map((discount: IDiscount, idx: number) => {\n      if (predicate(discount)) {\n        return idx;\n      }\n      return NaN;\n    })\n    .filter((value: number) => !isNaN(value));\n  if (discountIdx) {\n    return discountIdx;\n  } else {\n    return [];\n  }\n}\n\nexport function updateDiscounts(state: IStoreState, cost: ICost): void {\n  // Update the discount\n  if (!cost.discounts) {\n    return;\n  }\n\n  cost.discounts.forEach(costDiscount => {\n    state.discounts[costDiscount.idx].value = costDiscount.newValue;\n\n    if (costDiscount.newValue === 0) {\n      // Remove the empty discount\n      state.discounts.splice(costDiscount.idx, 1);\n    }\n  });\n}\n","export type SECRET_ARTS = typeof SECRET_ARTS;\nexport const SECRET_ARTS = \"SECRET_ARTS\";\n\nexport type SAGE_LORESHEET = typeof SAGE_LORESHEET;\nexport const SAGE_LORESHEET = \"SAGE_LORESHEET\";\n","import { IDataLoresheet } from \"../../../loresheets\";\nimport { SAGE_LORESHEET } from \"../../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\nexport const jianghu: IDataLoresheet = {\n  uid: \"jianghu\",\n  type: SAGE_LORESHEET,\n  name: \"The Jiang Hu\",\n  category: \"Rivers and Lakes\",\n  cost: 0,\n  ruleset: \"core\",\n  description:\n    \"Within Shen Zhou, there is a parallel world of outsiders and outcasts. Some are born into this world, others are forced into it, and many more choose to live in it to escape the boundaries and limitations imposed on them by regular society. The heroes and rogues within this world are abjured by the common people as threats to an orderly life, but for many they represent a hope of escape, or advancement, from a life controlled by tradition.\",\n  options: [\n    {\n      uid: \"familiarity\",\n      cost: 2,\n      type: \"Bonus\",\n      description:\n        \"You know how to navigate the Rivers and Lakes outside the Wulin organizations, in other Jiang Hu communities like the criminal underground, the ferrymen guilds, or the pleasure trade. Pick one such group; you get a +5 bonus to social rolls where familiarity with that subculture matters.\",\n      repeatable: true,\n      prerequisites: [],\n      perks: [],\n      payload: \"an organization\"\n    },\n    {\n      uid: \"knunderground\",\n      cost: { min: 2, max: 10 },\n      type: \"Fortune\",\n      description:\n        \"Once per session, upon arriving in a new location, you may declare to have basic knowledge of the local Jiang Hu underground, including important organizations and who’s in charge. This includes Wulin factions.\",\n      repeatable: true,\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"statusunderground\",\n      cost: { min: 1, max: 5 },\n      description:\n        \"You are already known within one or more of the aforementioned organizations, and have some Status with them.\",\n      type: \"Status\",\n      repeatable: true,\n      prerequisites: [\n        { type: \"OR\", prerequisites: [\"familiarity\", \"knunderground\"] }\n      ],\n      perks: [],\n      payload: \"an organization\"\n    }\n  ]\n};\n","export const BONUS_DISCOUNT = \"BONUS_DISCOUNT\";\nexport type BONUS_DISCOUNT = typeof BONUS_DISCOUNT;\n\nexport const BONUS_DESTINY = \"BONUS_DESTINY\";\nexport type BONUS_DESTINY = typeof BONUS_DESTINY;\n\nexport const BONUS_ENTANGLEMENT = \"BONUS_ENTANGLEMENT\";\nexport type BONUS_ENTANGLEMENT = typeof BONUS_ENTANGLEMENT;\n\nexport const BONUS_CHI = \"BONUS_CHI\";\nexport type BONUS_CHI = typeof BONUS_CHI;\n\nexport const BONUS_CULTIVATION = \"BONUS_CULTIVATION\";\nexport type BONUS_CULTIVATION = typeof BONUS_CULTIVATION;\n\nexport const BONUS_ONE_AMONG_N = \"BONUS_ONE_AMONG_N\";\nexport type BONUS_ONE_AMONG_N = typeof BONUS_ONE_AMONG_N;\n\nexport const BONUS_SKILL_RANK = \"BONUS_SKILL_RANK\";\nexport type BONUS_SKILL_RANK = typeof BONUS_SKILL_RANK;\n\nexport const BONUS_SPECIALITY = \"BONUS_SPECIALITY\";\nexport type BONUS_SPECIALITY = typeof BONUS_SPECIALITY;\n\nexport const BONUS_LORESHEET = \"BONUS_LORESHEET\";\nexport type BONUS_LORESHEET = typeof BONUS_LORESHEET;\n\nexport const BONUS_LORESHEET_OPTION = \"BONUS_LORESHEET_OPTION\";\nexport type BONUS_LORESHEET_OPTION = typeof BONUS_LORESHEET_OPTION;\n","import {\n  IBonus,\n  IBonusChi,\n  IBonusCultivation,\n  IBonusDestiny,\n  IBonusEntanglement,\n  IBonusLoresheet,\n  IBonusLoresheetOption,\n  IBonusOneAmongN,\n  IBonusSkillRank,\n  IBonusSpeciality\n} from \"../bonuses\";\nimport * as constants from \"../constants/bonuses\";\n\nimport * as dataChi from \"../../data/chi\";\nimport * as dataSkill from \"../../data/skills\";\n\nexport function bonusDestiny(value: number): IBonusDestiny {\n  return { type: constants.BONUS_DESTINY, value };\n}\n\nexport function bonusEntanglement(value: number): IBonusEntanglement {\n  return { type: constants.BONUS_ENTANGLEMENT, value };\n}\n\nexport function bonusChi(value: number, chiName: dataChi.TChiName): IBonusChi {\n  return { type: constants.BONUS_CHI, chi: chiName, value };\n}\n\nexport function bonusCultivation(\n  chiName: dataChi.TChiName,\n  value: number\n): IBonusCultivation {\n  return { type: constants.BONUS_CULTIVATION, value, chi: chiName };\n}\n\nexport function bonusOneAmongN(\n  bonuses: { [key in string]: IBonus }\n): IBonusOneAmongN | IBonus {\n  if (Object.keys(bonuses).length === 0) {\n    throw new Error(\"Can not create one out of zero\");\n  }\n  if (Object.keys(bonuses).length === 1) {\n    return Object.values(bonuses)[0];\n  }\n  return { type: constants.BONUS_ONE_AMONG_N, bonuses };\n}\n\nexport function bonusSkillRank(skill: dataSkill.TSkillName): IBonusSkillRank {\n  return { type: constants.BONUS_SKILL_RANK, skill };\n}\n\nexport function bonusSpeciality(\n  skill: dataSkill.TSkillName,\n  speciality: string\n): IBonusSpeciality {\n  return { skill, speciality, type: constants.BONUS_SPECIALITY };\n}\n\nexport function bonusLoresheet(lsUid: string): IBonusLoresheet {\n  return { type: constants.BONUS_LORESHEET, lsUid };\n}\n\nexport function bonusLoresheetOption(\n  lsUid: string,\n  uid: string\n): IBonusLoresheetOption {\n  return { type: constants.BONUS_LORESHEET_OPTION, lsUid, uid };\n}\n","import {\n  bonusOneAmongN,\n  bonusSpeciality\n} from \"../../../../perks/actions/bonuses\";\nimport { IDataLoresheet } from \"../../../loresheets\";\nimport { SAGE_LORESHEET } from \"../../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\nexport const crouchingtigersandhiddendragons: IDataLoresheet = {\n  uid: \"tigersanddragons\",\n  type: SAGE_LORESHEET,\n  name: \"Crouching Tigers and Hidden Dragons\",\n  category: \"Rivers and Lakes\",\n  cost: 1,\n  ruleset: \"core\",\n  description:\n    \"The saying goes, “The Jiang Hu is full of Crouching Tigers and Hidden Dragons”. So many in the martial community have every reason to hide their true face, and their true power. Who knows who might prove to be a powerful fighter in seclusion?\",\n  options: [\n    {\n      uid: \"hiddenid\",\n      cost: { min: 0, max: 5 },\n      type: \"Disadvantage\",\n      description:\n        \"You are hiding your true identity behind a disguise. Are you a noble passing as a beggar? Are you masquerading as someone of the opposite gender? Do you pretend to be a member of a certain organization while in reality serving another? Once a session, whenever the veil of your disguise seems to be pierced and protecting your fake identity gets you in trouble, earn 1 additional Destiny. If this is your first or second disadvantage you can get it for free, otherwise it costs 5 Destiny.\",\n      repeatable: false,\n      prerequisites: [],\n      perks: [],\n      payload: \"an hidden identity\"\n    },\n    {\n      uid: \"stabbingguesttechnique\",\n      cost: 3,\n      description:\n        \"Following in the traditions of the Cike of the past, you learn or develop the Stabbing Guest Technique. This helps you when you seek to gain the trust of someone that you seek to hurt, damage, or destroy! As long as you have this stated purpose and make sure to describe your actions as fitting with your devious plans, you get a +5 Action Bonus to all appropriate social rolls to gain their trust, appear friendly and harmless, and enter into their confidence. This bonus is lost if you stop harboring bad intentions.\",\n      type: \"Secret\",\n      repeatable: false,\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"sensechi\",\n      cost: 3,\n      description:\n        \"Get the Wu Wei Specialty: Sense Chi or the Stealth Specialty: Hide Killer Intent for free\",\n      type: \"Bonus\",\n      repeatable: false,\n      prerequisites: [],\n      perks: [\n        bonusOneAmongN({\n          sensechi: bonusSpeciality(\"Wu Wei\", \"Sense Chi\"),\n          hidekillerintent: bonusSpeciality(\"Wu Wei\", \"Hide Killer Intent\")\n        })\n      ]\n    }\n  ]\n};\n","export const AUTO_CONDITION_SKILL = \"AUTO_CONDITION_SKILL\";\nexport type AUTO_CONDITION_SKILL = typeof AUTO_CONDITION_SKILL;\n\nexport const AUTO_CONDITION_ARCHETYPE = \"AUTO_CONDITION_ARCHETYPE\";\nexport type AUTO_CONDITION_ARCHETYPE = typeof AUTO_CONDITION_ARCHETYPE;\n","import { IDataSecretArt } from \"../../../../data/loresheets\";\nimport * as automatics from \"../../../../perks/actions/automatics\";\nimport * as bonuses from \"../../../../perks/actions/bonuses\";\nimport { SECRET_ARTS } from \"../../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\n\nexport const secretartofbattle: IDataSecretArt = {\n  uid: \"secretartofbattle\",\n  type: SECRET_ARTS,\n  name: \"The Secret Art of Battle\",\n  category: \"The Warrior's Art\",\n  cost: 10,\n  ruleset: \"secret-arts\",\n  description: \"Discovery/Toolset/Manipulation Lore (The Warrior's Art).\",\n  options: [],\n  perks: [\n    automatics.conditionalOnArchetype(\"warrior\", [\n      bonuses.bonusLoresheet(\"secretartofbattle\")\n    ])\n  ]\n};\n","import { TSkillName } from \"../../data/skills\";\nimport { autoPerks as IPerk } from \"../../perks/automatics\";\nimport * as constants from \"../constants/automatics\";\n\nimport {\n  IAutomaticArchetypeCondition,\n  IAutomaticSkillCondition\n} from \"../automatics\";\n\nexport function conditionalOnSkill(\n  skill: TSkillName,\n  value: number,\n  perks: IPerk[]\n): IAutomaticSkillCondition {\n  return { type: constants.AUTO_CONDITION_SKILL, skill, value, perks };\n}\n\nexport function conditionalOnArchetype(\n  archetype: string,\n  perks: IPerk[]\n): IAutomaticArchetypeCondition {\n  return { type: constants.AUTO_CONDITION_ARCHETYPE, archetype, perks };\n}\n","/* tslint:disable:import-sources-order named-imports-order ordered-imports*/\n/* eslint-disable import/first */\nimport { IPerk } from \"../../perks\";\n\nimport { SAGE_LORESHEET, SECRET_ARTS } from \"./types\";\n\nexport interface IDataLoresheetOptionPrerequisiteAND {\n  type: \"AND\";\n  prerequisites: string[];\n}\n\nexport interface IDataLoresheetOptionPrerequisiteOR {\n  type: \"OR\";\n  prerequisites: string[];\n}\n\nexport type IDataLoresheetOptionPrerequisite =\n  | string\n  | IDataLoresheetOptionPrerequisiteOR\n  | IDataLoresheetOptionPrerequisiteAND;\n\ninterface IDataGenericLoresheetOption {\n  uid: string;\n  name?: string;\n  type: string;\n  cost: number | { min: number; max: number };\n  description: string;\n  prerequisites: IDataLoresheetOptionPrerequisite[];\n  perks: IPerk[];\n}\n\ninterface IDataGenericLoresheet {\n  uid: string;\n  name: string;\n  category: string;\n  type: string;\n  cost: number;\n  description: string;\n  ruleset: string;\n  options: IDataGenericLoresheetOption[];\n  perks?: IPerk[];\n}\n\nexport interface IDataSecretArtTechnique extends IDataGenericLoresheetOption {\n  name: string;\n}\n\nexport interface IDataSecretArt extends IDataGenericLoresheet {\n  cost: number;\n  type: SECRET_ARTS;\n  options: IDataSecretArtTechnique[];\n}\n\nexport interface IDataLoresheetOption extends IDataGenericLoresheetOption {\n  repeatable: boolean;\n  payload?: string;\n}\nexport interface IDataLoresheet extends IDataGenericLoresheet {\n  type: SAGE_LORESHEET;\n  options: IDataLoresheetOption[];\n}\n\nexport type IDataLoresheetFilter = (arg0: IDataGenericLoresheet) => boolean;\n\n// Core rulebook //\n// Rivers and Lakes\nimport { jianghu } from \"./core/riversandlakes/jianghu\";\nimport { crouchingtigersandhiddendragons } from \"./core/riversandlakes/crouchingtigersandhiddendragons\";\nimport { wulin } from \"./core/riversandlakes/wulin\";\nimport { wulinsage } from \"./core/riversandlakes/wulinsage\";\n// Wulin Factions\n// Orthodox Factions\n// Unorthodox Factions\n// The Wulin Greats\n// Forest and Mountains\n// The Philosophies of Shen Zhou\n// Relationship in Shen Zhou\n// Heretic Lores\n// Secrets Arts\nimport { secretartofbattle } from \"./secret-arts/thewarriorsart/thesecretartofbattle\";\nimport { extraordinarywarriortechniques } from \"./secret-arts/thewarriorsart/extraordinarywarriortechniques\";\n\nconst loresheets: IDataGenericLoresheet[] = [\n  jianghu,\n  crouchingtigersandhiddendragons,\n  wulin,\n  wulinsage,\n  secretartofbattle,\n  extraordinarywarriortechniques\n];\n\nexport function getLoresheets(\n  filter?: IDataLoresheetFilter\n): IDataGenericLoresheet[] {\n  if (!filter) { return loresheets; }\n  return loresheets.filter(ls => filter(ls));\n}\n\nexport function getLoresheetCategories(filter: IDataLoresheetFilter): string[] {\n  return loresheets\n    .filter(ls => filter(ls))\n    .map(ls => ls.category)\n    .filter(\n      (value: string, index: number, self: string[]) =>\n        self.indexOf(value) === index\n    );\n}\n\nexport function validateLoresheet(uid: string): void {\n  if (!loresheets.find((loresheet: IDataLoresheet) => loresheet.uid === uid)) {\n    throw new Error('Invalid loresheet \"' + uid + '\"');\n  }\n}\n\nexport function validateLoresheetOption(lsUid: string, uid: string): void {\n  validateLoresheet(lsUid);\n  const idxLS = loresheets.findIndex(ls => ls.uid === lsUid);\n  if (\n    !loresheets[idxLS].options.find(\n      (option: IDataLoresheetOption) => option.uid === uid\n    )\n  ) {\n    throw new Error('Invalid loresheet option \" + uid + \"');\n  }\n}\n\nexport function getLoresheetData(lsUid: string): IDataGenericLoresheet {\n  const idxLS = loresheets.findIndex(ls => ls.uid === lsUid);\n  return loresheets[idxLS];\n}\n\nexport function isLoresheet(ls: any): boolean {\n  return ls.type === SAGE_LORESHEET;\n}\n\nexport function isSecretArts(ls: any): boolean {\n  return ls.type === SECRET_ARTS;\n}\n\nexport function gotName(lsUid: string): boolean {\n  const data = getLoresheetData(lsUid);\n  return data.type === SECRET_ARTS;\n}\n\nexport function gotPayload(lsUid: string, uid: string): boolean {\n  if (isSecretArts(lsUid)) {\n    return false;\n  }\n  const data = getLoresheetOptionData(lsUid, uid) as IDataLoresheetOption;\n  return data.payload !== undefined;\n}\n\nexport function isRepeatable(lsUid: string): boolean {\n  const data = getLoresheetData(lsUid);\n  return data.type === SAGE_LORESHEET;\n}\n\nexport function getLoresheetOptionData(\n  lsUid: string,\n  optUid: string\n): IDataGenericLoresheetOption {\n  const data = getLoresheetData(lsUid);\n  const idxOpt = data.options.findIndex(o => o.uid === optUid);\n  return data.options[idxOpt];\n}\n","import { IDataLoresheet } from \"../../../../data/loresheets\";\nimport { SAGE_LORESHEET } from \"../../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\nexport const wulin: IDataLoresheet = {\n  uid: \"wulin\",\n  type: SAGE_LORESHEET,\n  name: \"The Wulin\",\n  category: \"Rivers and Lakes\",\n  cost: 0,\n  ruleset: \"core\",\n  description:\n    \"The Wulin is considered a greater family for those who dedicate their lives to the martial arts, regardless of their origins and goals, for only a warrior can truly understand another warrior, even if they stand on opposite sides of the battlefield. It is said that Heaven has a place assigned for everyone. The path of Kung Fu is for those who reject this idea, who believe that fate is in their hands, and that their fortunes are forged by the strength of their spirit and the fire of their passion.\",\n  options: [\n    {\n      uid: \"tieswithanother\",\n      cost: { min: 1, max: 10 },\n      type: \"Involvement\",\n      description:\n        \"The World of Martial Arts is full of heroes. Some heroes become teachers, friends closer than brothers, lovers, or soul mates, while others become sworn rivals or hated enemies. Spend destiny to tie your fate to that of any other character that may appeal to you. In order to declare an existing relationship between the two of you, make a current action (such as defeating them in battle or showing up to assist them), or make sure that you will develop such a relationship shortly. As usual, refer to Introduction to Loresheets for costs.\",\n      repeatable: true,\n      prerequisites: [],\n      perks: [],\n      payload: \"a hero\"\n    },\n    {\n      uid: \"historicalfact\",\n      cost: { min: 3, max: 15 },\n      type: \"Fortune\",\n      description:\n        \"The history of the Wulin is shrouded in the mists of legends and myths, but you manage to shine a light on one particular facet! Introduce a historical fact of your own design that pertains to your current situation and which gives you an advantage of some sort, such as an alternative solution to a problem. This might concern a person, an organization, or even the Wulin as a whole. Needless to say, the Sage is the final arbitrator of cost.\",\n      repeatable: true,\n      prerequisites: [],\n      perks: [],\n      payload: \"an historical fact\"\n    }\n  ]\n};\n","import { IDataLoresheet } from \"../../../../data/loresheets\";\nimport { SAGE_LORESHEET } from \"../../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\nexport const wulinsage: IDataLoresheet = {\n  uid: \"wulinsage\",\n  type: SAGE_LORESHEET,\n  name: \"The Wulin Sage\",\n  category: \"Rivers and Lakes\",\n  cost: 0,\n  ruleset: \"core\",\n  description:\n    \"Legends speak of a mythical figure that oversees the Wulin on behalf of Heaven. The Sage records all of the history and affairs of the martial world; he decides who is worthy of advancement and reports to the Celestial Order on the advancement and deeds of Chivalrous heroes, and to the Hellish Courts on those of the selfish. He sees that those who seek greater challenges reap greater glory and attain higher power.\",\n  options: [\n    {\n      uid: \"fact\",\n      cost: { min: 5, max: 15 },\n      type: \"Fortune\",\n      description:\n        \"With Sage approval, you may introduce a fact about the truth behind the Wulin Sage that would influence the current story.\",\n      repeatable: true,\n      prerequisites: [],\n      perks: [],\n      payload: \"a fact\"\n    },\n    {\n      uid: \"tieswithsage\",\n      cost: { min: 5, max: 10 },\n      type: \"Involvement\",\n      description: \"Your destiny will be tied to the figure of the Wulin Sage.\",\n      repeatable: false,\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"tiensnpcwithsage\",\n      cost: { min: 3, max: 10 },\n      type: \"Involvement\",\n      description:\n        \"The Destiny of an NPC of your choice will be or is tied to the figure of the Wulin Sage.\",\n      repeatable: true,\n      prerequisites: [],\n      perks: [],\n      payload: \"a NPC\"\n    }\n  ]\n};\n","import { IDataSecretArt } from \"../../../../data/loresheets\";\nimport { SECRET_ARTS } from \"../../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\n\n// TODO : grant free lorsheet from conditional status\nexport const extraordinarywarriortechniques: IDataSecretArt = {\n  uid: \"extraordinarywarriortechniques\",\n  type: SECRET_ARTS,\n  name: \"Extraordinary Warrior Techniques\",\n  category: \"The Warrior's Art\",\n  cost: 1,\n  ruleset: \"secret-arts\",\n  description:\n    \"These are techniques that flow from an understanding of the Warrior’s Art – though not part of specific Styles, they might be considered Formless Techniques for Externals. They are based on a deeper insight of the lessons of the Five Combat Approaches as applied on the field of battle – being universally applicable, there are almost as many variants and individual expressions of these techniques as there are practitioners.\",\n  options: [\n    {\n      uid: \"controllinginnerforce\",\n      cost: 3,\n      name: \"Controlling Inner Force\",\n      type: \"Flood\",\n      description:\n        \"Whether through pressure points, cruel cuts, or a deeper understanding of Wu Wei, the Warrior breaks the equilibrium of their opponent. When you achieve a critical success on a Disorient Marvel, you can Flood a die from your River to increase the penalty to -10\",\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"controllingouterforce\",\n      cost: 3,\n      name: \"Controlling Outer Force\",\n      type: \"Flood\",\n      description:\n        \"The Style of your opponent flows in an unbroken stream from hard-won lessons to the expression of techniques. Disrupt that stream, and you deny them the tools of combat. When you achieve a critical success on a Disrupt Marvel, you can Flood a die from your River to increase the penalty to -10.\",\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"gardenershapesthesaplingtechnique\",\n      cost: 5,\n      name: \"Gardener Shapes the Sapling Technique\",\n      type: \"Extended/Augment\",\n      description:\n        \"The Warrior can also be a teacher; their advice serves as a sharp and balanced weapon in their pupil's hands. As the gardener cultivates his plants from seedlings, you shape your students to grow and prosper. You can spend 1 Joss to use a scene of training to confer an Approach to someone else, until the end of the next combat. You and the Sage decide on the details of this particular training, as well as the outlines of the Battle Condition; your pupil can only choose whether to obey their master!\",\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"mirrorreflectiontechnique\",\n      cost: 3,\n      name: \"Mirror Reflection Technique\",\n      type: \"Flood\",\n      description:\n        \"You not only excel at reading the intricacies of your opponent’s style, but spend long hours training to copy it, unconsciously modeling your Chi to match their movements and shifting your own muscle tension to mimic theirs. Using the conflict itself as your training ground, you assume the hidden strengths of your enemy. After witnessing an opponent in combat and Detecting their chosen Combat Condition with the usual Tactics roll, you can Flood two dice from your River to instantly assume their approach and the associated Combat Condition.\",\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"mirrorreflectiontechnique_2\",\n      cost: 5,\n      name: \"Mirror Reflection Technique\",\n      type: \"Flood\",\n      description:\n        \"There are whispers of an ultimate form of this technique that allows a Warrior to flow through forms to instinctively assume a superior tactic in response to his enemy. For every action, there is an appropriate reaction, and these legendary warriors have internalized the forms of battle. For an additional 5 Destiny, you learn the ultimate form of this technique: instead of copying your opponent’s form, you assume an approach that controls his! You describe the generalities of the approach, and the Sage determines the details.\",\n      prerequisites: [\"mirrorreflectiontechnique\"],\n      perks: []\n    },\n    {\n      uid: \"qualityevaluationtechnique\",\n      cost: 3,\n      name: \"Quality Evaluation Technique\",\n      type: \"Augment\",\n      description:\n        \"There exists a multitude of techniques to gauge an opponent’s worthiness and the vital components of their Styles. Some note the development of muscles and ligaments; others read the eyes and their movement. More utilitarian approaches include sneaking a look at their opponents while they train! Whatever your approach, you excel at weighing their strengths and weaknesses. You get +10 to Tactics rolls made to evaluate the qualities of an opponent’s External Style.\",\n      perks: [],\n      prerequisites: []\n    },\n    {\n      uid: \"springfollowswintertechnique\",\n      cost: 5,\n      name: \"Spring Follows Winter Technique\",\n      type: \"Wave\",\n      description:\n        \"Learning when to let go might be the hardest lesson to learn; one way or the other, you’ve mastered it. When others stubbornly refuse to move, you flow and shift. It is in the nature of things to change. Make a Hard (30) Tactics Wave – if this { is } successful, you are allowed to spend 2 Joss to shift your Approach at the end  of this turn. The Difficulty rises to Memorable (40) if you { are } trying to shift to the Approach that Controls your current one.\",\n      perks: [],\n      prerequisites: []\n    },\n    {\n      uid: \"stancebreakingforcetechnique\",\n      cost: 3,\n      name: \"Stance-Breaking Force technique\",\n      type: \"Augment\",\n      description:\n        \"Having internalized the lessons of Five-Element combat theory and the tactical Classics, you easily wield the strengths of your Approach. Increase the bonus to Tactics rolls against an opponent’s approach that your approach Controls to +10.\",\n      prerequisites: [],\n      perks: []\n    },\n    {\n      uid: \"tendirectionmovementapproach\",\n      cost: 2,\n      name: \"Ten-Direction Movement Approach\",\n      type: \"Flood\",\n      description:\n        \"Trap the foot. Close the gate. Block the way. Prevent your opponent from moving as they want, and remove any obstacles to your own path. Mastery of the field is the first step to victory. When you achieve a critical success on a Shaping Marvel, you can Flood to add +5 to the final result per die flooded.\",\n      perks: [],\n      prerequisites: []\n    },\n    {\n      uid: \"unassailablebattlesainttechnque\",\n      cost: 5,\n      name: \"Unassailable Battle Saint Technique\",\n      type: \"Augment\",\n      description:\n        \"You are an enlightened warrior, having reached the deeper secrets of the Five-Element Approach to battle. You can spend 1 Joss when you roll a Critical Success to create a Combat Condition for yourself to make { it } a Major Condition\",\n      prerequisites: [],\n      perks: []\n    }\n  ]\n};\n","import { IEffect } from \"../../state/effects\";\nimport { TChiName } from \"../chi\";\nimport { WEAPON_TYPE } from \"../weapons\";\n\n// Constants used to differentiate between kungfu\nexport const KUNGFU_EXTERNAL = \"KUNGFU_EXTERNAL\";\nexport type KUNGFU_EXTERNAL = typeof KUNGFU_EXTERNAL;\n\nexport const KUNGFU_INTERNAL = \"KUNGFU_INTERNAL\";\nexport type KUNGFU_INTERNAL = typeof KUNGFU_INTERNAL;\n\nexport type KUNGFU_TYPE = KUNGFU_INTERNAL | KUNGFU_EXTERNAL;\n\nexport interface IDataExternalKungfuStatistics {\n  [index: string]: number;\n  speed: number;\n  footwork: number;\n  strike: number;\n  damage: number;\n  block: number;\n  toughness: number;\n}\n\nexport interface IDataExternalKungfuPrerequisite {\n  uid: string;\n}\n\nexport interface IDataExternalKungfuTechnique {\n  name: string;\n  cost: number;\n  description: string;\n  effect: IEffect;\n  uid: string;\n  prerequisites?: IDataExternalKungfuPrerequisite[];\n}\n\nexport interface IDataInternalKungfuTechnique {\n  name: string;\n  level: number; // 1 | 2 | 3 | 4 | 5;\n  description: string;\n  effect: IEffect;\n  uid: string;\n}\n\nexport interface IDataExternalKungfu {\n  name: string;\n  qualities: string[];\n  laugths: string;\n  fears: string;\n  weapons: WEAPON_TYPE[];\n  statistics: IDataExternalKungfuStatistics;\n  techniques: IDataExternalKungfuTechnique[];\n  uid: string;\n}\n\nexport interface IDataInternalKungfu {\n  name: string;\n  element: TChiName;\n  description: string;\n  techniques: IDataInternalKungfuTechnique[];\n  uid: string;\n}\n","export const EFFECT_COMBAT_STATISTIC = 'EFFECT_COMBAT_STATISTIC';\nexport type EFFECT_COMBAT_STATISTIC = typeof EFFECT_COMBAT_STATISTIC;\n\nexport const EFFECT_CONDITIONAL_TEXT = 'EFFECT_CONDITIONAL_TEXT';\nexport type EFFECT_CONDITIONAL_TEXT = typeof EFFECT_CONDITIONAL_TEXT;\n\nexport const EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI = 'EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI';\nexport type EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI = typeof EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI;\n","import * as constants from \"../constants/effects\";\nimport {\n  IEffectChiThresholdIncreaseBaseChi,\n  IEffectCombatStatistic,\n  IEffectConditionalText,\n  IEffectStatistic\n} from \"../effects\";\n\nexport function combatStatistic(\n  statistic: IEffectStatistic,\n  increase: number\n): IEffectCombatStatistic {\n  return { increase, statistic, type: constants.EFFECT_COMBAT_STATISTIC };\n}\n\nexport function conditionalText(textInput: string[]): IEffectConditionalText {\n  const text = textInput.filter((line: string) => line.length > 0);\n  if (text.length === 0) {\n    throw new Error(\"Error with conditionalText : empty text\");\n  }\n  return { text, type: constants.EFFECT_CONDITIONAL_TEXT };\n}\n\nexport function conditionalOnelineText(text: string): IEffectConditionalText {\n  return conditionalText(new Array<string>(text));\n}\n\nexport function increaseBaseChiForThreshold(\n  chiIncrease: number\n): IEffectChiThresholdIncreaseBaseChi {\n  return {\n    chiIncrease,\n    type: constants.EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI\n  };\n}\n","import * as effects from \"../../../perks/actions/effects\";\nimport { IDataExternalKungfu } from \"../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\n\nexport const blossomHarvest: IDataExternalKungfu = {\n  name: \"Blossom Harvest\",\n  uid: \"Blossom Harvest\",\n  qualities: [\n    \"This is one of the most honest and straightforward fighting styles there is. It dispenses with trickery or fancy moves, and compensates with sweat and resilience. Its training methods use everyday items and situations, such as running upstream through a river to build stamina, and using farming tools to practice weapon forms. Most of its techniques and theories also incorporate metaphors that are easy for common people to understand.\",\n    \"Because it is so approachable, it has achieved a folk hero status; peasant rebellions often start training with this fighting style, calling those who stand against injustice “Blossoming Heroes”.\"\n  ],\n  weapons: [\"Massive\", \"Staff\", \"Unarmed\"],\n  laugths:\n    \"A chain is only as strong as its weakest link, and so Blossom Harvest laughs at styles that are overly complicated or full of flourishes. These intricate methods are easily smashed aside and broken. It likewise laughs at such trivialities as being outnumbered, or disadvantageous terrain – pure grit and hellish training have rendered Blossoming Heroes fearless to such things!\",\n  fears:\n    \"This style has problems when facing fighters who are reactive. Blossom Harvest’s openness is easy to read and predict, giving such opponents everything they need. It’s also ill-prepared for enemies who wield supernatural forces or influence.\",\n  statistics: {\n    speed: 5,\n    footwork: 0,\n    strike: 5,\n    damage: 10,\n    block: 5,\n    toughness: 10\n  },\n  techniques: [\n    {\n      name: \"Heart-Fire Temper Skill\",\n      cost: 4,\n      description:\n        \"Pain and fear blunt edges worse than rust, but your training has seen every bone broken and regrown stronger. To you, pain is but a reminder of your lessons and your teacher’s wisdom.\",\n      effect: effects.conditionalOnelineText(\n        \"When you have a physical wound condition, this style’s Damage bonus increases to +15.\"\n      ),\n      uid: \"Heart-Fire Temper Skill\"\n    },\n    {\n      name: \"Iron Skin\",\n      cost: 5,\n      description:\n        \"Hardened muscles and willpower have given you great resistance to physical punishment. Spears bend and sticks break upon striking you!\",\n      effect: effects.combatStatistic(\"toughness\", 5),\n      uid: \"Iron Skin\"\n    },\n    {\n      name: \"Iron Skin\",\n      uid: \"Iron Skin 2\",\n      cost: 4,\n      description:\n        \"Hardened muscles and willpower have given you great resistance to physical punishment. Spears bend and sticks break upon striking you!\",\n      effect: effects.increaseBaseChiForThreshold(2),\n      prerequisites: [{ uid: \"iron_skin_1\" }]\n    },\n    {\n      name: \"Nine Mountains Great Strength\",\n      uid: \"Nine Mountains Great Strength\",\n      cost: 5,\n      description:\n        \"Your attacks are like mountains: grand and overwhelming, undeniable and unmovable.\",\n      effect: effects.combatStatistic(\"strike\", 5)\n    },\n    {\n      name: \"No Vermin in the World\",\n      uid: \"No Vermin in the World\",\n      cost: 2,\n      description:\n        \"The corrupt are numerous and the virtuous seem but few these days. Villages are razed to the ground and orphans cry in the streets. The great men of this age therefore have no choice but to be Blossoming Heroes, fighting off entire gangs all by themselves!\",\n      effect: effects.conditionalOnelineText(\n        \"All your attacks count as Area attacks for the purpose of damaging groups of Minions.\"\n      )\n    }\n  ]\n};\n","import * as effects from \"../../../perks/actions/effects\";\nimport { IDataExternalKungfu } from \"../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\n\nexport const boneFedWolfFang: IDataExternalKungfu = {\n  name: \"Bone-Fed Wolf Fang\",\n  uid: \"Bone-Fed Wolf Fang\",\n  weapons: [\"Massive\", \"Saber\"],\n  qualities: [\n    \"Generations of battlefield experience have shaped a fighting style developed with the practicalities of warfare in mind. Some maneuvers were loosely inspired by the gruesome methods by which wolves drag down their prey. It is mainly taught by the military, but unfortunately, many deserters take up a life of banditry, making this style a common plague for simple people. Because of this, the style is also often called a dog’s way of fighting.\",\n    \"This style focuses on hard, linear movements designed to cripple and exploit weaknesses–the supreme soldier needs efficiency, not beauty. It cruelly maims first, and dispatches second. No methods are too dishonest when victory is on the line.\"\n  ],\n  laugths:\n    \"The wolf laughs at honesty, which it rewards with hungry teeth. Above all else, the wolf knows no greater joy than to fight someone vulnerable or caught off guard.\",\n  fears:\n    \"The wolf fears what is hidden or unorthodox, for his many strategies don’t account for them. The wolf also dislikes being outnumbered and surrounded; it relies on being the hunting pack, not the hunted.\",\n  statistics: {\n    speed: +5,\n    footwork: +5,\n    strike: +5,\n    damage: +10,\n    block: +5,\n    toughness: +5\n  },\n  techniques: [\n    {\n      name: \"Circling Pack\",\n      cost: 4,\n      description:\n        \"Wolves strike from all sides to overwhelm their prey. You force a response with your weapon, creating an opening so you can deal a blow to a vulnerable spot.\",\n      effect: effects.conditionalOnelineText(\n        \"The difficulty to recover from Disrupt or Disorient Marvels you have imposed is increased by 10.\"\n      ),\n      uid: \"Circling Pack\"\n    },\n    {\n      name: \"Fighting With Fire\",\n      cost: 4,\n      description:\n        \"Fire is a useful, if dangerous, tool to use in war. Its effects on the enemy are startling: set something ablaze that they value and they will flock towards it; set something ablaze that they can afford to lose and they won’t dare approach. So too must your strikes be utilized to force them into a pattern and method of your choosing. An enemy that follows your lead is not worthy of the name\",\n      effect: effects.conditionalOnelineText(\n        \"This style’s Block and Dodge bonuses increase to +10 against any Disoriented or Disrupted target\"\n      ),\n      uid: \"Fighting With Fire\"\n    },\n    {\n      name: \"March Towards Hell\",\n      cost: 4,\n      description:\n        \"The wise general makes his enemies tire themselves out by forcing them to march towards his position. Once in battle, he cleverly uses his troops to dictate the maneuvers of his enemy. Your attacks follow the same philosophy; your enemies are already defeated, the slaughter a mere formality.\",\n      effect: effects.conditionalOnelineText(\n        \"You may Flood 1 die from the River while you make an attack. If you do, the strike also creates a Disorient or Disrupt condition if it hits.\"\n      ),\n      uid: \"March Towards Hell\"\n    },\n    {\n      name: \"Rainfall at Night\",\n      cost: 4,\n      description:\n        \"The battlefield is where wars are ended, but to a peerless general their outcome is determined beforehand. Assassinate their officers, poison the wells, fill their hearts with propaganda, and creep inside their camps to set fires and steal horses. These are the ways of the warrior who knows neither honor nor defeat.\",\n      effect: effects.conditionalOnelineText(\n        \"This style’s Strike bonus increases to +10 against any Disoriented or Disrupted target.\"\n      ),\n      uid: \"Rainfall at Night\"\n    },\n    {\n      name: \"Wolves Devour the Lion\",\n      cost: 4,\n      description:\n        \"Stress bruised ribs until they crack. Lash sore flesh until it rips. The tales of glorious battle are for the halls of gold and silk, but they are built on your acts in the fields of iron and wolves.\",\n      effect: effects.conditionalOnelineText(\n        \"This style’s Damage bonus increases to +15 against any Disoriented or Disrupted target.\"\n      ),\n      uid: \"Wolves Devour the Lion\"\n    }\n  ]\n};\n","import * as effects from \"../../../perks/actions/effects\";\nimport { IDataInternalKungfu } from \"../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\n\nexport const boundlessProsperityManual: IDataInternalKungfu = {\n  name: \"Boundless Prosperity Manual\",\n  uid: \"Boundless Prosperity Manual\",\n  description:\n    \"One of the most famous instructions on health is the Boundless Prosperity Manual. It teaches proper breathing and exercise, and brings long life and vigorous health. Some rare copies go much further! They can teach you how to transcend mortal limitations through internal alchemy. Those who carefully decipher the clues and study the methods await a transformation to a higher state of being! These rare copies are all jealously guarded by gangs and martial masters.\",\n  element: \"wood\",\n  techniques: [\n    {\n      level: 1,\n      name: \"Retain Balanced Nature\",\n      uid: \"Retain Balanced Nature\",\n      description:\n        \"You promote the circulation of breath throughout your system by clearing away pollutants and obstructions.\",\n      effect: effects.conditionalOnelineText(\n        \"You have a +5 bonus to a roll made to remove a Disoriented or Disrupted Marvel, provided the Marvel is described as being caused by pain, blocked pressure points, injuries, or similar effects. You can also make such checks using only a single die, instead of needing a set.\"\n      )\n    },\n    {\n      level: 2,\n      name: \"Act Without Resistance\",\n      uid: \"Act Without Resistance\",\n      description:\n        \"One of the many techniques of physical augmentation, the manual teaches you how to achieve a forcefulness in your movements that sweeps away opposing powers.\",\n      effect: effects.conditionalOnelineText(\"You have a +10 bonus to Damage.\")\n    },\n    {\n      level: 2,\n      name: \"Be Where You Must\",\n      uid: \"Be Where You Must\",\n      description:\n        \"The key to increased physical potency isn't just greater power, but knowing when to show restraint. Precision can cut away unnecessary motion and purify your movement.\",\n      effect: effects.conditionalText([\n        \"Round-long duration.\",\n        \"You have a +10 bonus to Footwork.\"\n      ])\n    },\n    {\n      level: 2,\n      name: \"Move According To Purpose\",\n      uid: \"Move According To Purpose\",\n      description:\n        \"Many act without being truly aware of what they are doing. You cast aside such sleepwalking and go through life with certainty and flawlessness.\",\n      effect: effects.conditionalOnelineText(\"You have a +10 bonus to Strike.\")\n    },\n    {\n      level: 2,\n      name: \"Understand What You See\",\n      uid: \"Understand What You See\",\n      description:\n        \"Hone your mind to clarity. All phenomena and occurrences will become obvious!\",\n      effect: effects.conditionalOnelineText(\"You have a +10 bonus to Speed.\")\n    },\n    {\n      level: 3,\n      name: \"Covering Weakness with Strength\",\n      uid: \"Covering Weakness with Strength\",\n      description:\n        \"Many people in need of the Manual are sick, crippled or scarred. It can’t restore what is truly lost, but it can help overcome the troubles these unfortunate conditions bring.\",\n      effect: effects.conditionalText([\n        \"Round-long duration. You may spend one Chi per round to extend the technique’s duration another round; you must spend the Chi at the beginning of each new round.\",\n        \"Treat your Injury Conditions as if they were one step less severe when determining the Action or Breath penalty they inflict.\",\n        \"This doesn’t cure or reduce the conditions, only their effects.\"\n      ])\n    },\n    {\n      level: 3,\n      name: \"Fortifying Oneself against the World\",\n      uid: \"Fortifying Oneself against the World\",\n      description:\n        \"The world is filled with harmful maladies that can damage your organs. The manual teaches methods which bolster the body against such dangers.\",\n      effect: effects.conditionalText([\n        \"Round-long duration.\",\n        \"You have a +10 bonus to your Hardiness and to Chi Aura when resisting Rippling rolls caused by the Doctor’s Arts.\"\n      ])\n    },\n    {\n      level: 3,\n      name: \"Reflexes Like Lightning\",\n      uid: \"Reflexes Like Lightning\",\n      description:\n        \"Life is tenacious and adaptive. If you can fully attain these qualities, then you can truly be a master of yourself and of others.\",\n      effect: effects.conditionalOnelineText(\n        \"You have a +10 bonus to any Marvel or attempt to break a Wave.\"\n      )\n    },\n    {\n      level: 4,\n      name: \"Five Elements Supreme Combination\",\n      uid: \"Five Elements Supreme Combination\",\n      description:\n        \"You can use internal alchemy to directly enhance the workings of your body.\",\n      effect: effects.conditionalText([\n        \"Round-long duration.\",\n        \"You have a +15 bonus to your Speed, Footwork, Strike, Damage, Block, or Toughness.\",\n        \"You may boost this technique, adding the bonus to another statistic for every two Chi you spend.\"\n      ])\n    },\n    {\n      level: 4,\n      name: \"King of Heaven Shapes the Earth\",\n      uid: \"King of Heaven Shapes the Earth\",\n      description:\n        \"You are struck by a fatal blow, yet miraculously you are alive! You direct blood away from the open wound, dull the pain with your will, and even rearrange your internal organs to keep them away from the injury. Only someone with absolute control over their own body could perform this feat.\",\n      effect: effects.conditionalOnelineText(\n        \"When someone makes a Rippling roll against you to cause an Injury or Medical Condition, reduce the number of dice in the roll by two. You may boost this technique to remove one more die per two Chi spent. You can’t reduce the number of dice below one.\"\n      )\n    },\n    {\n      level: 5,\n      name: \"God-Body Transcendence\",\n      uid: \"God-Body Transcendence\",\n      description:\n        \"The final technique of the Manual is not taught, but understood. The accumulation of physical and spiritual health has created an immortal divine body that will endure after death on a higher level of existence. It is exhausting to do so, but you can briefly bring forth this higher nature.\",\n      effect: effects.conditionalText([\n        \"Round-long duration. You may spend Chi each round to extend the technique’s duration another round; you must spend the Chi at the beginning of each new round. The first extension costs 1 chi, the second costs 2 chi, the third costs 3 chi, and so on.\",\n        \"Increase your Lake size by 1.\"\n      ])\n    }\n  ]\n};\n","import * as effects from \"../../../perks/actions/effects\";\nimport { IDataInternalKungfu } from \"../types\";\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:object-literal-sort-keys */\n\nexport const fireSutra: IDataInternalKungfu = {\n  name: \"Fire Sutra\",\n  uid: \"Fire Sutra\",\n  description:\n    \"Few forces in the world are as primal and respected as fire, so it is no wonder that this sutra was a common art even in ancient days, particularly in the west where the sutras are thought to have been first written. Through meditation and purification, the student learns how to excite his own yang energy to the point of ignition.\",\n  element: \"fire\",\n  techniques: [\n    {\n      level: 1,\n      name: \"Thought of Flame\",\n      uid: \"Thought of Flame\",\n      description:\n        \"The most basic of techniques; once mastered, it is as easy and natural as exhalation. Internal power is gathered and expelled as yang-aspected energy.\",\n      effect: effects.conditionalOnelineText(\n        \"You can use the Burn effect as a Minor Action on your attack with a +5 bonus.\"\n      )\n    },\n    {\n      level: 2,\n      name: \"Breath of Buddha\",\n      uid: \"Breath of Buddha\",\n      description:\n        \"You expel your internal power directly in to your opponent. Normally, a transfer of inner power is used to heal, but your raging energy heats and dehydrates their body.\",\n      effect: effects.conditionalText([\n        \"If your strike hits, and the target has purified Earth, Metal or Water chi, he doesn’t recspire any spent Chi points of those types at the end of this round.\",\n        \"You have a +5 bonus to any Disrupt or Disorient Marvel that narratively uses heat or dehydration.\"\n      ])\n    },\n    {\n      level: 2,\n      name: \"Fire to Heaven Ascension\",\n      uid: \"Fire to Heaven Ascension\",\n      description:\n        \"It is the nature of fire to grow tall and turn away from the earth. Following this example, you transform your energy and achieve similar properties.\",\n      effect: effects.conditionalOnelineText(\n        \"You have a +15 bonus to your Footwork when rolling to ascend, such as by jumping or running upwards.\"\n      )\n    },\n    {\n      level: 2,\n      name: \"Fusing Flames\",\n      uid: \"Fusing Flames\",\n      description:\n        \"Bring a flame close to fuel and it will scorch or ignite, but bring two flames together and they only merge into a greater whole. Flame cannot burn flame. Instead of expelling your yang-energy, you keep it close to the surface, so that flames leave you unharmed.\",\n      effect: effects.conditionalText([\n        \"Round-long duration.\",\n        \"You have a +10 bonus to your Chi Aura when rolling to protect against Burn damage.\",\n        \"If one or more fighters other than you within your zone use any points of Fire Chi, you regain one additional point of normal Chi at the end of this round. You can gain only a single point this way, regardless of how many people use Fire Chi or how much they use.\"\n      ])\n    },\n    {\n      level: 2,\n      name: \"Verse of Fire\",\n      uid: \"Verse of Fire\",\n      description:\n        \"A few simple words instruct the student on key points in their body to flow their internal energy through, and in what order. It’s easy to learn, but the effects are spectacular: intensely hot fire!\",\n      effect: effects.conditionalOnelineText(\n        \"You can use the Burn effect as a Minor Action on your attack with a +10 bonus\"\n      )\n    },\n    {\n      level: 3,\n      name: \"Elusive Desert Being\",\n      uid: \"Elusive Desert Being\",\n      description:\n        \"The texts speak of gods and ghosts that dwell in hot and distant places. A holy man once traveled far to seek these beings out, and he impressed them with his enlightenment. They rewarded him with their secrets, which he wrote down in this sutra. It speaks of foreign monsters made of smokeless fire, their cunning trickery, and their mirages.\",\n      effect: effects.conditionalText([\n        \"You must activate this technique while rolling initiative, and it lasts for the entire round.\",\n        \"You have a +10 bonus to your Speed and Footwork.\",\n        \"If you Dodge an attack, your opponent can negate this technique’s bonus to your roll by including a Hard (30) Awareness check as a minor action on his attack roll. You may boost this technique to increase the difficulty by one step per point of Chi spent.\"\n      ])\n    },\n    {\n      level: 3,\n      name: \"Mantra of Immolation\",\n      uid: \"Mantra of Immolation\",\n      description:\n        \"A profound phrase teaches a transformation of inner power to create fire so hot that it can melt iron.\",\n      effect: effects.conditionalOnelineText(\n        \"You can use the Burn effect as a Minor Action on your attack with a +15 bonus. If it forces an immediate Rippling roll, the roll receives a +5 bonus.\"\n      )\n    },\n    {\n      level: 3,\n      name: \"Nine-Fire Seal\",\n      uid: \"Nine-Fire Seal\",\n      description:\n        \"Power coruscates through your body, flooding your chakra and bringing your nature closer to that of a wildfire than that of a mere man.\",\n      effect: effects.conditionalText([\n        \"Round-long duration.\",\n        \"You have a +20 bonus to your Chi Aura when rolling to protect against Burn or Freeze damage.\",\n        \"If you used this technique last round as well, you have a +5 bonus to your Strike this round.\"\n      ])\n    },\n    {\n      level: 4,\n      name: \"Aura of the Qilin\",\n      uid: \"Aura of the Qilin\",\n      description:\n        \"The mythical Qilin symbolizes prosperity and wisdom, but its ability to surround itself in flames is more practical to you. You may not have seen such a beast yourself, but the sutras describe how to mimic this trick.\",\n      effect: effects.conditionalText([\n        \"Round-long duration.\",\n        \"You have a +30 bonus to your Chi Aura when rolling to protect against Burn or Freeze damage.\",\n        \"If you score a critical success on a Dodge roll, you may Reply against your opponent and inflict one Ripple.\"\n      ])\n    },\n    {\n      level: 4,\n      name: \"The Sun Scripture\",\n      uid: \"The Sun Scripture\",\n      description:\n        \"The sun is a heavenly fire of such strength that it can’t reside on the earth. Your yang-energy approaches divine nature: you can create fire more brilliant than any torch, hearth, or forge.\",\n      effect: effects.conditionalOnelineText(\n        \"You can use the Burn effect as a Minor Action on your attack with a +20 bonus. If it forces an immediate Rippling roll, the roll receives a +10 bonus.\"\n      )\n    },\n    {\n      level: 5,\n      name: \"Prayer of Cosmic Rebirth\",\n      uid: \"Prayer of Cosmic Rebirth\",\n      description:\n        \"Religious texts describe the death and resurrection of the universe. A cleansing fire will consume all material existence, and so purge impurities. With a display of utmost skill and benevolence, you call upon the brightest fire that resides within the human spirit to free a life from its current, unclean incarnation.\",\n      effect: effects.conditionalOnelineText(\n        \"You can use the Burn effect as a Minor Action on your attack with a +20 bonus. If it forces an immediate Rippling roll, the roll receives a +15 bonus; any Chi Aura used to protect against this damage costs 2 Chi points per die to purchase.\"\n      )\n    }\n  ]\n};\n","/* eslint-disable import/first */\nimport {\n  IDataExternalKungfu,\n  IDataExternalKungfuTechnique,\n  IDataInternalKungfu,\n  IDataInternalKungfuTechnique,\n  KUNGFU_EXTERNAL,\n  KUNGFU_INTERNAL,\n  KUNGFU_TYPE\n} from \"./types\";\n\nimport { blossomHarvest } from \"./externals/blossom-harvest\";\nimport { boneFedWolfFang } from \"./externals/bone-fed-wolf-fang\";\nexport const externalKungfu: IDataExternalKungfu[] = [\n  blossomHarvest,\n  boneFedWolfFang\n];\n\nimport { boundlessProsperityManual } from \"./internals/boundless-prosperity-manual\";\nimport { fireSutra } from \"./internals/fire-sutra\";\nexport const internalKungfu: IDataInternalKungfu[] = [\n  boundlessProsperityManual,\n  fireSutra\n];\n\nexport function validateKungFuType(type: KUNGFU_TYPE): void {\n  switch (type) {\n    case KUNGFU_EXTERNAL:\n      return;\n    case KUNGFU_INTERNAL:\n      return;\n    default:\n      throw new Error('Invalid kung fu type : \"' + type + '\"');\n  }\n}\n\nexport function validateKungFuStyle(type: KUNGFU_TYPE, styleUid: string): void {\n  validateKungFuType(type);\n  if (type === KUNGFU_EXTERNAL) {\n    const filtered = externalKungfu.filter(\n      (kf: IDataExternalKungfu) => kf.uid === styleUid\n    );\n    if (filtered.length < 1) {\n      throw new Error('Invalid external kungfu \"' + styleUid + '\"');\n    }\n  } else {\n    const filtered = internalKungfu.filter(\n      (kf: IDataInternalKungfu) => kf.uid === styleUid\n    );\n    if (filtered.length < 1) {\n      throw new Error('Invalid internal kungfu \"' + styleUid + '\"');\n    }\n  }\n}\n\nexport function validateKungFuTechnique(\n  type: KUNGFU_TYPE,\n  styleUid: string,\n  techniqueUid: string\n): void {\n  validateKungFuStyle(type, styleUid);\n  if (type === KUNGFU_EXTERNAL) {\n    const filtered = externalKungfu.filter((kf: IDataExternalKungfu) => {\n      return (\n        kf.uid === styleUid &&\n        kf.techniques.filter(\n          (tech: IDataExternalKungfuTechnique) => tech.uid === techniqueUid\n        ).length > 0\n      );\n    });\n    if (filtered.length < 1) {\n      throw new Error(\n        'Invalid external kungfu technique \"' +\n          techniqueUid +\n          '\" for style \"' +\n          styleUid +\n          '\"'\n      );\n    }\n  } else {\n    const filtered = internalKungfu.filter((kf: IDataInternalKungfu) => {\n      return (\n        kf.uid === styleUid &&\n        kf.techniques.filter(\n          (tech: IDataInternalKungfuTechnique) => tech.uid === techniqueUid\n        ).length > 0\n      );\n    });\n    if (filtered.length < 1) {\n      throw new Error(\n        'Invalid internal kungfu technique \"' +\n          techniqueUid +\n          '\" for style \"' +\n          styleUid +\n          '\"'\n      );\n    }\n  }\n}\n\nexport function getKungFuType(styleUid: string): KUNGFU_TYPE {\n  const externalIdx = externalKungfu.findIndex(kf => kf.uid === styleUid);\n  const internalIdx = internalKungfu.findIndex(kf => kf.uid === styleUid);\n  if (externalIdx !== -1) {\n    return KUNGFU_EXTERNAL;\n  } else if (internalIdx !== -1) {\n    return KUNGFU_INTERNAL;\n  } else {\n    throw new Error(\"Unknwon kungfu \" + styleUid);\n  }\n}\n\nexport function getKungfuChi(type: KUNGFU_TYPE, styleUid: string) {\n  if (type === KUNGFU_EXTERNAL) {\n    return \"general\";\n  } else {\n    return (kungfuData(KUNGFU_INTERNAL, styleUid) as IDataInternalKungfu)\n      .element;\n  }\n}\n\nexport function kungfuData(type: KUNGFU_TYPE, styleUid: string) {\n  if (type === KUNGFU_EXTERNAL) {\n    const idxKF = externalKungfu.findIndex(kf => kf.uid === styleUid);\n    return externalKungfu[idxKF];\n  } else {\n    const idxKF = internalKungfu.findIndex(kf => kf.uid === styleUid);\n    return internalKungfu[idxKF];\n  }\n}\n\nexport function kungfuTechniqueData(\n  type: KUNGFU_TYPE,\n  styleUid: string,\n  techUid: string\n): IDataExternalKungfuTechnique | IDataInternalKungfuTechnique {\n  if (type === KUNGFU_EXTERNAL) {\n    const idxKF = externalKungfu.findIndex(kf => kf.uid === styleUid);\n    const idxTech = externalKungfu[idxKF].techniques.findIndex(\n      t => t.uid === techUid\n    );\n    return externalKungfu[idxKF].techniques[idxTech];\n  } else {\n    const idxKF = internalKungfu.findIndex(kf => kf.uid === styleUid);\n    const idxTech = internalKungfu[idxKF].techniques.findIndex(\n      t => t.uid === techUid\n    );\n    return internalKungfu[idxKF].techniques[idxTech];\n  }\n}\n","/* eslint-disable import/first */\nimport { IDiscount } from \"../perks/discounts\";\nimport { getDiscountIndexes, updateDiscounts } from \"./discounts\";\nimport { IStoreState } from \"./type\";\n\nexport interface ICost {\n  canPay: boolean;\n  destiny: number;\n  discounts?: Array<{\n    idx: number;\n    newValue: number;\n  }>;\n  original: number;\n}\n\nexport const zeroCost: ICost = {\n  canPay: true,\n  destiny: 0,\n  original: 0\n};\n\nfunction _costFactory(\n  state: IStoreState,\n  costValue: number,\n  discountIdx?: number[]\n): ICost {\n  if (discountIdx) {\n    let remainingCost = costValue;\n    const discounts = discountIdx.map((idx: number) => {\n      const stateDiscount: IDiscount = state.discounts[idx];\n      const effectiveDiscount = Math.min(remainingCost, stateDiscount.value);\n      const newValue = stateDiscount.value - effectiveDiscount;\n      remainingCost -= effectiveDiscount;\n      return { idx, newValue };\n    });\n    return {\n      canPay: state.destiny >= remainingCost,\n      destiny: remainingCost,\n      discounts,\n      original: costValue\n    };\n  } else {\n    return {\n      canPay: state.destiny >= costValue,\n      destiny: costValue,\n      original: costValue\n    };\n  }\n}\n\nexport function applyCost(state: IStoreState, cost: ICost): void {\n  if (!cost.canPay) {\n    throw new Error(\"Unpayable cost\");\n  }\n  state.destiny -= cost.destiny;\n  if (state.destiny < 0) {\n    throw new Error(\"Negative destiny reached\");\n  }\n  updateDiscounts(state, cost);\n}\n\nimport { TSkillName } from \"../data/skills\";\nimport { DISCOUNT_SKILL } from \"../perks/constants/discounts\";\nexport function getCostSkill(state: IStoreState, skillName: TSkillName): ICost {\n  const defaultCost = 2;\n\n  const skillDiscountIdx = getDiscountIndexes(state, (d: IDiscount) => {\n    if (d.type !== DISCOUNT_SKILL) {\n      return false;\n    }\n    if (d.skills.length === 0) {\n      return true;\n    }\n    return -1 !== d.skills.findIndex((s: TSkillName) => s === skillName);\n  });\n  return _costFactory(state, defaultCost, skillDiscountIdx);\n}\n\nexport function getCostSpeciality(state: IStoreState): ICost {\n  const defaultCost = 2;\n  return _costFactory(state, defaultCost, []);\n}\n\nimport { TChiName } from \"../data/chi\";\nimport { DISCOUNT_CHI } from \"../perks/constants/discounts\";\nexport function getCostChi(state: IStoreState, chiName: TChiName): ICost {\n  const chiValue = state.chi[chiName].value;\n  const chiMultiplicator =\n    chiName === \"general\"\n      ? 1\n      : chiName === \"corrupt\" || chiName === \"enlightened\"\n      ? 10\n      : 5;\n  const expectedCost =\n    chiValue < 1 ? chiMultiplicator : chiMultiplicator * chiValue;\n  const defaultCost = Math.max(\n    0,\n    expectedCost - state.chi[chiName].cultivation\n  );\n\n  const chiDiscountIdx = getDiscountIndexes(state, (d: IDiscount) => {\n    if (d.type !== DISCOUNT_CHI) {\n      return false;\n    }\n    if (d.chis.length === 0) {\n      return true;\n    }\n    return -1 !== d.chis.findIndex((s: TChiName) => s === chiName);\n  });\n  return _costFactory(state, defaultCost, chiDiscountIdx);\n}\n\nimport { getLoresheetData } from \"../data/loresheets\";\nimport { DISCOUNT_LORESHEET } from \"../perks/constants/discounts\";\nexport function getCostOpenLoresheet(state: IStoreState, uid: string): ICost {\n  const lsData = getLoresheetData(uid);\n  const defaultCost = lsData.cost;\n\n  const lsDiscountIdx = getDiscountIndexes(state, (d: IDiscount) => {\n    if (d.type !== DISCOUNT_LORESHEET) {\n      return false;\n    }\n    if (d.uids.length === 0) {\n      return true;\n    }\n    return -1 !== d.uids.findIndex((s: string) => s === uid);\n  });\n  return _costFactory(state, defaultCost, lsDiscountIdx);\n}\n\nimport { getLoresheetOptionData } from \"../data/loresheets\";\nimport { DISCOUNT_LORESHEET_OPTION } from \"../perks/constants/discounts\";\n\nfunction _getCostBuyLoresheetOptionOneCost(\n  state: IStoreState,\n  lsUid: string,\n  uid: string,\n  cost: number\n): ICost {\n  const lsDiscountIdx = getDiscountIndexes(state, (d: IDiscount) => {\n    if (d.type !== DISCOUNT_LORESHEET_OPTION) {\n      return false;\n    }\n    if (d.uids.length === 0) {\n      return true;\n    }\n\n    return (\n      -1 !==\n      d.uids.findIndex(\n        opt =>\n          opt.lsUid === lsUid &&\n          -1 !== opt.optUid.findIndex(discountOptUid => uid === discountOptUid)\n      )\n    );\n  });\n  return _costFactory(state, cost, lsDiscountIdx);\n}\n\nexport function getCostBuyLoresheetOption(\n  state: IStoreState,\n  lsUid: string,\n  uid: string\n): ICost[] {\n  const lsData = getLoresheetOptionData(lsUid, uid);\n  const defaultCost = lsData.cost;\n  if (typeof defaultCost === \"number\") {\n    return [_getCostBuyLoresheetOptionOneCost(state, lsUid, uid, defaultCost)];\n  } else {\n    const lenght = defaultCost.max - defaultCost.min + 1;\n    return Array.from(new Array(lenght).keys())\n      .map((v: number) => defaultCost.min + v)\n      .map(cost => _getCostBuyLoresheetOptionOneCost(state, lsUid, uid, cost));\n  }\n}\n\nimport { IDataVirtueType } from \"../data/virtues\";\nimport { DISCOUNT_VIRTUE } from \"../perks/constants/discounts\";\nexport function getCostVirtue(\n  state: IStoreState,\n  name: string,\n  type: IDataVirtueType\n): ICost {\n  const defaultCost = 5;\n  const virtueDiscountIdx = getDiscountIndexes(state, (d: IDiscount) => {\n    if (d.type !== DISCOUNT_VIRTUE) {\n      return false;\n    }\n    if (d.virtues.length === 0) {\n      return true;\n    }\n    return -1 !== d.virtues.findIndex(v => v.name === name && v.type === type);\n  });\n  return _costFactory(state, defaultCost, virtueDiscountIdx);\n}\n\nimport { DISCOUNT_KUNGFU_STYLE } from \"../perks/constants/discounts\";\nexport function getCostKungFuStyle(\n  state: IStoreState,\n  type: KUNGFU_TYPE,\n  uid: string\n): ICost {\n  const defaultCost = 10;\n  const kungfuDiscountIdx = getDiscountIndexes(state, (d: IDiscount) => {\n    if (d.type !== DISCOUNT_KUNGFU_STYLE) {\n      return false;\n    }\n    if (d.kfType !== type) {\n      return false;\n    }\n    if (d.uids.length === 0) {\n      return true;\n    }\n    return -1 !== d.uids.findIndex((s: TSkillName) => s === uid);\n  });\n  return _costFactory(state, defaultCost, kungfuDiscountIdx);\n}\n\nimport { kungfuTechniqueData } from \"../data/kungfu\";\nimport {\n  IDataExternalKungfuTechnique,\n  IDataInternalKungfuTechnique,\n  KUNGFU_EXTERNAL,\n  KUNGFU_TYPE\n} from \"../data/kungfu/types\";\nexport function getCostKungFuTechnique(\n  state: IStoreState,\n  type: KUNGFU_TYPE,\n  styleUid: string,\n  uid: string\n): ICost {\n  /*\n   DISCOUNT !\n  */\n  const kfData = kungfuTechniqueData(type, styleUid, uid);\n  const defaultCost =\n    type === KUNGFU_EXTERNAL\n      ? (kfData as IDataExternalKungfuTechnique).cost\n      : (kfData as IDataInternalKungfuTechnique).level;\n\n  return _costFactory(state, defaultCost);\n}\n","export type TChiName = 'general' | 'wood' | 'fire' | 'earth' | 'water' | 'metal' | 'enlightened' | 'corrupt';\n\nexport const chiNames: TChiName[] =\n[ 'general' , 'wood' , 'fire' , 'earth' , 'water' , 'metal' , 'enlightened' , 'corrupt' ];\n","import { chiNames, TChiName } from \"../data/chi\";\n\nexport type TChiState = {\n  [chi in TChiName]: { value: number; cultivation: number };\n};\n\nexport function createState(): TChiState {\n  const state = {} as TChiState;\n  chiNames.forEach((chi: TChiName) => {\n    state[chi] = { value: 0, cultivation: 0 };\n  });\n  return state;\n}\n\nexport function increase(\n  state: TChiState,\n  name: TChiName,\n  value: number\n): void {\n  state[name].value += value;\n}\n\nexport function increaseCultivation(\n  state: TChiState,\n  name: TChiName,\n  increaseValue: number\n): void {\n  let cultivation = state[name].cultivation + increaseValue;\n  let chiValue = state[name].value;\n\n  const costMultiplier =\n    name === \"enlightened\" || name === \"corrupt\"\n      ? 10\n      : name !== \"general\"\n      ? 5\n      : 1;\n\n  while (cultivation - costMultiplier * Math.max(1, chiValue) >= 0) {\n    cultivation -= costMultiplier * Math.max(1, chiValue);\n    chiValue++;\n  }\n\n  state[name].value = chiValue;\n  state[name].cultivation = cultivation;\n}\n\nexport function canBuyChi(): boolean {\n  return true;\n}\n","import * as bonuses from \"../perks/bonuses\";\n\nexport type TArchetype =\n  | \"warrior\"\n  | \"priest\"\n  | \"courtier\"\n  | \"scholar\"\n  | \"doctor\";\n\nexport interface IDataArchetype {\n  name: string;\n  description: string;\n  key: TArchetype;\n  breath: string;\n  bonuses: bonuses.IBonus[];\n}\n\nexport type IDataArchetypes = IDataArchetype[];\n\n/* tslint:disable:max-line-length */\nexport const archetypes: IDataArchetypes = [\n  {\n    bonuses: [],\n    breath: \"Hardiness\",\n    description:\n      \"Warriors are by far the most common of the five archetypes. Although all people within the martial arts society are good at fighting, it is the warriors who truly embrace it as their way of life. They are the swordsmen and pugilists, constables and assassins, as well as the most iconic heroes and villains.\",\n    key: \"warrior\",\n    name: \"Warrior\"\n  },\n  {\n    bonuses: [],\n    breath: \"WuWei\",\n    description:\n      \"Despite the name, they are not simple religious administrators; they are the Daoists, wise men and women whose approach to fighting starts with Chi cultivation first and foremost. In a world where inner power is of utmost importance, priests are widely respected.\",\n    key: \"priest\",\n    name: \"Priest\"\n  },\n  {\n    bonuses: [],\n    breath: \"Confidence\",\n    description:\n      \"Courtiers wield power not just over themselves but also over others. They are the rulers, merchants, envoys and entertainers that shape society and its people. In a subtle way they are the most powerful of all people; a general may win a war but it’s his king who decides whether there is war at all.\",\n    key: \"courtier\",\n    name: \"Courtier\"\n  },\n  {\n    bonuses: [],\n    breath: \"Learning\",\n    description:\n      \"Scholars are the educated masters, the lore keepers, inventors and advisors. With their knowledge about the workings of the world they perceive events like few others do. Scholars are often found debating how best to rule an empire, hunting for long-lost manuals written in Sanskrit or studying things from exotic foreign lands.\",\n    key: \"scholar\",\n    name: \"Scholar\"\n  },\n  {\n    bonuses: [],\n    breath: \"Medicine\",\n    description:\n      \"Doctors are the least prominent of all five archetypes. Although the medical profession is by no means unheard of, relatively few of them involve themselves in the martial arts realm. Those that do have the potential to become greatly respected allies and feared enemies, literally masters over life and death.\",\n    key: \"doctor\",\n    name: \"Doctor\"\n  }\n];\n\nexport function validateArchetype(archetype: string): void {\n  const foundArchetype = archetypes.find(\n    (dataArchetype: IDataArchetype) => dataArchetype.key === archetype\n  );\n  if (!foundArchetype) {\n    throw new Error('Invalid archetype \"' + archetype + '\"');\n  }\n}\n","export const VIRTUE_CHIVALROUS = 'VIRTUE_CHIVALROUS';\nexport type VIRTUE_CHIVALROUS = typeof VIRTUE_CHIVALROUS;\n\nexport const VIRTUE_SELFISH = 'VIRTUE_SELFISH';\nexport type VIRTUE_SELFISH = typeof VIRTUE_SELFISH;\n\nexport type IDataVirtueType = VIRTUE_SELFISH | VIRTUE_CHIVALROUS;\n\nexport interface IDataVirtue {\n  name: string;\n  type: IDataVirtueType;\n}\n\nexport const virtues: IDataVirtue[] = [\n  {name: 'Honor', type: VIRTUE_CHIVALROUS},\n  {name: 'Benevolence', type: VIRTUE_CHIVALROUS},\n  {name: 'Righteousness', type: VIRTUE_CHIVALROUS},\n  {name: 'Loyalty', type: VIRTUE_CHIVALROUS},\n  {name: 'Force', type: VIRTUE_CHIVALROUS},\n  {name: 'Revenge', type: VIRTUE_SELFISH},\n  {name: 'Individualism', type: VIRTUE_SELFISH},\n  {name: 'Obsession', type: VIRTUE_SELFISH},\n  {name: 'Ruthlessness', type: VIRTUE_SELFISH},\n  {name: 'Ferocity', type: VIRTUE_SELFISH}\n];\n","export type TSkillName =\n  | \"Awareness\"\n  | \"Confidence\"\n  | \"Crafting\"\n  | \"Finesse\"\n  | \"Hardiness\"\n  | \"Inspire\"\n  | \"Learning\"\n  | \"Medicine\"\n  | \"Might\"\n  | \"Perform\"\n  | \"Politics\"\n  | \"Ride\"\n  | \"Stealth\"\n  | \"Survival\"\n  | \"Tactics\"\n  | \"Wu Wei\";\n\nexport type TDataSkills = { [key in TSkillName]: string[] };\n\nexport const skills: TDataSkills = {\n  Awareness: [\"Hear\", \"See\", \"Smell\", \"Taste\", \"Touch\"],\n  Confidence: [\n    \"Appear steadfast\",\n    \"Focus on Breath (for Courtiers)\",\n    \"Recover from the Disorient Marvel\",\n    \"Resist Courtier’s Arts\"\n  ],\n  Crafting: [\n    \"Armor\",\n    \"Buildings\",\n    \"Cloth\",\n    \"Cooking\",\n    \"Gardening\",\n    \"Painting\",\n    \"Tools\",\n    \"Weapons\"\n  ],\n  Finesse: [\n    \"Acrobatics\",\n    \"Cheating\",\n    \"Escaping Bonds\",\n    \"Picking Pockets\",\n    \"Sleight of Hand\"\n  ],\n  Hardiness: [\n    \"Disease\",\n    \"Focusing on Breath (for Warriors)\",\n    \"Poison\",\n    \"Recovering From Injuries\",\n    \"Staying Awake\",\n    \"Enduring Torture\"\n  ],\n  Inspire: [\n    \"Debating\",\n    \"Intimidation\",\n    \"Outright Lies\",\n    \"Public Speeches\",\n    \"Specific Courtier’s Arts techniques\",\n    \"Spinning the Facts\"\n  ],\n  Learning: [\n    \"Calligraphy\",\n    \"Focus on Breath (for Scholars)\",\n    \"History\",\n    \"Math\",\n    \"Other Cultures\",\n    \"Philosophy\",\n    \"Specific Scholar’s Arts Techniques\"\n  ],\n  Medicine: [\n    \"Disease\",\n    \"Focus on Breath (for Doctors)\",\n    \"Injuries\",\n    \"Poison\",\n    \"Pressure Points\",\n    \"Specific Doctor’s Arts Techniques\"\n  ],\n  Might: [\"Breaking\", \"Lifting\", \"Pushing\", \"Throwing\"],\n  Perform: [\n    \"Acting\",\n    \"Ceremonial Performances\",\n    \"Dancing\",\n    \"Poetry\",\n    \"Singing\",\n    \"Music\"\n  ],\n  Politics: [\"Specific region or faction\"],\n  Ride: [\n    \"Caring for Your Horse\",\n    \"Coaxing Your Horse into Dangerous Terrain\",\n    \"Racing\"\n  ],\n  Stealth: [\n    \"Camouflage\",\n    \"Deception\",\n    \"Eavesdropping\",\n    \"In Shadows\",\n    \"Silence\",\n    \"Smuggling\"\n  ],\n  Survival: [\"At Sea\", \"Cities\", \"Deserts\", \"Forests\", \"Mountains\", \"Prisons\"],\n  Tactics: [\n    \"Battlefield Analysis\",\n    \"Disruption\",\n    \"Escorting Caravans\",\n    \"Sieging Fortresses\",\n    \"Specific Warrior’s Arts Techniques\"\n  ],\n  \"Wu Wei\": [\n    \"Focusing on Breath (for Priests)\",\n    \"Resisting Curses\",\n    \"Sensing Chi\",\n    \"Social Perception\",\n    \"Specific Priest’s Arts Techniques\"\n  ]\n};\n","import * as constants from \"../constants/discounts\";\nimport { IDiscountKungfu, IDiscountSkill, IDiscountVirtue } from \"../discounts\";\n\nimport { KUNGFU_TYPE } from \"../../data/kungfu/types\";\nimport { skills, TSkillName } from \"../../data/skills\";\nimport { IDataVirtueType } from \"../../data/virtues\";\n\nexport function discountSkillFactory(\n  value: number,\n  subset?: TSkillName[]\n): IDiscountSkill {\n  if (subset && subset.length > 0) {\n    return { skills: subset, type: constants.DISCOUNT_SKILL, value };\n  } else {\n    return {\n      skills: Object.keys(skills) as TSkillName[],\n      type: constants.DISCOUNT_SKILL,\n      value\n    };\n  }\n}\n\nexport function discountKungfuFactory(\n  value: number,\n  kfType: KUNGFU_TYPE,\n  uids?: string[]\n): IDiscountKungfu {\n  if (uids && uids.length > 0) {\n    return { type: constants.DISCOUNT_KUNGFU_STYLE, kfType, uids, value };\n  } else {\n    return { type: constants.DISCOUNT_KUNGFU_STYLE, kfType, uids: [], value };\n  }\n}\n\nexport function discountVirtueFactory(\n  value: number,\n  virtues: Array<{ name: string; type: IDataVirtueType }>\n): IDiscountVirtue {\n  return { type: constants.DISCOUNT_VIRTUE, virtues, value };\n}\n","/* tslint:disable:max-line-length */\nimport { KUNGFU_EXTERNAL, KUNGFU_INTERNAL } from \"../data/kungfu/types\";\nimport { VIRTUE_CHIVALROUS, VIRTUE_SELFISH } from \"../data/virtues\";\n\nimport { bonusChi, bonusDestiny } from \"../perks/actions/bonuses\";\nimport {\n  discountKungfuFactory,\n  discountSkillFactory,\n  discountVirtueFactory\n} from \"../perks/actions/discounts\";\n\nimport { IBonus } from \"../perks/bonuses\";\nimport { IDiscount } from \"../perks/discounts\";\n\nexport type TRank = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport interface IDataRank {\n  name: string;\n  description: string;\n  value: TRank;\n  perks: Array<IBonus | IDiscount>;\n}\n\nexport interface IDataRanks extends Array<IDataRank> {}\n\nfunction _defaultVirtues() {\n  const virtues: Array<{\n    name: string;\n    type: VIRTUE_SELFISH | VIRTUE_CHIVALROUS;\n  }> = [\n    // TODO : handle virtues more clearly\n    { name: \"Honor\", type: VIRTUE_CHIVALROUS },\n    { name: \"Benevolence\", type: VIRTUE_CHIVALROUS },\n    { name: \"Righteousness\", type: VIRTUE_CHIVALROUS },\n    { name: \"Loyalty\", type: VIRTUE_CHIVALROUS },\n    { name: \"Force\", type: VIRTUE_CHIVALROUS },\n    { name: \"Revenge\", type: VIRTUE_SELFISH },\n    { name: \"Individualism\", type: VIRTUE_SELFISH },\n    { name: \"Obsession\", type: VIRTUE_SELFISH },\n    { name: \"Ruthlessness\", type: VIRTUE_SELFISH },\n    { name: \"Ferocity\", type: VIRTUE_SELFISH }\n  ];\n  return discountVirtueFactory(15 * 5, virtues); // 15 free points\n}\n\nexport const ranks: IDataRanks = [\n  {\n    description:\n      \"River size and Joss limit are 1, no Aura or Chi replenishment, Lake is 5, maximum skill bonus is +5.\",\n    name: \"Unranked\",\n    perks: [\n      bonusDestiny(10),\n      discountSkillFactory(10),\n      bonusChi(8, \"general\"),\n      _defaultVirtues()\n    ],\n    value: 0\n  },\n  {\n    description:\n      \"River size, Joss, Chi replenishment and Chi Aura limit are 1. Lake size is 6. Maximum skill bonus is +5.\",\n    name: \"5th Rank\",\n    perks: [\n      bonusDestiny(15),\n      discountSkillFactory(10),\n      bonusChi(8, \"general\"),\n      _defaultVirtues()\n    ],\n    value: 1\n  },\n  {\n    description:\n      \"River size, Joss, Chi replenishment and Chi Aura limit are 2. Lake size is 7. Maximum skill bonus is +10.\",\n    name: \"4th Rank\",\n    perks: [\n      bonusDestiny(20),\n      discountSkillFactory(20),\n      bonusChi(10, \"general\"),\n      discountKungfuFactory(10, KUNGFU_EXTERNAL),\n      discountKungfuFactory(10, KUNGFU_INTERNAL),\n      _defaultVirtues()\n    ],\n    value: 2\n  },\n  {\n    description:\n      \"River size, Joss, Chi replenishment and Chi Aura limit are 3. Lake size is 8. Maximum skill bonus is +15.\",\n    name: \"3rd Rank\",\n    perks: [\n      bonusDestiny(50),\n      discountSkillFactory(20),\n      bonusChi(10, \"general\"),\n      discountKungfuFactory(10, KUNGFU_EXTERNAL),\n      discountKungfuFactory(10, KUNGFU_INTERNAL),\n      _defaultVirtues()\n    ],\n    value: 3\n  },\n  {\n    description:\n      \"River size, Joss, Chi replenishment and Chi Aura limit are 4. Lake size is 9. Maximum skill bonus is +20.\",\n    name: \"2nd Rank\",\n    perks: [\n      bonusDestiny(100),\n      discountSkillFactory(20),\n      bonusChi(10, \"general\"),\n      discountKungfuFactory(10, KUNGFU_EXTERNAL),\n      discountKungfuFactory(10, KUNGFU_INTERNAL),\n      _defaultVirtues()\n    ],\n    value: 4\n  },\n  {\n    description:\n      \"River size, Joss, Chi replenishment and Chi Aura limit are 5. Lake size is 10. Maximum skill bonus is +25.\",\n    name: \"1st Rank\",\n    perks: [\n      bonusDestiny(150),\n      discountSkillFactory(20),\n      bonusChi(10, \"general\"),\n      _defaultVirtues()\n    ],\n    value: 5\n  }\n];\n\nexport function validateRank(rank: number): void {\n  const foundRank = ranks.find(\n    (dataRank: IDataRank) => (dataRank.value as number) === rank\n  );\n  if (!foundRank) {\n    throw new Error('Invalid rank \"' + rank + '\"');\n  }\n}\n\nexport function getRank(rank: any) {\n  return ranks.find((dataRank: IDataRank) => dataRank.value === rank);\n}\n","import { createAction } from \"typesafe-actions\";\n\nimport * as dataArchetypes from \"../../data/archetypes\";\nimport * as dataRanks from \"../../data/ranks\";\n\nexport const setName = createAction(\n  \"header/SET_NAME\",\n  action => (name: string) => {\n    return action({ name });\n  }\n);\n\nexport const setConcept = createAction(\n  \"header/SET_CONCEPT\",\n  action => (concept: string) => {\n    return action({ concept });\n  }\n);\n\nexport const setArchetype = createAction(\n  \"header/SET_ARCHETYPE\",\n  action => (archetype: dataArchetypes.TArchetype) => {\n    dataArchetypes.validateArchetype(archetype);\n    return action({ archetype });\n  }\n);\n\nexport const setRank = createAction(\n  \"header/SET_RANK\",\n  action => (rank: dataRanks.TRank) => {\n    dataRanks.validateRank(rank);\n    return action({ rank });\n  }\n);\n","import { TChiName } from \"../data/chi\";\nimport { TSkillName } from \"../data/skills\";\nimport * as constants from \"./constants/bonuses\";\n\nexport interface IBonusDestiny {\n  type: constants.BONUS_DESTINY;\n  value: number;\n}\n\nexport interface IBonusEntanglement {\n  type: constants.BONUS_ENTANGLEMENT;\n  value: number;\n}\n\nexport interface IBonusChi {\n  type: constants.BONUS_CHI;\n  chi: TChiName;\n  value: number;\n}\n\nexport interface IBonusCultivation {\n  type: constants.BONUS_CULTIVATION;\n  chi: TChiName;\n  value: number;\n}\n\nexport interface IBonusOneAmongN {\n  type: constants.BONUS_ONE_AMONG_N;\n  bonuses: { [key in string]: IBonus };\n}\n\n// TODO : validity & auto resolution ?\nexport interface IBonusSkillRank {\n  type: constants.BONUS_SKILL_RANK;\n  skill: TSkillName;\n}\n\nexport interface IBonusSpeciality {\n  type: constants.BONUS_SPECIALITY;\n  skill: TSkillName;\n  speciality: string;\n}\n\nexport interface IBonusLoresheet {\n  type: constants.BONUS_LORESHEET;\n  lsUid: string;\n}\n\nexport interface IBonusLoresheetOption {\n  type: constants.BONUS_LORESHEET_OPTION;\n  lsUid: string;\n  uid: string;\n  payload?: string;\n}\n\nexport type IBonus =\n  | IBonusDestiny\n  | IBonusEntanglement\n  | IBonusChi\n  | IBonusCultivation\n  | IBonusOneAmongN\n  | IBonusSkillRank\n  | IBonusSpeciality\n  | IBonusLoresheet\n  | IBonusLoresheetOption;\n\nexport function isBonus(bonus: any): boolean {\n  switch (bonus.type) {\n    case constants.BONUS_DESTINY:\n    case constants.BONUS_ENTANGLEMENT:\n    case constants.BONUS_CHI:\n    case constants.BONUS_CULTIVATION:\n    case constants.BONUS_ONE_AMONG_N:\n    case constants.BONUS_SKILL_RANK:\n    case constants.BONUS_SPECIALITY:\n    case constants.BONUS_LORESHEET:\n    case constants.BONUS_LORESHEET_OPTION:\n      return true;\n    case constants.BONUS_DISCOUNT:\n    default:\n      return false;\n  }\n}\n","import { IStoreState } from \"./type\";\n\nexport function chiAura(state: IStoreState): number {\n  if (state.rank) {\n    return state.rank;\n  }\n  return 0;\n}\n\nexport function chiResplenish(state: IStoreState): number {\n  if (state.rank) {\n    return state.rank;\n  }\n  return 0;\n}\n\nexport function lake(state: IStoreState): number {\n  if (state.rank) {\n    return state.rank + 5;\n  }\n  return 5;\n}\n\nexport function river(state: IStoreState): number {\n  if (state.rank) {\n    return Math.max(1, state.rank);\n  }\n  return 1;\n}\n\nexport function joss(state: IStoreState): number {\n  if (state.rank) {\n    return Math.max(1, state.rank);\n  }\n  return 1;\n}\n\nexport function maxSkillBonus(state: IStoreState): number {\n  if (state.rank) {\n    return Math.max(5, 5 * state.rank);\n  }\n  return 5;\n}\n","import { skills as data, TSkillName } from \"../data/skills\";\nimport { maxSkillBonus } from \"./derived\";\nimport { IStoreState } from \"./type\";\n\ninterface ISkill {\n  name: TSkillName;\n  specialities: string[];\n  value: number;\n}\n\nexport type TSkillsState = ISkill[];\n\nexport function createState(): TSkillsState {\n  return Object.keys(data).map((name: TSkillName) => {\n    return { name, specialities: [], value: 0 };\n  });\n}\n\nexport function increase(\n  state: TSkillsState,\n  skillName: TSkillName,\n  maxSkillValue: number\n): void {\n  const old = _getSkill(state, skillName).value;\n  if (old + 5 > maxSkillValue) {\n    throw new Error(\"Skill \" + skillName + \" overflow\");\n  }\n  _getSkill(state, skillName).value += 5;\n}\n\nexport function isSpecialityPresent(\n  state: TSkillsState,\n  skillName: TSkillName,\n  specialityName: string\n): boolean {\n  const specialityIndex = (state.find(\n    s => s.name === skillName\n  ) as ISkill).specialities.findIndex(\n    (speciality: string) => speciality === specialityName\n  );\n  return specialityIndex !== -1;\n}\n\nexport function addSpeciality(\n  state: TSkillsState,\n  skillName: TSkillName,\n  specialityName: string\n): void {\n  if (isSpecialityPresent(state, skillName, specialityName)) {\n    throw new Error(\n      'Something went wrong, speciality \"' +\n        specialityName +\n        '\" for skill \"' +\n        skillName +\n        '\" already bought'\n    );\n  }\n  _getSkill(state, skillName).specialities.push(specialityName);\n}\n\nexport function canBuySkill(\n  state: IStoreState,\n  skillName: TSkillName\n): boolean {\n  const value = getSkill(state, skillName).value;\n  const max = maxSkillBonus(state);\n  return !(value + 5 > max);\n}\n\nexport function canBuySpeciality(\n  state: IStoreState,\n  skillName: TSkillName,\n  speciality: string\n): boolean {\n  return !isSpecialityPresent(state.skills, skillName, speciality);\n}\n\nfunction _getSkill(state: TSkillsState, skillName: TSkillName) {\n  return state.find(s => s.name === skillName) as ISkill;\n}\n\nexport function getSkill(state: IStoreState, skillName: TSkillName) {\n  return _getSkill(state.skills, skillName);\n}\n","import {\n  getLoresheetOptionData,\n  IDataLoresheetOption,\n  IDataLoresheetOptionPrerequisite,\n  isRepeatable,\n  validateLoresheet,\n  validateLoresheetOption\n} from \"../data/loresheets\";\nimport { IStoreState } from \"./type\";\n\nexport interface ILoresheetOptionState {\n  uid: string;\n  payload: any;\n}\n\nexport interface ILoresheetsState {\n  [lsUid: string]: ILoresheetOptionState[];\n}\n\nexport function createState(): ILoresheetsState {\n  return {};\n}\n\nexport function isLoresheetPresent(\n  state: ILoresheetsState,\n  loresheetUid: string\n): boolean {\n  const loresheetIndex = Object.keys(state).findIndex(\n    stateLoresheetUid => stateLoresheetUid === loresheetUid\n  );\n  return loresheetIndex !== -1;\n}\n\nexport function isLoresheetOptionPresent(\n  state: ILoresheetsState,\n  loresheetUid: string,\n  optionUid: string\n): boolean {\n  if (state[loresheetUid] === undefined) {\n    return false;\n  }\n  const optionIndex = state[loresheetUid].findIndex(\n    option => option.uid === optionUid\n  );\n  return optionIndex !== -1;\n}\n\nexport function canOpenLoresheet(state: IStoreState, uid: string): boolean {\n  return !isLoresheetPresent(state.loresheets, uid);\n}\n\nfunction _or(a: boolean, b: boolean) {\n  return a || b;\n}\nfunction _and(a: boolean, b: boolean) {\n  return a && b;\n}\n\nfunction _prerequisiteToBool(\n  state: ILoresheetsState,\n  lsUid: string,\n  prerequisite: IDataLoresheetOptionPrerequisite\n): boolean {\n  if (typeof prerequisite === \"string\") {\n    return isLoresheetOptionPresent(state, lsUid, prerequisite);\n  } else {\n    return prerequisite.prerequisites\n      .map((optUid: string) => {\n        const here = isLoresheetOptionPresent(state, lsUid, optUid);\n        return here;\n      })\n      .reduce(\n        prerequisite.type === \"OR\" ? _or : _and,\n        prerequisite.type === \"OR\" ? false : true\n      );\n  }\n}\n\nexport function canBuyLoresheetOption(\n  state: ILoresheetsState,\n  lsUid: string,\n  uid: string\n): boolean {\n  if (!isLoresheetPresent(state, lsUid)) {\n    return false;\n  } // Not opened\n  const lsOptData = getLoresheetOptionData(lsUid, uid);\n  const isPresent = isLoresheetOptionPresent(state, lsUid, uid);\n  if (isPresent) {\n    if (!isRepeatable(lsUid)) {\n      return false;\n    } else {\n      return (lsOptData as IDataLoresheetOption).repeatable;\n    }\n  } // Already bought\n  const cb = lsOptData.prerequisites\n    .map(p => _prerequisiteToBool(state, lsUid, p))\n    .reduce(_and, true);\n  return cb;\n}\n\nexport function buyLoresheetOption(\n  state: ILoresheetsState,\n  loresheetUid: string,\n  optionUid: string,\n  payload?: string\n): void {\n  validateLoresheet(loresheetUid);\n  validateLoresheetOption(loresheetUid, optionUid);\n\n  if (!canBuyLoresheetOption(state, loresheetUid, optionUid)) {\n    throw new Error(\n      \"Internal error : impossible to buy loresheet option \" +\n        loresheetUid +\n        \",\" +\n        optionUid\n    );\n  }\n  state[loresheetUid].push({ uid: optionUid, payload });\n}\n\nexport function openLoresheet(\n  state: ILoresheetsState,\n  loresheetUid: string\n): void {\n  validateLoresheet(loresheetUid);\n  state[loresheetUid] = [];\n}\n","import { IStoreState } from \"./type\";\n\nimport { IBonus, isBonus } from \"../perks/bonuses\";\nimport * as constants from \"../perks/constants/bonuses\";\n\nimport * as chi from \"./chi\";\n\nimport { maxSkillBonus } from \"./derived\";\nimport * as skills from \"./skills\";\n\nimport * as loresheets from \"./loresheets\";\n\nexport type TBonusesState = IBonus[];\n\nexport function createState(): TBonusesState {\n  return [];\n}\n\nexport function applyBonuses(draftState: IStoreState, bonuses: IBonus[]): void {\n  bonuses\n    .filter((bonus: IBonus) => isBonus(bonus))\n    .forEach((bonus: IBonus) => {\n      switch (bonus.type) {\n        case constants.BONUS_DESTINY:\n          draftState.destiny += bonus.value;\n          break;\n        case constants.BONUS_ENTANGLEMENT:\n          draftState.entanglement += bonus.value;\n          break;\n        case constants.BONUS_CHI:\n          chi.increase(draftState.chi, bonus.chi, bonus.value);\n          break;\n        case constants.BONUS_CULTIVATION:\n          chi.increaseCultivation(draftState.chi, bonus.chi, bonus.value);\n          break;\n        case constants.BONUS_SKILL_RANK:\n          const max = maxSkillBonus(draftState);\n          // TODO : overflows\n          skills.increase(draftState.skills, bonus.skill, max);\n          break;\n        case constants.BONUS_SPECIALITY:\n          // TODO : already speciality\n          skills.addSpeciality(\n            draftState.skills,\n            bonus.skill,\n            bonus.speciality\n          );\n          break;\n        case constants.BONUS_LORESHEET:\n          loresheets.openLoresheet(draftState.loresheets, bonus.lsUid);\n          break;\n        case constants.BONUS_LORESHEET_OPTION:\n          loresheets.buyLoresheetOption(\n            draftState.loresheets,\n            bonus.lsUid,\n            bonus.uid,\n            bonus.payload\n          );\n          break;\n        default:\n          break;\n      }\n    });\n}\n","import * as data from \"../data/ranks\";\nimport { IStoreState } from \"./type\";\n\n// Sub Reducers\nimport { IBonus, isBonus } from \"../perks/bonuses\";\nimport { IDiscount, isDiscount } from \"../perks/discounts\";\nimport { applyBonuses } from \"./bonuses\";\nimport { pushToDiscounts } from \"./discounts\";\n\nexport function setRank(state: IStoreState, rank: data.TRank): void {\n  const dataRank = data.getRank(rank) as data.IDataRank;\n  state.rank = dataRank.value;\n  applyBonuses(state, dataRank.perks.filter(p => isBonus(p)) as IBonus[]);\n  pushToDiscounts(state, dataRank.perks.filter(p =>\n    isDiscount(p)\n  ) as IDiscount[]);\n}\n","import { createAction } from \"typesafe-actions\";\n\nimport * as dataKungFu from \"../../data/kungfu\";\nimport { KUNGFU_TYPE } from \"../../data/kungfu/types\";\nimport { ICost } from \"../costs\";\n\nexport const openStyle = createAction(\n  \"kungfu/OPEN_STYLE\",\n  action => (uid: string, kungfuType: KUNGFU_TYPE, cost: ICost) => {\n    dataKungFu.validateKungFuType(kungfuType);\n    dataKungFu.validateKungFuStyle(kungfuType, uid);\n    return action({ uid, kungfuType, cost });\n  }\n);\n\nexport const buyTechnique = createAction(\n  \"kungfu/BUY_TECHNIQUE\",\n  action => (\n    styleUid: string,\n    uid: string,\n    kungfuType: KUNGFU_TYPE,\n    cost: ICost\n  ) => {\n    dataKungFu.validateKungFuType(kungfuType);\n    dataKungFu.validateKungFuStyle(kungfuType, styleUid);\n    dataKungFu.validateKungFuTechnique(kungfuType, styleUid, uid);\n    return action({\n      cost,\n      kungfuType,\n      styleUid,\n      uid\n    });\n  }\n);\n\nexport const customStyleName = createAction(\n  \"kungfu/CUSTOM_NAME_FOR_STYLE\",\n  action => (uid: string, kungfuType: KUNGFU_TYPE, name: string) => {\n    dataKungFu.validateKungFuType(kungfuType);\n    dataKungFu.validateKungFuStyle(kungfuType, uid);\n    if (name.length < 1) {\n      throw new Error(\"Invalid new name\");\n    }\n    return action({\n      kungfuType,\n      name,\n      uid\n    });\n  }\n);\n\nexport const customTechniqueName = createAction(\n  \"kungfu/CUSTOM_NAME_FOR_TECHNIQUE\",\n  action => (\n    styleUid: string,\n    uid: string,\n    kungfuType: KUNGFU_TYPE,\n    name: string\n  ) => {\n    dataKungFu.validateKungFuType(kungfuType);\n    dataKungFu.validateKungFuStyle(kungfuType, styleUid);\n    dataKungFu.validateKungFuTechnique(kungfuType, styleUid, uid);\n    if (name.length < 1) {\n      throw new Error(\"Invalid new name\");\n    }\n    return action({\n      kungfuType,\n      name,\n      styleUid,\n      uid\n    });\n  }\n);\n","import {\n  kungfuData,\n  kungfuTechniqueData,\n  validateKungFuStyle,\n  validateKungFuTechnique\n} from \"../data/kungfu\";\nimport {\n  IDataExternalKungfu,\n  IDataExternalKungfuStatistics,\n  IDataInternalKungfu,\n  IDataInternalKungfuTechnique,\n  KUNGFU_EXTERNAL,\n  KUNGFU_INTERNAL,\n  KUNGFU_TYPE\n} from \"../data/kungfu/types\";\nimport * as effects from \"../perks/constants/effects\";\n\nexport interface IKungFuState {\n  KUNGFU_EXTERNAL: { [uid: string]: string[] };\n  KUNGFU_INTERNAL: { [uid: string]: string[] };\n  noRestrictionInternal: string[];\n}\n\nexport function createState(): IKungFuState {\n  return {\n    KUNGFU_EXTERNAL: {},\n    KUNGFU_INTERNAL: {},\n    noRestrictionInternal: []\n  };\n}\n\nexport function openStyle(\n  state: IKungFuState,\n  type: KUNGFU_TYPE,\n  styleUid: string\n): void {\n  validateKungFuStyle(type, styleUid);\n  if (isStylePresent(state, type, styleUid)) {\n    throw new Error(\"Internal error : style already open\");\n  }\n  state[type][styleUid] = [];\n  if (type === KUNGFU_INTERNAL) {\n    const data = kungfuData(KUNGFU_INTERNAL, styleUid) as IDataInternalKungfu;\n    const lvl1s = data.techniques.filter(t => t.level === 1);\n    if (lvl1s.length !== 1) {\n      throw new Error(\n        \"Internal error : internal style malformed, more than 1 lvl 1 techniques for \" +\n          styleUid\n      );\n    }\n    state[type][styleUid].push(lvl1s[0].uid);\n  }\n}\n\nexport function isStylePresent(\n  state: IKungFuState,\n  type: KUNGFU_TYPE,\n  styleUid: string\n): boolean {\n  const styleIndex = Object.keys(state[type]).findIndex(\n    stateKungFuUid => stateKungFuUid === styleUid\n  );\n  return styleIndex !== -1;\n}\n\nexport function addKungFuTechnique(\n  state: IKungFuState,\n  type: KUNGFU_TYPE,\n  styleUid: string,\n  techniqueUid: string\n): void {\n  validateKungFuStyle(type, styleUid);\n  validateKungFuTechnique(type, styleUid, techniqueUid);\n\n  if (!isStylePresent(state, type, styleUid)) {\n    throw new Error(\"Internal error : style not open\");\n  }\n  if (isStyleTechniquePresent(state, type, styleUid, techniqueUid)) {\n    throw new Error(\"Internal error : technique already presents\");\n  }\n\n  state[type][styleUid].push(techniqueUid);\n}\n\nexport function isStyleTechniquePresent(\n  state: IKungFuState,\n  type: KUNGFU_TYPE,\n  styleUid: string,\n  techniqueUid: string\n): boolean {\n  if (!isStylePresent(state, type, styleUid)) {\n    return false;\n  }\n  const optionIndex = state[type][styleUid].findIndex(\n    stateTechniqueUid => stateTechniqueUid === techniqueUid\n  );\n  return optionIndex !== -1;\n}\n\nexport function getExternalKungFuStatistics(\n  state: IKungFuState,\n  styleUid: string\n): IDataExternalKungfuStatistics {\n  const dataStatistics = (kungfuData(\n    KUNGFU_EXTERNAL,\n    styleUid\n  ) as IDataExternalKungfu).statistics;\n\n  if (!isStylePresent(state, KUNGFU_EXTERNAL, styleUid)) {\n    return dataStatistics;\n  }\n\n  const statistics: IDataExternalKungfuStatistics = { ...dataStatistics };\n\n  state[KUNGFU_EXTERNAL][styleUid].forEach(techniqueUid => {\n    const kfTechnique = kungfuTechniqueData(\n      KUNGFU_EXTERNAL,\n      styleUid,\n      techniqueUid\n    );\n    switch (kfTechnique.effect.type) {\n      case effects.EFFECT_COMBAT_STATISTIC:\n        statistics[kfTechnique.effect.statistic] += kfTechnique.effect.increase;\n        break;\n      default:\n        break;\n    }\n  });\n  return statistics;\n}\n\nexport function canOpenKungFu(\n  state: IKungFuState,\n  type: KUNGFU_TYPE,\n  styleUid: string\n): boolean {\n  return !isStylePresent(state, type, styleUid);\n}\n\nfunction _knownInternalKungFuLevel(\n  state: IKungFuState,\n  styleUid: string\n): number[] {\n  return state[KUNGFU_INTERNAL][styleUid]\n    .map(techniqueUid => {\n      const techData = kungfuTechniqueData(\n        KUNGFU_INTERNAL,\n        styleUid,\n        techniqueUid\n      ) as IDataInternalKungfuTechnique;\n      return techData.level;\n    })\n    .sort();\n}\n\nexport function canBuyKungFuTechnique(\n  state: IKungFuState,\n  type: KUNGFU_TYPE,\n  styleUid: string,\n  techniqueUid: string\n): boolean {\n  if (!isStylePresent(state, type, styleUid)) {\n    return false;\n  }\n  if (isStyleTechniquePresent(state, type, styleUid, techniqueUid)) {\n    return false;\n  }\n\n  if (type === KUNGFU_EXTERNAL) {\n    return true;\n  } else {\n    if (state.noRestrictionInternal) {\n      if (\n        -1 !== state.noRestrictionInternal.findIndex(uid => uid === styleUid)\n      ) {\n        return true;\n      }\n    }\n    const levels = _knownInternalKungFuLevel(state, styleUid);\n    const kfTechnique = kungfuTechniqueData(\n      KUNGFU_INTERNAL,\n      styleUid,\n      techniqueUid\n    ) as IDataInternalKungfuTechnique;\n\n    if (levels.length === 0 && kfTechnique.level === 1) {\n      return true;\n    }\n    return Math.max(...levels) === kfTechnique.level - 1;\n  }\n}\n","import { produce } from \"immer\";\nimport { ActionType, getType } from \"typesafe-actions\";\n\nimport * as actions from \"../actions/kungfu\";\nimport { IStoreState } from \"../type\";\n\nimport { applyCost } from \"../costs\";\n\nimport * as dataKungfu from \"../../data/kungfu\";\nimport { addKungFuTechnique, openStyle } from \"../kungfu\";\n\nimport * as chi from \"../chi\";\n\nexport function kungfuReducer(\n  baseState: IStoreState,\n  action: ActionType<typeof actions>\n): IStoreState {\n  switch (action.type) {\n    case getType(actions.openStyle):\n      return produce(baseState, draftState => {\n        applyCost(draftState, action.payload.cost);\n        openStyle(\n          draftState.kungfu,\n          action.payload.kungfuType,\n          action.payload.uid\n        );\n\n        chi.increaseCultivation(\n          draftState.chi,\n          dataKungfu.getKungfuChi(\n            action.payload.kungfuType,\n            action.payload.uid\n          ),\n          action.payload.cost.original\n        );\n      });\n    case getType(actions.buyTechnique):\n      return produce(baseState, draftState => {\n        applyCost(draftState, action.payload.cost);\n        addKungFuTechnique(\n          draftState.kungfu,\n          action.payload.kungfuType,\n          action.payload.styleUid,\n          action.payload.uid\n        );\n\n        chi.increaseCultivation(\n          draftState.chi,\n          dataKungfu.getKungfuChi(\n            action.payload.kungfuType,\n            action.payload.styleUid\n          ),\n\n          action.payload.cost.original\n        );\n      });\n    case getType(actions.customStyleName):\n    case getType(actions.customTechniqueName):\n    default:\n  }\n  return baseState;\n}\n","import { createAction } from \"typesafe-actions\";\n\nimport * as dataLoresheets from \"../../data/loresheets\";\nimport { ICost } from \"../costs\";\n\nexport const open = createAction(\n  \"loresheet/OPEN\",\n  action => (uid: string, cost: ICost) => {\n    dataLoresheets.validateLoresheet(uid);\n    return action({ cost, uid });\n  }\n);\n\nexport const buyOption = createAction(\n  \"loresheet/BUY_OPTION\",\n  action => (lsUid: string, uid: string, cost: ICost, payload?: string) => {\n    dataLoresheets.validateLoresheetOption(lsUid, uid);\n    return action({ cost, lsUid, uid, payload });\n  }\n);\n","import { createAction } from \"typesafe-actions\";\n\nimport { TSkillName } from \"../../data/skills\";\nimport { ICost } from \"../costs\";\n\nexport const skillsBuy = createAction(\n  \"skills/BUY\",\n  action => (name: TSkillName, cost: ICost) => action({ cost, name })\n);\n\nexport const skillSpecialityBuy = createAction(\n  \"skills/BUY_SPECIALITY\",\n  action => (skill: TSkillName, speciality: string, cost: ICost) => {\n    if (speciality.length === 0) {\n      throw new Error(\"Empty speciality\");\n    }\n    return action({ cost, skill, speciality });\n  }\n);\n","import { createAction } from \"typesafe-actions\";\nimport { ICost } from \"../costs\";\n\nexport const increase = createAction(\n  \"virtues/INCREASE\",\n  action => (name: string, value: number, cost: ICost) =>\n    action({ name, value, cost })\n);\n","import { IDataVirtue, IDataVirtueType, virtues } from \"../data/virtues\";\nimport { IStoreState } from \"./type\";\n\nexport interface IVirtueState {\n  name: string;\n  value: number;\n  type: IDataVirtueType;\n}\n\nexport type TVirtuesState = IVirtueState[];\n\nexport function createState(): TVirtuesState {\n  return virtues.map((virtue: IDataVirtue) => {\n    return { name: virtue.name, value: 0, type: virtue.type };\n  });\n}\n\nexport function add(\n  state: TVirtuesState,\n  name: string,\n  type: IDataVirtueType,\n  value: number\n): void {\n  if (isVirtuePresent(state, name)) {\n    throw new Error(\"Internal Error : virtue already present \" + name);\n  }\n  state.push({ name, value, type });\n}\n\nexport function increase(\n  state: TVirtuesState,\n  name: string,\n  value: number\n): void {\n  if (!isVirtuePresent(state, name)) {\n    throw new Error(\"Internal Error : unknwon new virtue \" + name);\n  }\n  state.forEach(virtue => {\n    if (virtue.name === name) {\n      virtue.value += value;\n    }\n  });\n}\n\nexport function isVirtuePresent(state: TVirtuesState, name: string): boolean {\n  return state.findIndex(virtue => name === virtue.name) !== -1;\n}\n\nexport function canBuyVirtue(state: IStoreState, name: string): boolean {\n  const findIndex = state.virtues.findIndex(v => name === v.name);\n  if (findIndex === -1) {\n    return false;\n  }\n  const virtue = state.virtues[findIndex];\n  if (virtue.value + 1 > 5) {\n    return false;\n  } else {\n    return true;\n  }\n}\n","import produce from \"immer\";\nimport { ActionType, getType } from \"typesafe-actions\";\n\nimport * as actions from \"../actions/virtues\";\nimport { IStoreState } from \"../type\";\n\nimport { applyCost } from \"../costs\";\nimport { increase } from \"../virtues\";\n\nexport function virtuesReducer(\n  baseState: IStoreState,\n  action: ActionType<typeof actions>\n): IStoreState {\n  switch (action.type) {\n    case getType(actions.increase):\n      return produce(baseState, state => {\n        applyCost(state, action.payload.cost);\n        increase(state.virtues, action.payload.name, action.payload.value);\n      });\n    default:\n  }\n  return baseState;\n}\n","import { produce } from \"immer\";\nimport { isActionOf } from \"typesafe-actions\";\n\nimport { IAction } from \"../../state/actions/types\";\nimport { IStoreState } from \"../../state/type\";\n\nimport { initialStateFactory } from \"../../state/initial\";\n\n// Sub Reducers\nimport { chiReducer } from \"../../state/reducers/chi\";\nimport { headerReducer } from \"../../state/reducers/header\";\nimport { historyReducer } from \"../../state/reducers/history\";\nimport { kungfuReducer } from \"../../state/reducers/kungfu\";\nimport { loresheetsReducer } from \"../../state/reducers/loresheets\";\nimport { skillsReducer } from \"../../state/reducers/skills\";\nimport { virtuesReducer } from \"../../state/reducers/virtues\";\n\nimport * as chi from \"../actions/chi\";\nimport * as header from \"../actions/header\";\nimport * as history from \"../actions/history\";\nimport * as kungfu from \"../actions/kungfu\";\nimport * as loresheets from \"../actions/loresheets\";\nimport * as skills from \"../actions/skills\";\nimport * as virtues from \"../actions/virtues\";\n\nexport function globalReducer(\n  state: IStoreState | undefined,\n  action: IAction\n): IStoreState {\n  if (!state) {\n    return globalReducer(initialStateFactory(), action);\n  }\n\n  return produce(state, draftState => {\n    if (isActionOf(Object.values(chi), action)) {\n      draftState = chiReducer(state, action);\n    }\n    if (isActionOf(Object.values(header), action)) {\n      draftState = headerReducer(state, action);\n    }\n    if (isActionOf(Object.values(history), action)) {\n      draftState = historyReducer(state, action);\n    }\n    if (isActionOf(Object.values(kungfu), action)) {\n      draftState = kungfuReducer(state, action);\n    }\n    if (isActionOf(Object.values(loresheets), action)) {\n      draftState = loresheetsReducer(state, action);\n    }\n    if (isActionOf(Object.values(skills), action)) {\n      draftState = skillsReducer(state, action);\n    }\n    if (isActionOf(Object.values(virtues), action)) {\n      draftState = virtuesReducer(state, action);\n    }\n    return draftState;\n  });\n}\n","import { produce } from \"immer\";\nimport { ActionType, getType } from \"typesafe-actions\";\n\nimport * as actions from \"../actions/chi\";\nimport { applyCost } from \"../costs\";\nimport { IStoreState } from \"../type\";\n\nimport { increase } from \"../chi\";\n\nexport function chiReducer(\n  baseState: IStoreState,\n  action: ActionType<typeof actions>\n): IStoreState {\n  switch (action.type) {\n    case getType(actions.chiBuy):\n      return produce(baseState, draftState => {\n        applyCost(draftState, action.payload.cost);\n        increase(draftState.chi, action.payload.chi, action.payload.value);\n      });\n    default:\n  }\n  return baseState;\n}\n","import { produce } from \"immer\";\nimport { ActionType, getType } from \"typesafe-actions\";\n\nimport * as actions from \"../actions/header\";\nimport { setRank } from \"../header\";\nimport { IStoreState } from \"../type\";\n\nexport function headerReducer(\n  baseState: IStoreState,\n  action: ActionType<typeof actions>\n): IStoreState {\n  switch (action.type) {\n    case getType(actions.setName):\n      return produce(baseState, draftState => {\n        draftState.name = action.payload.name;\n      });\n    case getType(actions.setConcept):\n      return produce(baseState, draftState => {\n        draftState.concept = action.payload.concept;\n      });\n    case getType(actions.setRank):\n      return produce(baseState, draftState => {\n        setRank(draftState, action.payload.rank);\n      });\n    case getType(actions.setArchetype):\n      return produce(baseState, draftState => {\n        draftState.archetype = action.payload.archetype;\n      });\n    default:\n  }\n  return baseState;\n}\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport { IStoreState } from \"../type\";\n\nimport * as actions from \"../actions/history\";\nimport { replayHistory } from \"../history\";\nimport { emptyStateFactory } from \"../initial\";\n\nexport function historyReducer(\n  state: IStoreState,\n  action: ActionType<typeof actions>\n): IStoreState {\n  switch (action.type) {\n    case getType(actions.resetToInitialState):\n      return emptyStateFactory();\n    case getType(actions.historyDeleteUpTo):\n      if (state.history.length === action.payload.id + 1) {\n        return state;\n      }\n      return replayHistory(\n        emptyStateFactory(),\n        state.history.slice(0, action.payload.id + 1)\n      );\n    default:\n      return state;\n  }\n}\n","import produce from \"immer\";\nimport { ActionType, getType } from \"typesafe-actions\";\n\nimport * as actions from \"../actions/loresheets\";\nimport { IStoreState } from \"../type\";\n\nimport { applyCost } from \"../costs\";\nimport { buyLoresheetOption, openLoresheet } from \"../loresheets\";\n\nexport function loresheetsReducer(\n  baseState: IStoreState,\n  action: ActionType<typeof actions>\n): IStoreState {\n  switch (action.type) {\n    case getType(actions.open):\n      return produce(baseState, draftState => {\n        applyCost(draftState, action.payload.cost);\n        openLoresheet(draftState.loresheets, action.payload.uid);\n      });\n    case getType(actions.buyOption):\n      return produce(baseState, draftState => {\n        applyCost(draftState, action.payload.cost);\n        buyLoresheetOption(\n          draftState.loresheets,\n          action.payload.lsUid,\n          action.payload.uid,\n          action.payload.payload\n        );\n      });\n    default:\n  }\n  return baseState;\n}\n","import produce from \"immer\";\nimport { ActionType, getType } from \"typesafe-actions\";\n\nimport * as actions from \"../actions/skills\";\nimport { maxSkillBonus } from \"../derived\";\n\nimport { applyCost } from \"../costs\";\nimport { addSpeciality, increase } from \"../skills\";\nimport { IStoreState } from \"../type\";\n\nexport function skillsReducer(\n  baseState: IStoreState,\n  action: ActionType<typeof actions>\n): IStoreState {\n  switch (action.type) {\n    case getType(actions.skillsBuy):\n      return produce(baseState, draftState => {\n        const max = maxSkillBonus(baseState);\n        applyCost(draftState, action.payload.cost);\n        increase(draftState.skills, action.payload.name, max);\n      });\n    case getType(actions.skillSpecialityBuy):\n      return produce(baseState, draftState => {\n        applyCost(draftState, action.payload.cost);\n        addSpeciality(\n          draftState.skills,\n          action.payload.skill,\n          action.payload.speciality\n        );\n      });\n    default:\n  }\n  return baseState;\n}\n","import { produce } from \"immer\";\nimport { getType } from \"typesafe-actions\";\n\nimport * as actions from \"./actions/history\";\nimport { IAction } from \"./actions/types\";\nimport { globalReducer } from \"./reducers/global\";\nimport { IStoreState } from \"./type\";\n\nexport type THistoryState = IAction[];\n\nexport function replayHistory(\n  state: IStoreState,\n  toReplay: IAction[]\n): IStoreState {\n  return produce(state, draftState => {\n    for (const action of toReplay) {\n      draftState = globalReducer(draftState, action);\n      if (action.type !== getType(actions.resetToInitialState)) {\n        draftState.history.push(action); // don't push this one, initial state already comes with it\n      }\n    }\n    return draftState;\n  });\n}\n\nexport function createState(): THistoryState {\n  return [actions.resetToInitialState()];\n}\n","import { IStoreState } from \"./type\";\n\nimport { IAutomaticCondition, isAutomaticCondition } from \"../perks/automatics\";\nimport * as constants from \"../perks/constants/automatics\";\n\nimport * as dataLoresheet from \"../data/loresheets\";\n\nimport { getSkill } from \"../state/skills\";\n\nexport type TAutomaticsState = IAutomaticCondition[];\n\nexport function createState(): TAutomaticsState {\n  return getAutomatics();\n}\n\nexport function isAutomaticConditionChanged(\n  oldState: IStoreState,\n  newState: IStoreState\n) {\n  if (oldState.archetype !== newState.archetype) {\n    return true;\n  }\n  if (oldState.skills !== newState.skills) {\n    return true;\n  }\n  return false;\n}\n\nexport function getAutomatics(): IAutomaticCondition[] {\n  const retval: IAutomaticCondition[] = [];\n\n  {\n    const data = dataLoresheet\n      .getLoresheets(ls => ls.perks !== undefined)\n      .map(ls => (!ls.perks ? [] : ls.perks))\n      .filter(p => isAutomaticCondition(p))\n      .reduce(\n        (acc: IAutomaticCondition[], val: IAutomaticCondition[]) =>\n          acc.concat(val),\n        []\n      ) as IAutomaticCondition[];\n\n    retval.push(...data);\n  }\n\n  return retval;\n}\n\nexport function isApplicable(\n  state: IStoreState,\n  auto: IAutomaticCondition\n): boolean {\n  switch (auto.type) {\n    case constants.AUTO_CONDITION_ARCHETYPE:\n      return auto.archetype === state.archetype;\n    case constants.AUTO_CONDITION_SKILL:\n      return auto.value >= getSkill(state, auto.skill).value;\n  }\n  return false;\n}\n","import { TSkillName } from \"../data/skills\";\nimport { IBonus } from \"../perks/bonuses\";\nimport { IDiscount } from \"../perks/discounts\";\nimport * as constants from \"./constants/automatics\";\n\nexport type autoPerks = IBonus | IDiscount;\nexport interface IAutomaticArchetypeCondition {\n  type: constants.AUTO_CONDITION_ARCHETYPE;\n  archetype: string;\n  perks: autoPerks[];\n}\n\nexport interface IAutomaticSkillCondition {\n  type: constants.AUTO_CONDITION_SKILL;\n  skill: TSkillName;\n  value: number;\n  perks: autoPerks[];\n}\n\nexport type IAutomaticCondition =\n  | IAutomaticArchetypeCondition\n  | IAutomaticSkillCondition;\n\nexport function isAutomaticCondition(perk: any): boolean {\n  if (perk && \"type\" in perk) {\n    switch (perk.type) {\n      case constants.AUTO_CONDITION_SKILL:\n      case constants.AUTO_CONDITION_ARCHETYPE:\n        return true;\n    }\n  }\n  return false;\n}\n","/* eslint-disable import/first */\nimport { IStoreState } from \"./type\";\n\nimport { createState as createHistoryState } from \"./history\";\n\nimport { createState as createAutomaticsState } from \"./automatics\";\nimport { createState as createChiState } from \"./chi\";\nimport { createState as createDiscountsState } from \"./discounts\";\nimport { createState as createaKungFuState } from \"./kungfu\";\nimport { createState as createLoresheetsState } from \"./loresheets\";\nimport { createState as createSkillsState } from \"./skills\";\nimport { createState as createVirtuesState } from \"./virtues\";\n\nexport function emptyStateFactory(): IStoreState {\n  return {\n    archetype: undefined,\n    concept: undefined,\n    name: undefined,\n    rank: undefined,\n\n    destiny: 0,\n    entanglement: 0,\n\n    history: createHistoryState(),\n\n    chi: createChiState(),\n    kungfu: createaKungFuState(),\n    loresheets: createLoresheetsState(),\n    skills: createSkillsState(),\n    virtues: createVirtuesState(),\n\n    automatics: createAutomaticsState(),\n    discounts: createDiscountsState()\n  };\n}\n\nimport { setArchetype, setRank } from \"./actions/header\";\nimport { skillSpecialityBuy } from \"./actions/skills\";\nimport { zeroCost } from \"./costs\";\nimport { replayHistory } from \"./history\";\n\nexport function testingStateFactory(): IStoreState {\n  const initial = emptyStateFactory();\n  const actions = [\n    setRank(2),\n    setArchetype(\"warrior\"),\n    skillSpecialityBuy(\"Awareness\", \"Hear\", zeroCost),\n    skillSpecialityBuy(\"Awareness\", \"Sight\", zeroCost)\n  ];\n  return replayHistory(initial, actions);\n}\n\nexport function initialStateFactory(): IStoreState {\n  return emptyStateFactory();\n}\n","import { Dispatch, Store } from \"redux\";\n\nimport { IAction } from \"../actions/types\";\nimport { IStoreState } from \"../type\";\n\nimport { IBonus, isBonus } from \"../../perks/bonuses\";\nimport { IDiscount, isDiscount } from \"../../perks/discounts\";\n\nimport { isApplicable } from \"../automatics\";\nimport { applyBonuses } from \"../bonuses\";\n\nexport const middleware = (store: Store<IStoreState>) => (\n  next: Dispatch<IAction>\n) => (action: IAction) => {\n  const result = next(action);\n  const newState = store.getState();\n  const applied = newState.automatics\n    .map((auto, index) => {\n      if (isApplicable(newState, auto)) {\n        applyBonuses(newState, auto.perks.filter(isBonus) as IBonus[]);\n        newState.discounts.push(\n          ...(auto.perks.filter(isDiscount) as IDiscount[])\n        );\n        return index;\n      }\n      return -1;\n    })\n    .filter(idx => idx >= 0);\n  applied.sort((a, b) => (a < b ? a : b)); // reverse order !\n  applied.forEach(idx => {\n    newState.automatics.splice(idx, 1);\n  });\n\n  return result;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* tslint:disable:no-console */\n/* tslint:disable:interface-name */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport Icon from \"react-fa\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./header.css\";\n\nclass AppHeader extends React.PureComponent<{}, { isOpen: boolean }> {\n  constructor(props: any) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  public toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  public render() {\n    return (\n      <nav className=\"navbar\">\n        <ul className=\"left\">\n          <Link to=\"/\">\n            <li>\n              <h1>LotWCS</h1>\n            </li>\n          </Link>\n          <Link to=\"/skills\">\n            <li>Skills</li>\n          </Link>\n          <Link to=\"/chi\">\n            <li>Chi</li>\n          </Link>\n          <Link to=\"/virtues\">\n            <li>Virtues</li>\n          </Link>\n          <Link to=\"/equipment\">\n            <li>Equipment</li>\n          </Link>\n          <Link to=\"/conditions\">\n            <li>Conditions</li>\n          </Link>\n          <Link to=\"/kungfu\">\n            <li>{\"Kung\\u00A0Fu\"}</li>\n          </Link>\n          <Link to=\"/loresheets\">\n            <li>Loresheets</li>\n          </Link>\n          <Link to=\"/secretarts\">\n            <li>Secret Arts</li>\n          </Link>\n          <Link to=\"/history\">\n            <li>History</li>\n          </Link>\n        </ul>\n        <ul className=\"right\">\n          <Link to=\"/print\">\n            <li>Full sheet</li>\n          </Link>\n          <Link to=\"/config\">\n            <li>\n              <Icon name=\"cog\" />\n            </li>\n          </Link>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default AppHeader;\n","import * as React from \"react\";\n\nimport \"./intro.css\";\n\nclass AppIntro extends React.PureComponent<{}, {}> {\n  public render() {\n    return <section className=\"app-intro\">{this.props.children}</section>;\n  }\n}\n\nexport default AppIntro;\n","import * as React from \"react\";\n\nimport \"./page.css\";\n\nclass AppPage extends React.PureComponent<{}, {}> {\n  public render() {\n    return <section className=\"app-page\">{this.props.children}</section>;\n  }\n}\n\nexport default AppPage;\n","import * as React from \"react\";\n\nexport interface IFieldHeader {\n  label: string | JSX.Element;\n}\n\nconst style: React.CSSProperties = {\n  display: \"block\",\n  textAlign: \"center\"\n};\n\nclass FieldHeader extends React.PureComponent<IFieldHeader, {}> {\n  public render(): JSX.Element {\n    return (\n      <h4 style={style}>\n        <span className=\"align-text-middle\">{this.props.label}</span>\n      </h4>\n    );\n  }\n}\n\nexport default FieldHeader;\n","import * as React from \"react\";\nimport Icon from \"react-fa\";\n\nimport FieldHeader from \"./FieldHeader\";\n\nexport interface IDDLItem {\n  key: string;\n  label: string;\n}\n\nexport interface IDDLTextProps {\n  header: string;\n  default?: string;\n  locked?: boolean;\n  values: IDDLItem[];\n  onSubmit: (v: string) => void;\n}\n\ninterface IDDLTextState {\n  value: string;\n  edit: boolean;\n  dropdownOpen: boolean;\n}\n\nexport interface IDDLTextEvent {\n  target: { value: string };\n}\n\nclass DDLText extends React.PureComponent<IDDLTextProps, IDDLTextState> {\n  protected static getDerivedStateFromProps(\n    props: IDDLTextProps,\n    state: IDDLTextState\n  ): IDDLTextState {\n    if (!state.edit) {\n      state.value = props.default ? props.default : \"\";\n    }\n    return state;\n  }\n\n  constructor(props: IDDLTextProps) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: false,\n      edit: false,\n      value: this.props.default ? this.props.default : \"\"\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.endEdit = this.endEdit.bind(this);\n    this.toggleDDL = this.toggleDDL.bind(this);\n    this.select = this.select.bind(this);\n    this.getLabelForSelectedKey = this.getLabelForSelectedKey.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n    this.renderDropdownList = this.renderDropdownList.bind(this);\n    this.renderDropdownItems = this.renderDropdownItems.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n  }\n\n  public render(): JSX.Element {\n    return this.state.edit ? this.renderDropdownList() : this.renderValue();\n  }\n\n  private startEdit() {\n    if (this.props.locked ? false : true) {\n      this.setState({ edit: true, dropdownOpen: false });\n    }\n  }\n\n  private endEdit() {\n    this.setState({ edit: false, dropdownOpen: false });\n    const labelForSelectedKey = this.getLabelForSelectedKey();\n    if (\n      this.state.value !== this.props.default &&\n      labelForSelectedKey.length > 0\n    ) {\n      this.props.onSubmit(this.state.value);\n    }\n  }\n\n  private toggleDDL() {\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });\n  }\n\n  private select(key: string) {\n    this.setState({ value: key });\n  }\n\n  private getLabelForSelectedKey(): string {\n    return this.props.values\n      .map(\n        ({ key, label }: IDDLItem) => (key === this.state.value ? label : \"\")\n      )\n      .filter((e: string) => e !== \"\")\n      .join(\", \");\n  }\n\n  private renderHeader(): JSX.Element {\n    return <FieldHeader label={this.props.header} />;\n  }\n\n  private renderButton(labelForSelectedKey: string): JSX.Element {\n    const btnOk = (\n      <button onClick={this.endEdit} color=\"success\">\n        <Icon name=\"check\" />\n      </button>\n    );\n    const btnKo = (\n      <button onClick={this.endEdit} color=\"danger\">\n        <Icon name=\"times\" />\n      </button>\n    );\n    return labelForSelectedKey.length > 0 ? btnOk : btnKo;\n  }\n\n  private renderDropdownItems(): JSX.Element[] {\n    return this.props.values.map(({ key, label }: IDDLItem) => {\n      const selectMe = () => this.select(key);\n      return (\n        <div key={key} onClick={selectMe}>\n          {label}\n        </div>\n      );\n    });\n  }\n\n  private renderDropdownList(): JSX.Element {\n    const labelForSelectedKey = this.getLabelForSelectedKey();\n    return (\n      <div>\n        <div>{this.renderHeader()}</div>\n        <div>\n          <div>\n            <div>\n              {labelForSelectedKey.length > 0\n                ? labelForSelectedKey\n                : \"Choose a \" + this.props.header}\n            </div>\n            <div>{this.renderDropdownItems()}</div>\n          </div>\n          {this.renderButton(labelForSelectedKey)}\n        </div>\n      </div>\n    );\n  }\n\n  private renderValue(): JSX.Element {\n    const labelForSelectedKey = this.getLabelForSelectedKey();\n    return (\n      <div onClick={this.startEdit} role=\"button\">\n        <div>{this.renderHeader()}</div>\n        <div>\n          {labelForSelectedKey.length > 0\n            ? labelForSelectedKey\n            : this.state.value}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DDLText;\n","import * as React from \"react\";\n\nimport DDLText from \"../../components/DDLText\";\nimport { archetypes, IDataArchetype } from \"../../data/archetypes\";\n\nexport interface IArchetypeProps {\n  value: string | undefined;\n  onChange: (s: string) => void;\n  locked: boolean;\n}\n\nclass Archetype extends React.PureComponent<IArchetypeProps, {}> {\n  public render() {\n    return (\n      <DDLText\n        header=\"Character Archetype\"\n        default={this.props.value}\n        values={archetypes\n          .sort((a: IDataArchetype, b: IDataArchetype) => {\n            if (a.name < b.name) {\n              return -1;\n            }\n            if (a.name > b.name) {\n              return 1;\n            }\n            return 0;\n          })\n          .map((a: IDataArchetype) => ({\n            key: a.key,\n            label: a.name\n          }))}\n        onSubmit={this.props.onChange}\n        locked={this.props.locked}\n      />\n    );\n  }\n}\n\nexport default Archetype;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/header\";\nimport { IStoreState } from \"../../state/type\";\n\nimport { TArchetype } from \"../../data/archetypes\";\n\nimport Archetype, {\n  IArchetypeProps\n} from \"../../components/Character/Archetype\";\n\ninterface IMapStateToProps {\n  locked: boolean;\n  value: string;\n}\n\ninterface IMapDispatchToProps {\n  onChange: (s: TArchetype) => void;\n}\n\nfunction mapStateToProps(state: IStoreState): IMapStateToProps {\n  return {\n    locked: state.archetype !== undefined,\n    value: state.archetype !== undefined ? state.archetype : \"\"\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>\n): IMapDispatchToProps {\n  return {\n    onChange: (s: TArchetype) => dispatch(actions.setArchetype(s))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IArchetypeProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Archetype);\n","import * as React from \"react\";\nimport Icon from \"react-fa\";\nimport { Button, Input, InputGroup, InputGroupAddon } from \"reactstrap\";\n\nexport interface IEditTextProps {\n  header: string;\n  default?: string;\n  locked?: boolean;\n  validate: (v: string) => boolean;\n  onSubmit: (v: string) => void;\n}\n\ninterface IEditTextState {\n  value: string;\n  edit: boolean;\n}\n\nexport interface IEditTextEvent {\n  target: { value: string };\n}\n\nclass EditText extends React.PureComponent<IEditTextProps, IEditTextState> {\n  constructor(props: IEditTextProps) {\n    super(props);\n\n    this.state = {\n      edit: false,\n      value: this.props.default ? this.props.default : \"\"\n    };\n\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n    this.endEdit = this.endEdit.bind(this);\n    this.textChange = this.textChange.bind(this);\n    this.renderEdit = this.renderEdit.bind(this);\n    this.renderNoEdit = this.renderNoEdit.bind(this);\n  }\n\n  public render(): JSX.Element {\n    return this.state.edit ? this.renderEdit() : this.renderNoEdit();\n  }\n\n  public componentWillReceiveProps(nextProps: IEditTextProps) {\n    this.setState({\n      value: nextProps.default ? nextProps.default : \"\"\n    });\n  }\n\n  private startEdit() {\n    if (this.props.locked ? false : true) {\n      this.setState({ edit: true });\n    }\n  }\n\n  private endEdit() {\n    this.setState({\n      edit: false,\n      value: this.state.value.trim()\n    });\n    if (this.props.validate(this.state.value)) {\n      if (this.state.value !== this.props.default) {\n        this.props.onSubmit(this.state.value);\n      }\n    }\n  }\n\n  private textChange(e: IEditTextEvent) {\n    this.setState({ value: e.target.value });\n  }\n\n  private renderButton(isValueValid: boolean): JSX.Element {\n    const btnOk = (\n      <Button onClick={this.endEdit} color=\"success\">\n        <Icon name=\"check\" />\n      </Button>\n    );\n    const btnKo = (\n      <Button onClick={this.endEdit} color=\"danger\">\n        <Icon name=\"times\" />\n      </Button>\n    );\n    return isValueValid ? btnOk : btnKo;\n  }\n\n  private renderNoEdit(): JSX.Element {\n    return (\n      <div onClick={this.startEdit} role=\"button\">\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            {this.props.header}\n          </InputGroupAddon>\n          <div className=\"form-control\">{this.state.value}</div>\n        </InputGroup>\n      </div>\n    );\n  }\n\n  private renderEdit(): JSX.Element {\n    const isValueValid = this.props.validate(this.state.value);\n    return (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            {this.props.header}\n          </InputGroupAddon>\n          <Input\n            onChange={this.textChange}\n            value={this.state.value}\n            placeholder={this.state.value}\n            valid={isValueValid}\n          />\n          <InputGroupAddon addonType=\"append\">\n            {this.renderButton(isValueValid)}\n          </InputGroupAddon>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n\nexport default EditText;\n","import * as React from \"react\";\n\nimport EditText from \"../../components/EditText\";\n\nexport interface IConceptProps {\n  value: string | undefined;\n  onChange: (s: string) => void;\n}\n\nclass Concept extends React.PureComponent<IConceptProps, {}> {\n  public render() {\n    return (\n      <EditText\n        header=\"Character Concept\"\n        default={this.props.value}\n        validate={this.isStringNotNull}\n        onSubmit={this.props.onChange}\n      />\n    );\n  }\n\n  private isStringNotNull(s: string): boolean {\n    return s.trim().length > 0;\n  }\n}\n\nexport default Concept;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/header\";\nimport { IStoreState } from \"../../state/type\";\n\nimport Concept, { IConceptProps } from \"../../components/Character/Concept\";\n\ninterface IMapStateToProps {\n  value: string;\n}\n\ninterface IMapDispatchToProps {\n  onChange: (s: string) => void;\n}\n\nfunction mapStateToProps(state: IStoreState): IMapStateToProps {\n  return {\n    value: state.concept !== undefined ? state.concept : \"\"\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>\n): IMapDispatchToProps {\n  return {\n    onChange: (s: string) => dispatch(actions.setConcept(s))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IConceptProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Concept);\n","import * as React from \"react\";\nimport { InputGroup, InputGroupAddon } from \"reactstrap\";\n\nexport interface IStaticTextProps {\n  header: string;\n  value: string;\n}\n\nclass StaticText extends React.PureComponent<IStaticTextProps, {}> {\n  public render = (): JSX.Element => {\n    return (\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          {this.props.header}\n        </InputGroupAddon>\n        <div className=\"form-control\">{this.props.value}</div>\n      </InputGroup>\n    );\n  };\n}\n\nexport default StaticText;\n","import * as React from \"react\";\n\nimport StaticText from \"../../components/StaticText\";\n\nexport interface IDestinyProps {\n  value: number;\n}\n\nclass Destiny extends React.PureComponent<IDestinyProps, {}> {\n  public render() {\n    return <StaticText header=\"Destiny\" value={this.props.value.toString()} />;\n  }\n}\n\nexport default Destiny;\n","import { connect } from \"react-redux\";\n\nimport { IStoreState } from \"../../state/type\";\n\nimport Destiny, { IDestinyProps } from \"../../components/Character/Destiny\";\n\nfunction mapStateToProps(state: IStoreState): IDestinyProps {\n  return {\n    value: state.destiny\n  };\n}\n\nexport default connect(mapStateToProps)(Destiny);\n","import * as React from \"react\";\n\nimport StaticText from \"../../components/StaticText\";\n\nexport interface IEntanglementProps {\n  value: number;\n}\n\nclass Entanglement extends React.PureComponent<IEntanglementProps, {}> {\n  public render() {\n    return (\n      <StaticText header=\"Entanglement\" value={this.props.value.toString()} />\n    );\n  }\n}\n\nexport default Entanglement;\n","import { connect } from \"react-redux\";\n\nimport { IStoreState } from \"../../state/type\";\n\nimport Entanglement, {\n  IEntanglementProps\n} from \"../../components/Character/Entanglement\";\n\nfunction mapStateToProps(state: IStoreState): IEntanglementProps {\n  return {\n    value: state.entanglement\n  };\n}\n\nexport default connect(mapStateToProps)(Entanglement);\n","import * as React from \"react\";\n\nimport EditText from \"../../components/EditText\";\n\nexport interface INameProps {\n  value: string | undefined;\n  onChange: (s: string) => void;\n}\n\nclass Name extends React.PureComponent<INameProps, {}> {\n  public render() {\n    return (\n      <EditText\n        header=\"Character Name\"\n        default={this.props.value}\n        validate={this.isStringNotNull}\n        onSubmit={this.props.onChange}\n      />\n    );\n  }\n\n  private isStringNotNull(s: string): boolean {\n    return s.trim().length > 0;\n  }\n}\n\nexport default Name;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/header\";\nimport { IStoreState } from \"../../state/type\";\n\nimport Name, { INameProps } from \"../../components/Character/Name\";\n\ninterface IMapStateToProps {\n  value: string;\n}\n\ninterface IMapDispatchToProps {\n  onChange: (s: string) => void;\n}\n\nfunction mapStateToProps(state: IStoreState): IMapStateToProps {\n  return {\n    value: state.name !== undefined ? state.name : \"\"\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>\n): IMapDispatchToProps {\n  return {\n    onChange: (s: string) => dispatch(actions.setName(s))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): INameProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Name);\n","import * as React from \"react\";\n\nimport DDLText from \"../../components/DDLText\";\nimport * as ranks from \"../../data/ranks\";\n\nexport interface IRankProps {\n  rank: ranks.TRank | undefined;\n  onChange: (s: string) => void;\n  locked: boolean;\n}\n\nclass Rank extends React.PureComponent<IRankProps, {}> {\n  public render() {\n    const dataRank = ranks.getRank(this.props.rank);\n    return (\n      <DDLText\n        header=\"Character Rank\"\n        default={dataRank ? (dataRank.name as string) : \"\"}\n        values={ranks.ranks.map(rank => ({\n          key: rank.value.toString(),\n          label: rank.name\n        }))}\n        onSubmit={this.props.onChange}\n        locked={this.props.locked}\n      />\n    );\n  }\n}\n\nexport default Rank;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/header\";\nimport { IStoreState } from \"../../state/type\";\n\nimport { TRank } from \"../../data/ranks\";\n\nimport Rank, { IRankProps } from \"../../components/Character/Rank\";\n\ninterface IMapStateToProps {\n  rank: TRank | undefined;\n  locked: boolean;\n}\n\ninterface IMapDispatchToProps {\n  onChange: (s: string) => void;\n}\n\nfunction mapStateToProps(state: IStoreState): IMapStateToProps {\n  return {\n    locked: state.archetype !== undefined,\n    rank: state.rank\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>\n): IMapDispatchToProps {\n  return {\n    onChange: (s: string) => dispatch(actions.setRank(Number(s) as TRank))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IRankProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Rank);\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\n\nimport Archetype from \"../containers/Character/Archetype\";\nimport Concept from \"../containers/Character/Concept\";\nimport Destiny from \"../containers/Character/Destiny\";\nimport Entanglement from \"../containers/Character/Entanglement\";\nimport Name from \"../containers/Character/Name\";\nimport Rank from \"../containers/Character/Rank\";\n\nclass Homepage extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <Name />\n          <Concept />\n          <Archetype />\n          <Rank />\n          <Destiny />\n          <Entanglement />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n","import * as React from \"react\";\nimport Icon from \"react-fa\";\nimport { Button, InputGroup, InputGroupAddon } from \"reactstrap\";\n\nimport FieldHeader from \"./FieldHeader\";\n\nexport interface IEditNumericProps {\n  name: string | JSX.Element;\n  value: number;\n  canBuy: boolean;\n  onBuy: () => void;\n}\n\ninterface IEditNumericState {\n  edit: boolean;\n}\n\nclass EditNumeric extends React.PureComponent<\n  IEditNumericProps,\n  IEditNumericState\n> {\n  constructor(props: IEditNumericProps) {\n    super(props);\n\n    this.state = {\n      edit: false\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.endEdit = this.endEdit.bind(this);\n    this.doBuy = this.doBuy.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  public render() {\n    if (!this.state.edit) {\n      return (\n        <InputGroup onClick={this.startEdit} role=\"button\">\n          <InputGroupAddon addonType=\"prepend\">\n            {this.props.name}\n          </InputGroupAddon>\n          <div className=\"form-control\">{this.props.value}</div>\n        </InputGroup>\n      );\n    } else {\n      return (\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            {this.props.name}\n          </InputGroupAddon>\n          <div className=\"form-control\">{this.props.value}</div>\n          <InputGroupAddon addonType=\"append\">\n            {this.props.canBuy ? this.renderButton(\"plus\", this.doBuy) : null}\n            {this.renderButton(\"times\", this.endEdit)}\n          </InputGroupAddon>\n        </InputGroup>\n      );\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.state.edit && !this.props.canBuy) {\n      this.endEdit();\n    }\n  }\n\n  private startEdit() {\n    if (this.props.canBuy) {\n      this.setState({ edit: true });\n    }\n  }\n\n  private endEdit() {\n    this.setState({\n      edit: false\n    });\n  }\n\n  private doBuy() {\n    this.props.onBuy();\n  }\n\n  private renderHeader(): JSX.Element {\n    return <FieldHeader label={this.props.name} />;\n  }\n\n  private renderButton(icon: string, f: () => void) {\n    return (\n      <Button onClick={f}>\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n}\n\nexport default EditNumeric;\n","import * as React from \"react\";\n\nimport { ICost } from \"../../state/costs\";\n\nimport { TSkillName } from \"../../data/skills\";\n\nimport EditNumeric from \"../../components/EditNumeric\";\n\nexport interface ISkillProps {\n  name: TSkillName;\n  value: number;\n  cost: ICost;\n  canBuy: boolean;\n  onBuy: (cost: ICost) => void;\n}\n\nclass Skill extends React.PureComponent<ISkillProps, {}> {\n  constructor(props: ISkillProps) {\n    super(props);\n    this.onBuy = this.onBuy.bind(this);\n  }\n  public render() {\n    return (\n      <EditNumeric\n        name={this.props.name}\n        value={this.props.value}\n        canBuy={this.props.canBuy && this.props.cost.canPay}\n        onBuy={this.onBuy}\n      />\n    );\n  }\n\n  private onBuy(): void {\n    this.props.onBuy(this.props.cost);\n  }\n}\n\nexport default Skill;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/skills\";\nimport { getCostSkill, ICost } from \"../../state/costs\";\nimport { canBuySkill, getSkill } from \"../../state/skills\";\nimport { IStoreState } from \"../../state/type\";\n\nimport { TSkillName } from \"../../data/skills\";\n\nimport Skill, { ISkillProps } from \"../../components/Character/Skill\";\n\ninterface IMapStateToProps {\n  canBuy: boolean;\n  cost: ICost;\n  name: TSkillName;\n  value: number;\n}\n\ninterface IProps {\n  name: TSkillName;\n}\n\ninterface IMapDispatchToProps {\n  onBuy: (cost: ICost) => void;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  return {\n    canBuy: canBuySkill(state, props.name),\n    cost: getCostSkill(state, props.name),\n    name: props.name,\n    value: getSkill(state, props.name).value\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onBuy: (cost: ICost) => {\n      dispatch(actions.skillsBuy(props.name, cost));\n    }\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): ISkillProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Skill);\n","import * as React from \"react\";\n\nimport \"./TokenInput.css\";\n\ninterface ITokenInputProps {\n  allowNew?: boolean;\n  idKey?: string;\n  labelKey?: string;\n  onAdd: (id: string) => void;\n  options: any[];\n  tokens?: string[];\n}\n\ninterface ITokenInputState {\n  input: string;\n  focused: boolean;\n}\n\nclass TokenInput extends React.PureComponent<\n  ITokenInputProps,\n  ITokenInputState\n> {\n  public static defaultProps = {\n    idKey: \"id\",\n    labelKey: \"name\"\n  };\n\n  private idKey: string;\n  private labelKey: string;\n\n  constructor(props: ITokenInputProps) {\n    super(props);\n\n    this.labelKey = this.props.labelKey\n      ? this.props.labelKey\n      : TokenInput.defaultProps.labelKey;\n\n    this.idKey = this.props.idKey\n      ? this.props.idKey\n      : TokenInput.defaultProps.idKey;\n\n    this.state = {\n      focused: false,\n      input: \"\"\n    };\n\n    this.inputChange = this.inputChange.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  public render() {\n    return (\n      <div className=\"form-control\">\n        <div className=\"TokenInput\">\n          <div className=\"TokenInput-token-list\">{this.renderTokens()}</div>\n          <div className=\"TokenInput-dropdown\">\n            <input\n              className=\"TokenInput-input\"\n              onBlur={this.onBlur}\n              onChange={this.inputChange}\n              onFocus={this.onFocus}\n              value={this.state.input}\n            />\n            <div className=\"TokenInput-dropdown-content\">\n              {this.renderSuggestion()}\n              {this.renderAddNew()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderTokens(): JSX.Element[] {\n    return (this.props.tokens as string[]).map(t => (\n      <span key={t} className=\"TokenInput-token\">\n        {t}\n      </span>\n    ));\n  }\n\n  private renderSuggestion() {\n    return this.matchOptionsWithInput(false)\n      .filter((option: any) => option[this.labelKey].length > 0)\n      .filter(option => {\n        const label = option[this.labelKey];\n        const id = option[this.idKey];\n\n        if (!label || !id) {\n          return false;\n        }\n        return true;\n      })\n      .map((option: any) => {\n        const label = option[this.labelKey];\n        const id = option[this.idKey];\n        const onClick = () => {\n          this.props.onAdd(id);\n          this.resetState();\n        };\n        return (\n          <span key={id} onMouseDown={onClick}>\n            {label}\n          </span>\n        );\n      });\n  }\n\n  private renderAddNew(): JSX.Element | void {\n    if (!this.state.focused) {\n      return;\n    }\n    if (\n      this.props.allowNew &&\n      this.state.input.length > 0 &&\n      this.matchOptionsWithInput(true).length === 0\n    ) {\n      const onClick = () => {\n        this.props.onAdd(this.state.input);\n        this.resetState();\n      };\n      return (\n        <span id=\"addNew\" onMouseDown={onClick}>\n          Add a new entry : {this.state.input}\n        </span>\n      );\n    }\n  }\n\n  private onFocus(): void {\n    this.setState({\n      focused: true\n    });\n  }\n\n  private onBlur(): void {\n    /*this.setState({\n      focused: false\n    });*/\n  }\n\n  private inputChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState({\n      input: event.target.value.trim()\n    });\n  }\n\n  private resetState(): void {\n    this.setState({\n      input: \"\"\n    });\n  }\n\n  private matchOptionsWithInput(exact: boolean): any[] {\n    if (!this.state.focused) {\n      return [];\n    }\n    const inputPrep = this.state.input.toLowerCase().trim();\n\n    return this.props.options\n      .filter((option: any) => {\n        /* tslint:disable no-console */\n        if (this.props.tokens) {\n          return !this.props.tokens.some(token => {\n            return token === option[this.labelKey];\n          });\n        } else {\n          return true;\n        }\n      })\n      .filter((option: any) => {\n        const label = option[this.labelKey];\n        if (!label) {\n          return false;\n        }\n\n        const labelPrep = label.toLowerCase().trim();\n\n        if (!exact && this.state.input.length > 0) {\n          return labelPrep.indexOf(inputPrep) !== -1;\n        } else if (exact) {\n          return inputPrep === labelPrep;\n        } else {\n          return true;\n        }\n      });\n  }\n}\n\nexport default TokenInput;\n","import * as React from \"react\";\nimport Icon from \"react-fa\";\nimport { Button, InputGroup, InputGroupAddon } from \"reactstrap\";\n\nimport TokenInput from \"../../components/TokenInput\";\nimport { ICost } from \"../../state/costs\";\n\ninterface IEditSpecialitiesProps {\n  bought: string[];\n  specialities: Array<{\n    name: string;\n    canBuy: boolean;\n    cost: ICost;\n  }>;\n  onBuy: (speciality: string, cost: ICost) => void;\n}\n\ninterface IEditSpecialitiesState {\n  edit: boolean;\n}\n\nclass EditSpecialities extends React.PureComponent<\n  IEditSpecialitiesProps,\n  IEditSpecialitiesState\n> {\n  constructor(props: IEditSpecialitiesProps) {\n    super(props);\n    this.state = {\n      edit: false\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.endEdit = this.endEdit.bind(this);\n    this.isValueValid = this.isValueValid.bind(this);\n\n    this.buySpeciality = this.buySpeciality.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n    this.renderBoughtSpecialities = this.renderBoughtSpecialities.bind(this);\n    this.renderNoEdit = this.renderNoEdit.bind(this);\n    this.renderEdit = this.renderEdit.bind(this);\n  }\n\n  public render() {\n    if (!this.state.edit) {\n      return this.renderNoEdit();\n    } else {\n      return this.renderEdit();\n    }\n  }\n\n  private renderButton(icon: string, color: string, f: () => void) {\n    return (\n      <Button onClick={f} color={color}>\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  private renderBoughtSpecialities() {\n    return this.props.bought.map((speciality: string, index: number) => {\n      return (index > 0 ? \", \" : \"\") + speciality;\n    });\n  }\n\n  private renderNoEdit() {\n    const canBuy = this.props.specialities.some(\n      option => option.canBuy && option.cost.canPay\n    );\n    return (\n      <InputGroup onClick={this.startEdit} role=\"button\">\n        <div className=\"form-control\">{this.renderBoughtSpecialities()}</div>\n        {canBuy ? (\n          <InputGroupAddon addonType=\"append\">\n            {this.renderButton(\"plus\", \"default\", this.startEdit)}\n          </InputGroupAddon>\n        ) : (\n          \"\"\n        )}\n      </InputGroup>\n    );\n  }\n\n  private renderEdit() {\n    const optionList = this.props.specialities.map(speciality => {\n      return { id: speciality.name, name: speciality.name };\n    });\n\n    return (\n      <InputGroup>\n        <TokenInput\n          allowNew={true}\n          labelKey=\"name\"\n          onAdd={this.buySpeciality}\n          options={optionList}\n          tokens={this.props.bought}\n        />\n        <InputGroupAddon addonType=\"append\">\n          {this.renderButton(\"check\", \"success\", this.endEdit)}\n        </InputGroupAddon>\n      </InputGroup>\n    );\n  }\n\n  private startEdit(): void {\n    const canBuy = this.props.specialities.some(option => option.canBuy);\n    if (canBuy) {\n      this.setState({ edit: true });\n    }\n  }\n\n  private endEdit(): void {\n    this.setState({\n      edit: false\n    });\n  }\n\n  private isValueValid(specialityName: string): boolean {\n    return (\n      this.props.bought.findIndex(\n        speciality => specialityName === speciality\n      ) === -1\n    );\n  }\n\n  private buySpeciality(speciality: string) {\n    if (speciality.length === 0) {\n      return;\n    }\n    if (!this.isValueValid(speciality)) {\n      return;\n    }\n\n    const foundIndex = this.props.specialities.findIndex(available => {\n      return available.name === speciality;\n    });\n    if (foundIndex !== -1) {\n      if (this.props.specialities[foundIndex].canBuy) {\n        this.props.onBuy(\n          this.props.specialities[foundIndex].name,\n          this.props.specialities[foundIndex].cost\n        );\n      }\n    } else {\n      const indexNewSpeciality = this.props.specialities.findIndex(\n        option => option.name.length === 0\n      );\n      if (this.props.specialities[indexNewSpeciality].canBuy) {\n        this.props.onBuy(\n          speciality,\n          this.props.specialities[indexNewSpeciality].cost\n        );\n      }\n    }\n  }\n}\n\nexport default EditSpecialities;\n","import * as React from \"react\";\n\nimport { ICost } from \"../../state/costs\";\n\nimport EditSpecialities from \"./EditSpecialities\";\n\nexport interface ISpecialitiesProps {\n  specialities: Array<{\n    name: string;\n    canBuy: boolean;\n    cost: ICost;\n  }>;\n  bought: string[];\n\n  onBuy: (speciality: string, cost: ICost) => void;\n}\n\nclass Specialities extends React.PureComponent<ISpecialitiesProps, {}> {\n  public render() {\n    return (\n      <EditSpecialities\n        bought={this.props.bought}\n        specialities={this.props.specialities}\n        onBuy={this.props.onBuy}\n      />\n    );\n  }\n}\n\nexport default Specialities;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/skills\";\nimport { getCostSpeciality, ICost } from \"../../state/costs\";\nimport { canBuySpeciality, getSkill } from \"../../state/skills\";\nimport { IStoreState } from \"../../state/type\";\n\nimport { skills as data, TSkillName } from \"../../data/skills\";\n\nimport Specialities, {\n  ISpecialitiesProps\n} from \"../../components/Character/Specialities\";\n\ninterface IMapStateToProps {\n  bought: string[];\n  specialities: Array<{\n    name: string;\n    canBuy: boolean;\n    cost: ICost;\n  }>;\n}\n\ninterface IProps {\n  skill: TSkillName;\n}\n\ninterface IMapDispatchToProps {\n  onBuy: (speciality: string, cost: ICost) => void;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  const newSpecialityAvailability = {\n    canBuy: canBuySpeciality(state, props.skill, \"\"),\n    cost: getCostSpeciality(state),\n    name: \"\"\n  };\n\n  const concat = data[props.skill].concat(\n    getSkill(state, props.skill).specialities\n  );\n  const merge = concat\n    .filter((item, pos) => concat.indexOf(item) === pos)\n    .sort();\n\n  const retVal = {\n    bought: getSkill(state, props.skill).specialities,\n    specialities: merge.map((speciality: string) => {\n      return {\n        canBuy: canBuySpeciality(state, props.skill, speciality),\n        cost: getCostSpeciality(state),\n        name: speciality\n      };\n    })\n  };\n  retVal.specialities.push(newSpecialityAvailability);\n  return retVal;\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onBuy: (speciality: string, cost: ICost) => {\n      dispatch(actions.skillSpecialityBuy(props.skill, speciality, cost));\n    }\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): ISpecialitiesProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Specialities);\n","import * as React from \"react\";\n\nimport Skill from \"../../containers/Character/Skill\";\nimport Specialities from \"../../containers/Character/Specialities\";\nimport { skills, TSkillName } from \"../../data/skills\";\n\nimport \"./Skills.css\";\n\nclass Skills extends React.PureComponent<{}, {}> {\n  public render() {\n    return (\n      <ul className=\"skills-list\">\n        {Object.keys(skills).map((name: string) => {\n          return (\n            <li key={name} className=\"Grid\">\n              <div className=\"Grid-cell\">\n                <Skill name={name as TSkillName} />\n              </div>\n              <div className=\"Grid-cell\">\n                <Specialities skill={name as TSkillName} />\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default Skills;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport Skills from \"../components/Character/Skills\";\n\nimport { Input } from \"reactstrap\";\n\nclass RouteSkills extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>\n          <Input placeholder=\"blabla\" />\n        </AppIntro>\n        <AppPage>\n          <Skills />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteSkills;\n","import * as React from \"react\";\n\nimport { ICost } from \"../../state/costs\";\n\nimport {\n  IDataVirtueType,\n  VIRTUE_CHIVALROUS,\n  VIRTUE_SELFISH\n} from \"../../data/virtues\";\n\nimport EditNumeric from \"../../components/EditNumeric\";\nimport FieldHeader from \"../../components/FieldHeader\";\n\ninterface IVirtueProp {\n  type: IDataVirtueType;\n  name: string;\n  value: number;\n  cost: ICost;\n  canBuy: boolean;\n  onBuy: () => void;\n}\n\nexport interface IVirtuesProps {\n  virtues: IVirtueProp[];\n}\n\nclass Virtues extends React.PureComponent<IVirtuesProps, {}> {\n  public render() {\n    const chivalrousVirtues = this.props.virtues.filter(\n      v => v.type === VIRTUE_CHIVALROUS\n    );\n    const selfishVirtues = this.props.virtues.filter(\n      v => v.type === VIRTUE_SELFISH\n    );\n    const max = Math.max(chivalrousVirtues.length, selfishVirtues.length);\n\n    const rows = [\n      <div key=\"header\">\n        <div>\n          <FieldHeader label=\"Chivalrous Virtues\" />\n        </div>\n        <div>\n          <FieldHeader label=\"Selfish Virtues\" />\n        </div>\n      </div>\n    ];\n    for (let i = 0; i < max; i++) {\n      const cvdiv =\n        i < chivalrousVirtues.length ? (\n          <div>{this.renderVirtue(chivalrousVirtues[i])}</div>\n        ) : (\n          <div />\n        );\n      const svdiv =\n        i < selfishVirtues.length ? (\n          <div>{this.renderVirtue(selfishVirtues[i])}</div>\n        ) : (\n          <div />\n        );\n\n      rows.push(\n        <div key={\"virtues_\" + i}>\n          {cvdiv}\n          {svdiv}\n        </div>\n      );\n    }\n    return <div>{rows.map(r => r)}</div>;\n  }\n\n  private renderVirtue(virtue: IVirtueProp): JSX.Element {\n    return (\n      <EditNumeric\n        name={virtue.name}\n        value={virtue.value}\n        canBuy={virtue.canBuy && virtue.cost.canPay}\n        onBuy={virtue.onBuy}\n      />\n    );\n  }\n}\n\nexport default Virtues;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/virtues\";\nimport { getCostVirtue, ICost } from \"../../state/costs\";\nimport { IStoreState } from \"../../state/type\";\nimport { canBuyVirtue } from \"../../state/virtues\";\n\nimport Virtues, { IVirtuesProps } from \"../../components/Character/Virtues\";\nimport { IDataVirtueType } from \"../../data/virtues\";\n\ninterface IMapStateToProps {\n  virtues: Array<{\n    canBuy: boolean;\n    cost: ICost;\n    name: string;\n    type: IDataVirtueType;\n    value: number;\n  }>;\n}\n\ninterface IMapDispatchToProps {\n  onBuy: (name: string, cost: ICost) => void;\n}\n\nfunction mapStateToProps(state: IStoreState): IMapStateToProps {\n  return {\n    virtues: state.virtues.map(v => {\n      return {\n        canBuy: canBuyVirtue(state, v.name),\n        cost: getCostVirtue(state, v.name, v.type),\n        name: v.name,\n        type: v.type,\n        value: v.value\n      };\n    })\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>\n): IMapDispatchToProps {\n  return {\n    onBuy: (name: string, cost: ICost) =>\n      dispatch(actions.increase(name, 1, cost))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IVirtuesProps {\n  const props: IVirtuesProps = { virtues: [] };\n\n  propsFromState.virtues.forEach(variable => {\n    const val = Object.assign({}, variable, {\n      onBuy: () => propsForDispatch.onBuy(variable.name, variable.cost)\n    });\n    props.virtues.push(val);\n  });\n  return props;\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Virtues);\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport Virtues from \"../containers/Character/Virtues\";\n\nclass RouteVirtues extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <Virtues />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteVirtues;\n","import * as React from \"react\";\n\nimport { ICost } from \"../../state/costs\";\n\nimport { TChiName } from \"../../data/chi\";\n\nimport EditNumeric from \"../../components/EditNumeric\";\nimport StaticText from \"../../components/StaticText\";\n\nexport interface IChiProps {\n  name: TChiName;\n  value: number;\n  cultivation: number;\n  cost: ICost;\n  canBuy: boolean;\n  onBuy: (cost: ICost) => void;\n}\n\nclass Chi extends React.PureComponent<IChiProps, {}> {\n  constructor(props: IChiProps) {\n    super(props);\n    this.onBuy = this.onBuy.bind(this);\n  }\n  public render() {\n    const name =\n      this.props.name.charAt(0).toUpperCase() + this.props.name.slice(1);\n\n    return (\n      <div className=\"Grid\">\n        <div className=\"Grid-cell\">\n          <EditNumeric\n            name={name}\n            value={this.props.value}\n            canBuy={this.props.canBuy && this.props.canBuy}\n            onBuy={this.onBuy}\n          />\n        </div>\n        <div className=\"Grid-cell\">\n          <StaticText\n            header=\"Cultivation\"\n            value={this.props.cultivation.toString()}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private onBuy(): void {\n    this.props.onBuy(this.props.cost);\n  }\n}\n\nexport default Chi;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/chi\";\nimport { canBuyChi } from \"../../state/chi\";\nimport { getCostChi, ICost } from \"../../state/costs\";\nimport { IStoreState } from \"../../state/type\";\n\nimport Chi, { IChiProps } from \"../../components/Character/Chi\";\nimport { TChiName } from \"../../data/chi\";\n\ninterface IMapStateToProps {\n  canBuy: boolean;\n  cost: ICost;\n  cultivation: number;\n  name: TChiName;\n  value: number;\n}\n\ninterface IMapDispatchToProps {\n  onBuy: (cost: ICost) => void;\n}\n\ninterface IProps {\n  name: TChiName;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  return {\n    canBuy: canBuyChi(/*state, props.name*/),\n    cost: getCostChi(state, props.name),\n    cultivation: state.chi[props.name].cultivation,\n    name: props.name,\n    value: state.chi[props.name].value\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onBuy: (cost: ICost) => dispatch(actions.chiBuy(props.name, 1, cost))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IChiProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Chi);\n","import * as React from \"react\";\n\nimport Chi from \"../../containers/Character/Chi\";\nimport { chiNames, TChiName } from \"../../data/chi\";\n\nclass ChiList extends React.PureComponent<{}, {}> {\n  public render() {\n    // TODO showing something ?\n    return (\n      <div>\n        {chiNames.map((name: TChiName) => {\n          return (\n            <div key={name}>\n              <div>\n                <Chi name={name} />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ChiList;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport ChiList from \"../components/Character/ChiList\";\n\nclass RouteChi extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Please select your Chi values</AppIntro>\n        <AppPage>\n          <ChiList />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteChi;\n","import * as React from 'react';\n\nclass PlaceHolder extends React.PureComponent<{}, {}> {\n  public render() {\n    return (\n      <div>\n        <div>This is a placeholder </div>\n        <div>The content will soon be added</div>\n        <div>\n          <div>{this.props.children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaceHolder;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport PlaceHodler from \"../components/PlaceHolder\";\n\nclass RouteEquipment extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <PlaceHodler>Soon to be Equipment</PlaceHodler>\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteEquipment;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport PlaceHodler from \"../components/PlaceHolder\";\n\nclass RouteConditions extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <PlaceHodler>Soon to be Conditions</PlaceHodler>\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteConditions;\n","import SelectorList from \"./SelectorList\";\n\nexport interface IOption {\n  id: string;\n  label: string;\n  meta?: string;\n  disabled?: boolean;\n}\n\nexport default SelectorList;\n","import * as React from \"react\";\n\nimport { IOption } from \"../SelectorList\";\n\nimport \"./SelectorList.css\";\n\ninterface ISelectorListProps {\n  options: IOption[];\n  preSelected?: string[];\n  renderItem: (id: string) => JSX.Element;\n}\n\nexport interface ISelectorListState {\n  selected: string[];\n  searched: string[];\n}\n\nclass SelectorList extends React.PureComponent<\n  ISelectorListProps,\n  ISelectorListState\n> {\n  constructor(props: ISelectorListProps) {\n    super(props);\n\n    this.state = {\n      searched: this.props.options.map(option => {\n        if (option.meta) {\n          return option.id;\n        } else {\n          return option.label;\n        }\n      }),\n      selected: this.props.preSelected ? this.props.preSelected : []\n    };\n\n    this.renderList = this.renderList.bind(this);\n    this.renderSearchBox = this.renderSearchBox.bind(this);\n    this.renderSelected = this.renderSelected.bind(this);\n    this.itemOnSelectedToggle = this.itemOnSelectedToggle.bind(this);\n    this.searchInputChanged = this.searchInputChanged.bind(this);\n  }\n\n  public render() {\n    return (\n      <section className=\"selector-list\">\n        <aside className=\"left-list\">\n          {this.renderSearchBox()}\n          {this.renderList()}\n        </aside>\n        <section className=\"right-list\">{this.renderSelected()}</section>\n      </section>\n    );\n  }\n\n  private renderSearchBox(): JSX.Element {\n    return (\n      <div className=\"searchbox\">\n        <input\n          type=\"search\"\n          placeholder=\"Search a style...\"\n          onChange={this.searchInputChanged}\n        />\n      </div>\n    );\n  }\n\n  private renderList(): JSX.Element {\n    return (\n      <ul className=\"search-list\">\n        {this.state.searched\n          .filter(id => {\n            const option = this.props.options.find(prop => {\n              return prop.id === id;\n            });\n            if (option === undefined) {\n              return false;\n            }\n            return true;\n          })\n          .map(id => {\n            const option = this.props.options.find(prop => {\n              return prop.id === id;\n            }) as IOption;\n            if (!option.disabled) {\n              const toggle = () => this.itemOnSelectedToggle(option);\n              const selected = this.state.selected.indexOf(option.id) !== -1;\n\n              return (\n                <li className=\"item\" onClick={toggle} key={option.id}>\n                  {selected ? <b>{option.label}</b> : option.label}\n                </li>\n              );\n            } else {\n              return (\n                <li className=\"header\" key={option.id}>\n                  {option.label}\n                </li>\n              );\n            }\n          })}\n      </ul>\n    );\n  }\n\n  private renderSelected(): JSX.Element[] {\n    return this.state.selected.map(selected => {\n      const element = this.props.renderItem(selected);\n      return (\n        <article className=\"selected-item\" key={selected}>\n          {element}\n        </article>\n      );\n    });\n  }\n\n  private itemOnSelectedToggle(item: { id: string; label: string }): void {\n    this.setState((prevState: ISelectorListState) => {\n      const idx = prevState.selected.indexOf(item.id);\n      const newList = this.state.selected.slice();\n\n      if (idx < 0) {\n        newList.splice(0, 0, item.id);\n      } else {\n        newList.splice(idx, 1);\n      }\n\n      newList.sort((a, b) => {\n        return (\n          this.props.options.findIndex(o => o.id === a) -\n          this.props.options.findIndex(o => o.id === b)\n        );\n      });\n\n      return {\n        selected: newList\n      };\n    });\n  }\n\n  private searchInputChanged(event: React.ChangeEvent<HTMLInputElement>): void {\n    const input = event.target.value.toLowerCase();\n    this.setState({\n      searched: this.props.options\n        .filter(option => {\n          if (input.length === 0) {\n            return true;\n          }\n          if (option.meta) {\n            return option.meta.toLowerCase().search(input) !== -1;\n          } else {\n            return option.label.toLowerCase().search(input) !== -1;\n          }\n        })\n        .map(option => option.id)\n    });\n  }\n}\n\nexport default SelectorList;\n","import * as constants from \"../perks/constants/effects\";\n\nexport type IEffectStatistic =\n  | \"speed\"\n  | \"footwork\"\n  | \"strike\"\n  | \"damage\"\n  | \"block\"\n  | \"toughness\";\n\nexport interface IEffectCombatStatistic {\n  type: constants.EFFECT_COMBAT_STATISTIC;\n  increase: number;\n  statistic: IEffectStatistic;\n}\n\nexport interface IEffectConditionalText {\n  type: constants.EFFECT_CONDITIONAL_TEXT;\n  text: string[];\n}\n\nexport interface IEffectChiThresholdIncreaseBaseChi {\n  type: constants.EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI;\n  chiIncrease: number;\n}\n\nexport type IEffect =\n  | IEffectCombatStatistic\n  | IEffectConditionalText\n  | IEffectChiThresholdIncreaseBaseChi;\n\nexport function effectToString(effect: IEffect): string {\n  switch (effect.type) {\n    case constants.EFFECT_COMBAT_STATISTIC:\n      return (\n        (effect.increase > 0 ? \"+\" : \"\") +\n        effect.increase +\n        \" to \" +\n        effect.statistic\n      );\n    case constants.EFFECT_CONDITIONAL_TEXT:\n      return effect.text.toString();\n    case constants.EFFECT_CHI_THRESHOLD_INCREASE_BASE_CHI:\n      return (\n        (effect.chiIncrease > 0 ? \"+\" : \"\") +\n        effect.chiIncrease +\n        \" to Chi Threshold\"\n      );\n  }\n}\n","import * as React from \"react\";\nimport { Icon } from \"react-fa\";\n\nimport { kungfuTechniqueData } from \"../../data/kungfu\";\nimport {\n  IDataExternalKungfuTechnique,\n  KUNGFU_EXTERNAL\n} from \"../../data/kungfu/types\";\nimport { ICost } from \"../../state/costs\";\nimport { effectToString } from \"../../state/effects\";\n\nexport interface IExternalKungFuTechniqueProps {\n  styleUid: string;\n  uid: string;\n  cost: ICost;\n  canBuy: boolean;\n  onBuy: (cost: ICost) => void;\n}\n\nclass ExternalKungFuTechnique extends React.PureComponent<\n  IExternalKungFuTechniqueProps,\n  {}\n> {\n  constructor(props: IExternalKungFuTechniqueProps) {\n    super(props);\n\n    this.onBuy = this.onBuy.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  public render() {\n    const technique = kungfuTechniqueData(\n      KUNGFU_EXTERNAL,\n      this.props.styleUid,\n      this.props.uid\n    ) as IDataExternalKungfuTechnique;\n    if (technique === undefined) {\n      return;\n    }\n\n    const effect = effectToString(technique.effect);\n\n    return (\n      <tr key={technique.uid} role=\"button\" onClick={this.onBuy}>\n        <td>{technique.name}</td>\n        <td>{technique.cost}</td>\n        <td>\n          {technique.description}\n          {effect.length > 0 ? \" \" + effect : null}\n        </td>\n        <td>{this.renderButton()}</td>\n      </tr>\n    );\n  }\n\n  private renderButton(): JSX.Element {\n    if (this.props.canBuy && this.props.cost.canPay) {\n      return (\n        <button color=\"success\">\n          <Icon name=\"graduation-cap\" />\n        </button>\n      );\n    } else {\n      return (\n        <button color=\"danger\">\n          <Icon name=\"times\" />\n        </button>\n      );\n    }\n  }\n\n  private onBuy(): void {\n    if (this.props.canBuy && this.props.cost.canPay) {\n      this.props.onBuy(this.props.cost);\n    }\n  }\n}\n\nexport default ExternalKungFuTechnique;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport { getCostKungFuTechnique, ICost } from \"../../state/costs\";\n\nimport * as actions from \"../../state/actions/kungfu\";\nimport {\n  canBuyKungFuTechnique,\n  isStyleTechniquePresent\n} from \"../../state/kungfu\";\nimport { IStoreState } from \"../../state/type\";\n\nimport ExternalKungFuTechnique, {\n  IExternalKungFuTechniqueProps\n} from \"../../components/Character/ExternalKungFuTechnique\";\nimport { KUNGFU_EXTERNAL } from \"../../data/kungfu/types\";\n\ninterface IMapStateToProps {\n  styleUid: string;\n  uid: string;\n  known: boolean;\n  canBuy: boolean;\n  cost: ICost;\n}\n\ninterface IMapDispatchToProps {\n  onBuy: (cost: ICost) => void;\n}\n\ninterface IProps {\n  styleUid: string;\n  uid: string;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  return {\n    canBuy: canBuyKungFuTechnique(\n      state.kungfu,\n      KUNGFU_EXTERNAL,\n      props.styleUid,\n      props.uid\n    ),\n    cost: getCostKungFuTechnique(\n      state,\n      KUNGFU_EXTERNAL,\n      props.styleUid,\n      props.uid\n    ),\n    known: isStyleTechniquePresent(\n      state.kungfu,\n      KUNGFU_EXTERNAL,\n      props.styleUid,\n      props.uid\n    ),\n    styleUid: props.styleUid,\n    uid: props.uid\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onBuy: (cost: ICost) =>\n      dispatch(\n        actions.buyTechnique(props.styleUid, props.uid, KUNGFU_EXTERNAL, cost)\n      )\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IExternalKungFuTechniqueProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(ExternalKungFuTechnique);\n","import * as React from \"react\";\nimport { Icon } from \"react-fa\";\n\nimport { kungfuData } from \"../../data/kungfu\";\nimport {\n  IDataExternalKungfu,\n  IDataExternalKungfuStatistics,\n  KUNGFU_EXTERNAL\n} from \"../../data/kungfu/types\";\nimport { ICost } from \"../../state/costs\";\n\nimport ExternalKungFuTechnique from \"../../containers/Character/ExternalKungFuTechnique\";\n\nexport interface IExternalKungFuProps {\n  uid: string;\n  isOpen: boolean;\n  cost: ICost;\n  canOpen: boolean;\n  knownTechniques: string[];\n  onOpen: (cost: ICost) => void;\n  statistics: IDataExternalKungfuStatistics;\n}\n\nclass ExternalKungFu extends React.PureComponent<IExternalKungFuProps, {}> {\n  constructor(props: IExternalKungFuProps) {\n    super(props);\n\n    this.renderCrunch = this.renderCrunch.bind(this);\n    this.renderStats = this.renderStats.bind(this);\n    this.renderTechniques = this.renderTechniques.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  public render() {\n    const data = kungfuData(\n      KUNGFU_EXTERNAL,\n      this.props.uid\n    ) as IDataExternalKungfu;\n    return (\n      <div>\n        <div>\n          <div>{this.renderCrunch(data)}</div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderCrunch(data: IDataExternalKungfu): JSX.Element {\n    return (\n      <div>\n        <div className=\"Grid\" style={{ justifyContent: \"space-between\" }}>\n          <h4>{data.name}</h4>\n          <span style={{ justifyContent: \"flex-end\" }}>\n            {this.renderButton()}\n          </span>\n        </div>\n        <div className=\"Grid\">\n          <h5>Weapons</h5>\n          <p>\n            {data.weapons.map(w => (\n              <button key={w} disabled={true}>\n                {w}\n              </button>\n            ))}\n          </p>\n        </div>\n        <div className=\"Grid\">\n          <div className=\"Grid-cell\">\n            <div className=\"Grid\">\n              <h5>Qualities</h5>\n              {data.qualities.map((q, i) => (\n                <p key={i}>{q}</p>\n              ))}\n            </div>\n            <div className=\"Grid\">\n              <h5>Laught</h5>\n              <p>{data.laugths}</p>\n            </div>\n            <div className=\"Grid\">\n              <h5>Fears</h5>\n              <p>{data.fears}</p>\n            </div>\n          </div>\n          <div className=\"Grid-cell\" style={{ flexGrow: 0 }}>\n            {this.renderStats()}\n          </div>\n        </div>\n        <div>\n          <h5>Techniques</h5>\n          {this.renderTechniques(data)}\n        </div>\n      </div>\n    );\n  }\n\n  private renderStats(): JSX.Element {\n    return (\n      <table>\n        <tbody>\n          {Object.keys(this.props.statistics).map(\n            (s: string): JSX.Element => {\n              return (\n                <tr key={s}>\n                  <td>{s}</td>\n                  <td>{this.props.statistics[s]}</td>\n                </tr>\n              );\n            }\n          )}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderTechniques(data: IDataExternalKungfu): JSX.Element {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cost</th>\n            <th>Effect</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {data.techniques.map(t => (\n            <ExternalKungFuTechnique\n              key={t.uid}\n              styleUid={data.uid}\n              uid={t.uid}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderButton(): JSX.Element {\n    const onClick = () => this.props.onOpen(this.props.cost);\n    if (this.props.canOpen && this.props.cost.canPay) {\n      return (\n        <button color=\"success\" onClick={onClick}>\n          <Icon name=\"graduation-cap\" />\n        </button>\n      );\n    } else if (this.props.isOpen) {\n      return (\n        <button color=\"primary\" disabled={true}>\n          <Icon name=\"leanpub\" />\n        </button>\n      );\n    } else {\n      return (\n        <button color=\"danger\">\n          <Icon name=\"times\" />\n        </button>\n      );\n    }\n  }\n}\n\nexport default ExternalKungFu;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/kungfu\";\nimport { getCostKungFuStyle, ICost } from \"../../state/costs\";\nimport {\n  canOpenKungFu,\n  getExternalKungFuStatistics,\n  isStylePresent\n} from \"../../state/kungfu\";\nimport { IStoreState } from \"../../state/type\";\n\nimport ExternalKungFu, {\n  IExternalKungFuProps\n} from \"../../components/Character/ExternalKungFu\";\n\nimport {\n  IDataExternalKungfuStatistics,\n  KUNGFU_EXTERNAL\n} from \"../../data/kungfu/types\";\n\ninterface IProps {\n  uid: string;\n}\n\ninterface IMapStateToProps {\n  canOpen: boolean;\n  isOpen: boolean;\n  knownTechniques: string[];\n  uid: string;\n  cost: ICost;\n  statistics: IDataExternalKungfuStatistics;\n}\n\ninterface IMapDispatchToProps {\n  onOpen: (cost: ICost) => void;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  const isOpen = isStylePresent(state.kungfu, KUNGFU_EXTERNAL, props.uid);\n\n  return {\n    canOpen: canOpenKungFu(state.kungfu, KUNGFU_EXTERNAL, props.uid),\n    cost: getCostKungFuStyle(state, KUNGFU_EXTERNAL, props.uid),\n    isOpen,\n    knownTechniques: isOpen ? state.kungfu[KUNGFU_EXTERNAL][props.uid] : [],\n    statistics: getExternalKungFuStatistics(state.kungfu, props.uid),\n    uid: props.uid\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onOpen: (cost: ICost) =>\n      dispatch(actions.openStyle(props.uid, KUNGFU_EXTERNAL, cost))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IExternalKungFuProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(ExternalKungFu);\n","import * as React from \"react\";\nimport { Icon } from \"react-fa\";\n\nimport { kungfuTechniqueData } from \"../../data/kungfu\";\nimport {\n  IDataInternalKungfuTechnique,\n  KUNGFU_INTERNAL\n} from \"../../data/kungfu/types\";\nimport { ICost } from \"../../state/costs\";\nimport { effectToString } from \"../../state/effects\";\n\nexport interface IInternalKungFuTechniqueProps {\n  styleUid: string;\n  uid: string;\n  cost: ICost;\n  canBuy: boolean;\n  onBuy: (cost: ICost) => void;\n}\n\nclass InternalKungFuTechnique extends React.PureComponent<\n  IInternalKungFuTechniqueProps,\n  {}\n> {\n  constructor(props: IInternalKungFuTechniqueProps) {\n    super(props);\n\n    this.onBuy = this.onBuy.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  public render() {\n    const technique = kungfuTechniqueData(\n      KUNGFU_INTERNAL,\n      this.props.styleUid,\n      this.props.uid\n    ) as IDataInternalKungfuTechnique;\n    if (technique === undefined) {\n      return;\n    }\n\n    const effect = effectToString(technique.effect);\n\n    return (\n      <tr key={technique.uid} role=\"button\" onClick={this.onBuy}>\n        <td>{technique.name}</td>\n        <td>{technique.level}</td>\n        <td>\n          {technique.description}\n          {effect.length > 0 ? \" \" + effect : null}\n        </td>\n        <td>{this.renderButton()}</td>\n      </tr>\n    );\n  }\n\n  private renderButton(): JSX.Element {\n    if (this.props.canBuy && this.props.cost.canPay) {\n      return (\n        <button color=\"success\">\n          <Icon name=\"graduation-cap\" />\n        </button>\n      );\n    } else {\n      return (\n        <button color=\"danger\">\n          <Icon name=\"times\" />\n        </button>\n      );\n    }\n  }\n\n  private onBuy(): void {\n    if (this.props.canBuy && this.props.cost.canPay) {\n      this.props.onBuy(this.props.cost);\n    }\n  }\n}\n\nexport default InternalKungFuTechnique;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport { getCostKungFuTechnique, ICost } from \"../../state/costs\";\n\nimport * as actions from \"../../state/actions/kungfu\";\nimport {\n  canBuyKungFuTechnique,\n  isStyleTechniquePresent\n} from \"../../state/kungfu\";\nimport { IStoreState } from \"../../state/type\";\n\nimport InternalKungFuTechnique, {\n  IInternalKungFuTechniqueProps\n} from \"../../components/Character/InternalKungFuTechnique\";\nimport { KUNGFU_INTERNAL } from \"../../data/kungfu/types\";\n\ninterface IMapStateToProps {\n  styleUid: string;\n  uid: string;\n  known: boolean;\n  canBuy: boolean;\n  cost: ICost;\n}\n\ninterface IMapDispatchToProps {\n  onBuy: (cost: ICost) => void;\n}\n\ninterface IProps {\n  styleUid: string;\n  uid: string;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  return {\n    canBuy: canBuyKungFuTechnique(\n      state.kungfu,\n      KUNGFU_INTERNAL,\n      props.styleUid,\n      props.uid\n    ),\n    cost: getCostKungFuTechnique(\n      state,\n      KUNGFU_INTERNAL,\n      props.styleUid,\n      props.uid\n    ),\n    known: isStyleTechniquePresent(\n      state.kungfu,\n      KUNGFU_INTERNAL,\n      props.styleUid,\n      props.uid\n    ),\n    styleUid: props.styleUid,\n    uid: props.uid\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onBuy: (cost: ICost) =>\n      dispatch(\n        actions.buyTechnique(props.styleUid, props.uid, KUNGFU_INTERNAL, cost)\n      )\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IInternalKungFuTechniqueProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(InternalKungFuTechnique);\n","import * as React from \"react\";\nimport { Icon } from \"react-fa\";\n\nimport { kungfuData } from \"../../data/kungfu\";\nimport { IDataInternalKungfu, KUNGFU_INTERNAL } from \"../../data/kungfu/types\";\nimport { ICost } from \"../../state/costs\";\n\nimport InternalKungFuTechnique from \"../../containers/Character/InternalKungFuTechnique\";\n\nexport interface IInternalKungFuProps {\n  uid: string;\n  isOpen: boolean;\n  cost: ICost;\n  canOpen: boolean;\n  knownTechniques: string[];\n  onOpen: (cost: ICost) => void;\n}\n\nclass InternalKungFu extends React.PureComponent<IInternalKungFuProps, {}> {\n  constructor(props: IInternalKungFuProps) {\n    super(props);\n\n    this.renderTechniques = this.renderTechniques.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  public render() {\n    const data = kungfuData(\n      KUNGFU_INTERNAL,\n      this.props.uid\n    ) as IDataInternalKungfu;\n    return (\n      <div>\n        <div className=\"Grid\" style={{ justifyContent: \"space-between\" }}>\n          <h4>{data.name}</h4>\n          <span style={{ justifyContent: \"flex-end\" }}>\n            {this.renderButton()}\n          </span>\n        </div>\n        <div>\n          <h5>Description</h5>\n          <p>{data.description}</p>\n        </div>\n        <div className=\"Grid\">\n          <h5>Element</h5>\n          <p>\n            <button disabled={true}>{data.element}</button>\n          </p>\n        </div>\n        <div>\n          <h5>Techniques</h5>\n        </div>\n        {this.renderTechniques(data)}\n      </div>\n    );\n  }\n\n  private renderTechniques(data: IDataInternalKungfu): JSX.Element {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Level</th>\n            <th>Effect</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {data.techniques\n            .sort((a, b) => a.level - b.level)\n            .map(t => (\n              <InternalKungFuTechnique\n                key={t.uid}\n                styleUid={data.uid}\n                uid={t.uid}\n              />\n            ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderButton(): JSX.Element {\n    const onClick = () => this.props.onOpen(this.props.cost);\n    if (this.props.canOpen && this.props.cost.canPay) {\n      return (\n        <button color=\"success\" onClick={onClick}>\n          <Icon name=\"graduation-cap\" />\n        </button>\n      );\n    } else if (this.props.isOpen) {\n      return (\n        <button color=\"primary\" disabled={true}>\n          <Icon name=\"leanpub\" />\n        </button>\n      );\n    } else {\n      return (\n        <button color=\"danger\">\n          <Icon name=\"times\" />\n        </button>\n      );\n    }\n  }\n}\n\nexport default InternalKungFu;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport * as actions from \"../../state/actions/kungfu\";\nimport { getCostKungFuStyle, ICost } from \"../../state/costs\";\nimport { canOpenKungFu, isStylePresent } from \"../../state/kungfu\";\nimport { IStoreState } from \"../../state/type\";\n\nimport InternalKungFu, {\n  IInternalKungFuProps\n} from \"../../components/Character/InternalKungFu\";\n\nimport { KUNGFU_INTERNAL } from \"../../data/kungfu/types\";\n\ninterface IProps {\n  uid: string;\n}\n\ninterface IMapStateToProps {\n  canOpen: boolean;\n  isOpen: boolean;\n  knownTechniques: string[];\n  uid: string;\n  cost: ICost;\n}\n\ninterface IMapDispatchToProps {\n  onOpen: (cost: ICost) => void;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  const isOpen = isStylePresent(state.kungfu, KUNGFU_INTERNAL, props.uid);\n\n  return {\n    canOpen: canOpenKungFu(state.kungfu, KUNGFU_INTERNAL, props.uid),\n    cost: getCostKungFuStyle(state, KUNGFU_INTERNAL, props.uid),\n    isOpen,\n    knownTechniques: isOpen ? state.kungfu[KUNGFU_INTERNAL][props.uid] : [],\n    uid: props.uid\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onOpen: (cost: ICost) =>\n      dispatch(actions.openStyle(props.uid, KUNGFU_INTERNAL, cost))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IInternalKungFuProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(InternalKungFu);\n","import * as React from \"react\";\n\nimport SelectorList, { IOption } from \"../../components/SelectorList\";\n\nimport ExternalKungFu from \"../../containers/Character/ExternalKungFu\";\nimport InternalKungFu from \"../../containers/Character/InternalKungFu\";\n\nimport {\n  externalKungfu,\n  getKungFuType,\n  internalKungfu\n} from \"../../data/kungfu\";\nimport { KUNGFU_EXTERNAL } from \"../../data/kungfu/types\";\n\nclass KungFuList extends React.PureComponent<{}, {}> {\n  constructor(props: {}) {\n    super(props);\n\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  public render() {\n    const externals: IOption[] = externalKungfu.map(kf => ({\n      disabled: false,\n      id: kf.uid,\n      label: kf.name,\n      meta: kf.name + \",external\"\n    }));\n    const internals: IOption[] = internalKungfu.map(kf => ({\n      disabled: false,\n      id: kf.uid,\n      label: kf.name,\n      meta: kf.name + \",internal\"\n    }));\n\n    const externalHeader: IOption[] = [\n      {\n        disabled: true,\n        id: \"External Styles\",\n        label: \"External Styles\",\n        meta: \"external\"\n      }\n    ];\n    const internalHeader: IOption[] = [\n      {\n        disabled: true,\n        id: \"Internal Styles\",\n        label: \"Internal Styles\",\n        meta: \"internal\"\n      }\n    ];\n\n    return (\n      <SelectorList\n        options={externalHeader\n          .concat(externals)\n          .concat(internalHeader)\n          .concat(internals)}\n        preSelected={[]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n\n  private renderItem(uid: string): JSX.Element {\n    const type = getKungFuType(uid);\n    if (type === KUNGFU_EXTERNAL) {\n      return <ExternalKungFu uid={uid} />;\n    } else {\n      return <InternalKungFu uid={uid} />;\n    }\n  }\n}\n\nexport default KungFuList;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport KungFuList from \"../components/Character/KungFuList\";\n\nclass RouteKungFu extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <KungFuList />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteKungFu;\n","import * as React from \"react\";\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\n\nimport {\n  getLoresheetOptionData,\n  IDataLoresheetOption\n} from \"../../data/loresheets\";\nimport { IPerk } from \"../../perks\";\nimport { IBonus } from \"../../perks/bonuses\";\nimport * as bonuses from \"../../perks/constants/bonuses\";\nimport { ICost } from \"../../state/costs\";\n\nimport EditText from \"../../components/EditText\";\n\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nexport interface ILoresheetOptionPopupProps {\n  lsUid: string;\n  uid: string;\n  cost: ICost[];\n  onBuy: (cost: ICost, payload?: string) => void;\n  isOpen: boolean;\n  toggle: () => void;\n}\n\ninterface ILoresheetOptionPopupState {\n  cost?: ICost;\n  payload?: string;\n}\n\nfunction fromBonusToString(bonus: IBonus): string {\n  switch (bonus.type) {\n    case bonuses.BONUS_DESTINY:\n      return \"destiny +\" + bonus.value;\n    case bonuses.BONUS_ENTANGLEMENT:\n      return \"entanglement +\" + bonus.value;\n    case bonuses.BONUS_CHI:\n      return bonus.chi + \" chi +\" + bonus.value;\n    case bonuses.BONUS_CULTIVATION:\n      return bonus.chi + \" chi cultivation +\" + bonus.value;\n    case bonuses.BONUS_ONE_AMONG_N:\n      throw new Error(\n        \"bonus too complicated to render : \" + JSON.stringify(bonus)\n      );\n    case bonuses.BONUS_SKILL_RANK:\n      return \"skill \" + bonus.skill + \" +5\";\n    case bonuses.BONUS_SPECIALITY:\n      return \"skill \" + bonus.skill + \" : free speciality \" + bonus.speciality;\n    default:\n      return \"no\";\n  }\n}\n\nclass LoresheetOptionPopup extends React.PureComponent<\n  ILoresheetOptionPopupProps,\n  ILoresheetOptionPopupState\n> {\n  constructor(props: ILoresheetOptionPopupProps) {\n    super(props);\n\n    const initState: ILoresheetOptionPopupState = {};\n    if (this.props.cost.length === 1) {\n      initState.cost = this.props.cost[0];\n    }\n    this.state = initState;\n\n    this.renderComplexCost = this.renderComplexCost.bind(this);\n    this.renderPayload = this.renderPayload.bind(this);\n    this.buyButtonClick = this.buyButtonClick.bind(this);\n  }\n\n  public render() {\n    const data = getLoresheetOptionData(this.props.lsUid, this.props.uid);\n    const payload: React.ReactNode = this.renderPayload(\n      (data as IDataLoresheetOption).payload\n    );\n    const choices: React.ReactNode = data.perks.map((p: IPerk, id: number) =>\n      this.renderBonusChoices(p, id)\n    );\n    const complexCost: React.ReactNode =\n      typeof data.cost === \"number\" ? undefined : this.renderComplexCost();\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalHeader toggle={this.props.toggle}>{data.type}</ModalHeader>\n        <ModalBody>\n          {data.description}\n          <hr />\n          {[payload, choices, complexCost]}\n        </ModalBody>\n        <ModalFooter>{this.renderBuyButton()}</ModalFooter>\n      </Modal>\n    );\n  }\n\n  private renderBonusChoices(perk: IPerk, key: any): React.ReactNode {\n    if (perk.type !== bonuses.BONUS_ONE_AMONG_N) {\n      return;\n    }\n    const onChange = (all: any) => {\n      /* tslint:disable:no-console */\n      console.log(all.target.value);\n    };\n    return (\n      <div key={\"bonus_\" + key}>\n        {Object.keys(perk.bonuses).map((bonusKey: string) => (\n          <div key={bonusKey}>\n            <input\n              type=\"radio\"\n              key={\"radio_bonus_\" + key}\n              name={\"bonus_\" + key}\n              onChange={onChange}\n            />\n            {fromBonusToString(perk.bonuses[bonusKey])}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private renderPayload(payload?: string): React.ReactNode {\n    if (!payload) {\n      return;\n    }\n    const onChange = (p: string) => {\n      this.setState({\n        cost: this.state.cost,\n        payload: p\n      });\n    };\n    const notNull = (s: string) => s.length > 0;\n    return (\n      <EditText\n        key={\"payload\"}\n        header={payload}\n        default={this.state.payload}\n        validate={notNull}\n        onSubmit={onChange}\n      />\n    );\n  }\n\n  private renderComplexCost(): React.ReactNode {\n    const onChange = (idx: number) => {\n      this.setState({\n        cost: this.props.cost[idx],\n        payload: this.state.payload\n      });\n    };\n\n    let marks = {};\n    this.props.cost.forEach((cost: ICost, idx: number) => {\n      const newMarks = {\n        [idx]: {\n          label: cost.original.toString(),\n          style: { color: cost.canPay ? \"black\" : \"light-grey\" }\n        }\n      };\n      marks = { ...marks, ...newMarks };\n    });\n    return (\n      <div key=\"cost\">\n        <Slider\n          min={0}\n          max={this.props.cost.length - 1} // 0-indexed\n          marks={marks}\n          included={false}\n          onChange={onChange}\n          step={null}\n        />\n        <br />\n      </div>\n    );\n  }\n\n  private renderBuyButton(): React.ReactNode {\n    const data = getLoresheetOptionData(this.props.lsUid, this.props.uid);\n    const requirePayload: React.ReactNode = (data as IDataLoresheetOption)\n      .payload\n      ? true\n      : false;\n    const activePayload =\n      !requirePayload || (this.state.payload && this.state.payload.length > 0);\n    const activeCost = this.state.cost ? this.state.cost.canPay : false;\n    const active = activePayload && activeCost;\n\n    return (\n      <Button disabled={!active} color=\"info\" onClick={this.buyButtonClick}>\n        Pay\n      </Button>\n    );\n  }\n\n  private buyButtonClick(): void {\n    if (this.state.cost && this.state.cost.canPay) {\n      this.props.onBuy(this.state.cost, this.state.payload);\n      this.props.toggle();\n      this.setState({});\n    }\n  }\n}\n\nexport default LoresheetOptionPopup;\n","import * as React from \"react\";\nimport { Icon } from \"react-fa\";\n\nimport { getLoresheetOptionData, gotName } from \"../../data/loresheets\";\nimport { ICost } from \"../../state/costs\";\nimport LoresheetOptionPopup from \"./LoresheetOptionPopup\";\n\nexport interface ILoresheetOptionProps {\n  lsUid: string;\n  uid: string;\n  known: boolean;\n  cost: ICost[];\n  canBuy: boolean;\n  onBuy: (cost: ICost) => void;\n  payloads?: any[];\n}\n\ninterface ILoresheetOptionState {\n  isModalOpen: boolean;\n}\n\nclass LoresheetOption extends React.PureComponent<\n  ILoresheetOptionProps,\n  ILoresheetOptionState\n> {\n  constructor(props: ILoresheetOptionProps) {\n    super(props);\n\n    this.state = { isModalOpen: false };\n\n    this.renderButton = this.renderButton.bind(this);\n\n    this.renderKnown = this.renderKnown.bind(this);\n    this.renderNotKnown = this.renderNotKnown.bind(this);\n    this.onRowClickBuy = this.onRowClickBuy.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  public render() {\n    const data = getLoresheetOptionData(this.props.lsUid, this.props.uid);\n    if (data === undefined) {\n      return;\n    }\n\n    if (!this.props.known) {\n      return this.renderNotKnown();\n    } else {\n      return this.renderKnown();\n    }\n  }\n\n  private renderButton(canBuy: boolean): JSX.Element {\n    if (canBuy) {\n      return (\n        <button color=\"success\">\n          <Icon name=\"graduation-cap\" />\n        </button>\n      );\n    } else {\n      return (\n        <button color=\"danger\">\n          <Icon name=\"times\" />\n        </button>\n      );\n    }\n  }\n\n  private fromCostToString(cost: number | { min: number; max: number }) {\n    if (typeof cost === \"number\") {\n      return cost;\n    } else {\n      return cost.min + \"-\" + cost.max;\n    }\n  }\n\n  private renderDescription(value: string): JSX.Element {\n    const data = getLoresheetOptionData(this.props.lsUid, this.props.uid);\n    if (gotName(this.props.lsUid)) {\n      return (\n        <span>\n          <b>{data.name + \".\"}</b>\n          {\" \" + value}\n        </span>\n      );\n    } else {\n      return <span>{value}</span>;\n    }\n  }\n\n  private renderKnown(): JSX.Element | JSX.Element[] {\n    const data = getLoresheetOptionData(this.props.lsUid, this.props.uid);\n    if (this.props.payloads) {\n      return this.props.payloads.map((value, index) => {\n        return (\n          <tr key={\"known_\" + data.uid + \"_\" + index}>\n            <td>{data.type}</td>\n            <td>{this.fromCostToString(data.cost)}</td>\n            <td>{this.renderDescription(value)}</td>\n            <td />\n          </tr>\n        );\n      });\n    } else {\n      return (\n        <tr key={\"known_\" + data.uid}>\n          <td>{data.type}</td>\n          <td>{this.fromCostToString(data.cost)}</td>\n          <td>{this.renderDescription(data.description)}</td>\n          <td />\n        </tr>\n      );\n    }\n  }\n\n  private renderNotKnown(): JSX.Element {\n    const data = getLoresheetOptionData(this.props.lsUid, this.props.uid);\n    const canBuyOneOrMore =\n      this.props.canBuy &&\n      this.props.cost\n        .map(cost => cost.canPay)\n        .reduce(\n          (previousValue, currentValue) => previousValue || currentValue,\n          false\n        );\n    return (\n      <tr\n        key={\"unknown_\" + data.uid}\n        role=\"button\"\n        onClick={this.onRowClickBuy}\n      >\n        <LoresheetOptionPopup\n          lsUid={this.props.lsUid}\n          uid={this.props.uid}\n          cost={this.props.cost}\n          onBuy={this.props.onBuy}\n          isOpen={this.state.isModalOpen}\n          toggle={this.toggleModal}\n        />\n        <td>{data.type}</td>\n        <td>{this.fromCostToString(data.cost)}</td>\n        <td>{this.renderDescription(data.description)}</td>\n        <td>{this.renderButton(canBuyOneOrMore)}</td>\n      </tr>\n    );\n  }\n\n  private onRowClickBuy(): void {\n    const canBuyOneOrMore =\n      this.props.canBuy &&\n      this.props.cost\n        .map(cost => cost.canPay)\n        .reduce(\n          (previousValue, currentValue) => previousValue || currentValue,\n          false\n        );\n    if (canBuyOneOrMore && !this.state.isModalOpen) {\n      this.toggleModal();\n    }\n  }\n\n  private toggleModal(): void {\n    this.setState({ isModalOpen: !this.state.isModalOpen });\n  }\n}\n\nexport default LoresheetOption;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport { getCostBuyLoresheetOption, ICost } from \"../../state/costs\";\n\nimport * as actions from \"../../state/actions/loresheets\";\nimport {\n  canBuyLoresheetOption,\n  isLoresheetOptionPresent\n} from \"../../state/loresheets\";\nimport { IStoreState } from \"../../state/type\";\n\nimport LoresheetOption, {\n  ILoresheetOptionProps\n} from \"../../components/Character/LoresheetOption\";\n\ninterface IMapStateToProps {\n  lsUid: string;\n  uid: string;\n  known: boolean;\n  canBuy: boolean;\n  cost: ICost[];\n  payloads?: any[];\n}\n\ninterface IMapDispatchToProps {\n  onBuy: (cost: ICost) => void;\n}\n\ninterface IProps {\n  lsUid: string;\n  uid: string;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  const lsState = state.loresheets[props.lsUid];\n  let payloads;\n  if (lsState) {\n    const optState = lsState.filter(o => o.uid === props.uid);\n    if (optState) {\n      const array = optState.map(o => o.payload !== undefined);\n      if (array.length > 0) {\n        const gotPayload = array.reduce((p, c) => p && c);\n        if (gotPayload) {\n          payloads = optState.map(o => o.payload);\n        }\n      }\n    }\n  }\n  return {\n    canBuy: canBuyLoresheetOption(state.loresheets, props.lsUid, props.uid),\n    cost: getCostBuyLoresheetOption(state, props.lsUid, props.uid),\n    known: isLoresheetOptionPresent(state.loresheets, props.lsUid, props.uid),\n    lsUid: props.lsUid,\n    payloads,\n    uid: props.uid\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onBuy: (cost: ICost, payload?: string) =>\n      dispatch(actions.buyOption(props.lsUid, props.uid, cost, payload))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): ILoresheetOptionProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(LoresheetOption);\n","import * as React from \"react\";\nimport Icon from \"react-fa\";\n\nimport { getLoresheetData, IDataLoresheet } from \"../../data/loresheets\";\nimport { ICost } from \"../../state/costs\";\n\nimport LoresheetOption from \"../../containers/Character/LoresheetOption\";\n\nexport interface ILoresheetProps {\n  uid: string;\n  known: boolean;\n  cost: ICost;\n  canOpen: boolean;\n  onOpen: (cost: ICost) => void;\n}\n\nclass Loresheet extends React.PureComponent<ILoresheetProps, {}> {\n  constructor(props: ILoresheetProps) {\n    super(props);\n\n    this.renderOptions = this.renderOptions.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  public render() {\n    const data = getLoresheetData(this.props.uid) as IDataLoresheet;\n    return (\n      <div>\n        <div className=\"Grid\" style={{ justifyContent: \"space-between\" }}>\n          <h4>{data.name}</h4>\n          <span style={{ justifyContent: \"flex-end\" }}>\n            {this.renderButton()}\n          </span>\n        </div>\n        <div>\n          <p>{data.description}</p>\n        </div>\n        <div>{this.renderOptions(data)}</div>\n      </div>\n    );\n  }\n\n  private renderOptions(data: IDataLoresheet): JSX.Element {\n    if (data.options.length > 0) {\n      return (\n        <table>\n          <thead>\n            <tr>\n              <th>Type</th>\n              <th>Cost</th>\n              <th>Effect</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {data.options.map(o => (\n              <LoresheetOption key={o.uid} lsUid={data.uid} uid={o.uid} />\n            ))}\n          </tbody>\n        </table>\n      );\n    } else {\n      return <div />;\n    }\n  }\n\n  private renderButton(): JSX.Element {\n    const onClick = () => this.props.onOpen(this.props.cost);\n    if (this.props.canOpen && this.props.cost.canPay) {\n      return (\n        <button color=\"success\" onClick={onClick}>\n          <Icon name=\"graduation-cap\" />\n        </button>\n      );\n    } else if (this.props.known) {\n      return (\n        <button color=\"primary\" disabled={true}>\n          <Icon name=\"leanpub\" />\n        </button>\n      );\n    } else {\n      return (\n        <button color=\"danger\">\n          <Icon name=\"times\" />\n        </button>\n      );\n    }\n  }\n}\n\nexport default Loresheet;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport { getCostOpenLoresheet, ICost } from \"../../state/costs\";\n\nimport * as actions from \"../../state/actions/loresheets\";\nimport { canOpenLoresheet, isLoresheetPresent } from \"../../state/loresheets\";\nimport { IStoreState } from \"../../state/type\";\n\nimport Loresheet, {\n  ILoresheetProps\n} from \"../../components/Character/Loresheet\";\n\ninterface IMapStateToProps {\n  canOpen: boolean;\n  cost: ICost;\n  known: boolean;\n  uid: string;\n}\n\ninterface IMapDispatchToProps {\n  onOpen: (cost: ICost) => void;\n}\n\ninterface IProps {\n  uid: string;\n}\n\nfunction mapStateToProps(state: IStoreState, props: IProps): IMapStateToProps {\n  return {\n    canOpen: canOpenLoresheet(state, props.uid),\n    cost: getCostOpenLoresheet(state, props.uid),\n    known: isLoresheetPresent(state.loresheets, props.uid),\n    uid: props.uid\n  };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>,\n  props: IProps\n): IMapDispatchToProps {\n  return {\n    onOpen: (cost: ICost) => dispatch(actions.open(props.uid, cost))\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): ILoresheetProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Loresheet);\n","import * as React from \"react\";\n\nimport SelectorList, { IOption } from \"../../components/SelectorList\";\n\nimport Loresheet from \"../../containers/Character/Loresheet\";\nimport {\n  getLoresheetCategories,\n  getLoresheets,\n  IDataLoresheet,\n  IDataLoresheetFilter\n} from \"../../data/loresheets\";\n\ninterface ILoresheetsListProps {\n  loresheetFilter: IDataLoresheetFilter;\n}\n\nclass LoresheetsList extends React.PureComponent<ILoresheetsListProps, {}> {\n  constructor(props: ILoresheetsListProps) {\n    super(props);\n\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  public render() {\n    const nestedOptions = getLoresheetCategories(\n      this.props.loresheetFilter\n    ).map(category => {\n      const categories: IOption[] = [\n        { id: category, label: category, disabled: true }\n      ];\n      const lsInCategory: IOption[] = getLoresheets(\n        ls => ls.category === category\n      ).map((ls: IDataLoresheet) => ({\n        disabled: false,\n        id: ls.uid,\n        label: ls.name,\n        meta: ls.name + \",\" + category\n      }));\n      return categories.concat(lsInCategory);\n    });\n\n    const options = ([] as IOption[]).concat(...nestedOptions); // Flattening\n\n    return (\n      <SelectorList\n        options={options}\n        preSelected={[]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n\n  private renderItem(uid: string): JSX.Element {\n    return <Loresheet uid={uid} />;\n  }\n}\n\nexport default LoresheetsList;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport LoresheetsList from \"../components/Character/LoresheetsList\";\nimport { isLoresheet } from \"../data/loresheets\";\n\nclass RouteLoresheets extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <LoresheetsList loresheetFilter={isLoresheet} />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteLoresheets;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport LoresheetsList from \"../components/Character/LoresheetsList\";\nimport { isSecretArts } from \"../data/loresheets\";\n\nclass RouteLoresheets extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <LoresheetsList loresheetFilter={isSecretArts} />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteLoresheets;\n","import * as React from \"react\";\n\nimport { IAction } from \"../../state/actions/types\";\n\nexport interface IHistoryProps {\n  history: IAction[];\n  onDelete: (id: number) => void;\n}\n\nexport interface IHistoryState {\n  hoverIndex: number;\n}\n\nclass History extends React.PureComponent<IHistoryProps, IHistoryState> {\n  constructor(props: IHistoryProps) {\n    super(props);\n\n    this.state = {\n      hoverIndex: this.props.history.length\n    };\n\n    this.renderHistoryAction.bind(this);\n    this.rollbackHistory.bind(this);\n  }\n\n  public render() {\n    return (\n      <div className=\"History\">\n        <div>\n          {this.props.history.map((action: IAction, index: number) =>\n            this.renderHistoryAction(action, index)\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private renderHistoryAction(action: IAction, index: number): JSX.Element {\n    const onClick = () => this.rollbackHistory(index);\n    return (\n      <div key={\"rowHistory_\" + index} onClick={onClick}>\n        <div>{index + 1 + \" \" + action.type}</div>\n        <div>{JSON.stringify(action)}</div>\n      </div>\n    );\n  }\n\n  private rollbackHistory(index: number): void {\n    this.props.onDelete(index);\n  }\n}\n\nexport default History;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ActionType } from \"typesafe-actions\";\n\nimport History, { IHistoryProps } from \"../../components/Character/History\";\n\nimport * as actions from \"../../state/actions/history\";\nimport { IAction } from \"../../state/actions/types\";\nimport { IStoreState } from \"../../state/type\";\n\ninterface IMapStateToProps {\n  history: IAction[];\n}\n\ninterface IMapDispatchToProps {\n  onDelete: (id: number) => void;\n}\n\nfunction mapStateToProps(state: IStoreState): IMapStateToProps {\n  return { history: state.history };\n}\n\nfunction mapDispatchToProps(\n  dispatch: Dispatch<ActionType<typeof actions>>\n): IMapDispatchToProps {\n  return {\n    onDelete: (id: number) => {\n      dispatch(actions.historyDeleteUpTo(id));\n    }\n  };\n}\n\nfunction mergeProps(\n  propsFromState: IMapStateToProps,\n  propsForDispatch: IMapDispatchToProps\n): IHistoryProps {\n  return Object.assign({}, propsFromState, propsForDispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(History);\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport AppIntro from \"../components/AppIntro\";\nimport AppPage from \"../components/AppPage\";\nimport History from \"../containers/Character/History\";\n\nclass RouteHistory extends React.PureComponent<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <AppIntro>Empty Intro</AppIntro>\n        <AppPage>\n          <History />\n        </AppPage>\n      </div>\n    );\n  }\n}\n\nexport default RouteHistory;\n","import * as React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport AppHeader from \"../components/AppHeader\";\n\n/* Pages */\n/* tslint:disable ordered-imports */\nimport Homepage from \"../routes/Homepage\";\n\nimport Skills from \"../routes/Skills\";\nimport Virtues from \"../routes/Virtues\";\nimport Chi from \"../routes/Chi\";\nimport Equipment from \"../routes/Equipment\";\nimport Conditions from \"../routes/Conditions\";\nimport KungFu from \"../routes/KungFu\";\nimport Loresheets from \"../routes/Loresheets\";\nimport SecretArts from \"../routes/SecretArts\";\n\nimport History from \"../routes/History\";\n\nclass App extends React.PureComponent<{}, {}> {\n  public render() {\n    return (\n      <BrowserRouter>\n        <div className=\"lotwcs\">\n          <AppHeader />\n          <Route exact={true} path=\"/\" component={Homepage} />\n          <Route exact={true} path=\"/skills\" component={Skills} />\n          <Route exact={true} path=\"/chi\" component={Chi} />\n          <Route exact={true} path=\"/virtues\" component={Virtues} />\n          <Route exact={true} path=\"/equipment\" component={Equipment} />\n          <Route exact={true} path=\"/conditions\" component={Conditions} />\n          <Route exact={true} path=\"/kungfu\" component={KungFu} />\n          <Route exact={true} path=\"/loresheets\" component={Loresheets} />\n          <Route exact={true} path=\"/secretarts\" component={SecretArts} />\n          <Route exact={true} path=\"/history\" component={History} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable import/first */\n/* Redux and state management */\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\n/* React and DOM management */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { IAction } from \"./state/actions/types\";\nimport { initialStateFactory } from \"./state/initial\";\nimport { middleware as checkAutomatics } from \"./state/middleware/automatics\";\nimport { middleware as pushToHistory } from \"./state/middleware/history\";\nimport { globalReducer } from \"./state/reducers/global\";\nimport { IStoreState } from \"./state/type\";\n\nconst store = createStore<IStoreState, IAction, any, any>(\n  globalReducer,\n  initialStateFactory(),\n  compose(\n    applyMiddleware(checkAutomatics),\n    applyMiddleware(pushToHistory),\n    devToolsEnhancer({})\n  )\n);\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Grid.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <div>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </div>,\n  document.getElementById(\"root\") as HTMLElement\n);\n\nserviceWorker.register();\n","import { Dispatch, Store } from \"redux\";\nimport { getType } from \"typesafe-actions\";\n\nimport * as actions from \"../actions/history\";\nimport { IAction } from \"../actions/types\";\nimport { IStoreState } from \"../type\";\n\nexport const middleware = (store: Store<IStoreState>) => (\n  next: Dispatch<IAction>\n) => (action: IAction) => {\n  const result = next(action);\n  if (action.type !== getType(actions.historyDeleteUpTo)) {\n    store.getState().history.push(action);\n  }\n  return result;\n};\n"],"sourceRoot":""}